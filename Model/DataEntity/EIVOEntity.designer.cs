#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model.DataEntity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EIVO03")]
	public partial class EIVOEntityDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertOrganization(Organization instance);
    partial void UpdateOrganization(Organization instance);
    partial void DeleteOrganization(Organization instance);
    partial void InsertUserRole(UserRole instance);
    partial void UpdateUserRole(UserRole instance);
    partial void DeleteUserRole(UserRole instance);
    partial void InsertOrganizationCategory(OrganizationCategory instance);
    partial void UpdateOrganizationCategory(OrganizationCategory instance);
    partial void DeleteOrganizationCategory(OrganizationCategory instance);
    partial void InsertMenuControl(MenuControl instance);
    partial void UpdateMenuControl(MenuControl instance);
    partial void DeleteMenuControl(MenuControl instance);
    partial void InsertUserMenu(UserMenu instance);
    partial void UpdateUserMenu(UserMenu instance);
    partial void DeleteUserMenu(UserMenu instance);
    partial void InsertUserAuth(UserAuth instance);
    partial void UpdateUserAuth(UserAuth instance);
    partial void DeleteUserAuth(UserAuth instance);
    partial void InsertCDS_Document(CDS_Document instance);
    partial void UpdateCDS_Document(CDS_Document instance);
    partial void DeleteCDS_Document(CDS_Document instance);
    partial void InsertInvoiceAllowanceDetail(InvoiceAllowanceDetail instance);
    partial void UpdateInvoiceAllowanceDetail(InvoiceAllowanceDetail instance);
    partial void DeleteInvoiceAllowanceDetail(InvoiceAllowanceDetail instance);
    partial void InsertInvoiceByHousehold(InvoiceByHousehold instance);
    partial void UpdateInvoiceByHousehold(InvoiceByHousehold instance);
    partial void DeleteInvoiceByHousehold(InvoiceByHousehold instance);
    partial void InsertInvoiceCancellation(InvoiceCancellation instance);
    partial void UpdateInvoiceCancellation(InvoiceCancellation instance);
    partial void DeleteInvoiceCancellation(InvoiceCancellation instance);
    partial void InsertInvoiceDetail(InvoiceDetail instance);
    partial void UpdateInvoiceDetail(InvoiceDetail instance);
    partial void DeleteInvoiceDetail(InvoiceDetail instance);
    partial void InsertInvoicePrintAssertion(InvoicePrintAssertion instance);
    partial void UpdateInvoicePrintAssertion(InvoicePrintAssertion instance);
    partial void DeleteInvoicePrintAssertion(InvoicePrintAssertion instance);
    partial void InsertInvoiceProduct(InvoiceProduct instance);
    partial void UpdateInvoiceProduct(InvoiceProduct instance);
    partial void DeleteInvoiceProduct(InvoiceProduct instance);
    partial void InsertInvoiceRejection(InvoiceRejection instance);
    partial void UpdateInvoiceRejection(InvoiceRejection instance);
    partial void DeleteInvoiceRejection(InvoiceRejection instance);
    partial void InsertInvoiceVoid(InvoiceVoid instance);
    partial void UpdateInvoiceVoid(InvoiceVoid instance);
    partial void DeleteInvoiceVoid(InvoiceVoid instance);
    partial void InsertCurrencyType(CurrencyType instance);
    partial void UpdateCurrencyType(CurrencyType instance);
    partial void DeleteCurrencyType(CurrencyType instance);
    partial void InsertWelfareReplication(WelfareReplication instance);
    partial void UpdateWelfareReplication(WelfareReplication instance);
    partial void DeleteWelfareReplication(WelfareReplication instance);
    partial void InsertInvoiceWelfareAgency(InvoiceWelfareAgency instance);
    partial void UpdateInvoiceWelfareAgency(InvoiceWelfareAgency instance);
    partial void DeleteInvoiceWelfareAgency(InvoiceWelfareAgency instance);
    partial void InsertWelfareAgency(WelfareAgency instance);
    partial void UpdateWelfareAgency(WelfareAgency instance);
    partial void DeleteWelfareAgency(WelfareAgency instance);
    partial void InsertInvoiceUserCarrierType(InvoiceUserCarrierType instance);
    partial void UpdateInvoiceUserCarrierType(InvoiceUserCarrierType instance);
    partial void DeleteInvoiceUserCarrierType(InvoiceUserCarrierType instance);
    partial void InsertInvoiceItem(InvoiceItem instance);
    partial void UpdateInvoiceItem(InvoiceItem instance);
    partial void DeleteInvoiceItem(InvoiceItem instance);
    partial void InsertDocumentType(DocumentType instance);
    partial void UpdateDocumentType(DocumentType instance);
    partial void DeleteDocumentType(DocumentType instance);
    partial void InsertUserProfileExtension(UserProfileExtension instance);
    partial void UpdateUserProfileExtension(UserProfileExtension instance);
    partial void DeleteUserProfileExtension(UserProfileExtension instance);
    partial void InsertUserProfileStatus(UserProfileStatus instance);
    partial void UpdateUserProfileStatus(UserProfileStatus instance);
    partial void DeleteUserProfileStatus(UserProfileStatus instance);
    partial void InsertExceptionReplication(ExceptionReplication instance);
    partial void UpdateExceptionReplication(ExceptionReplication instance);
    partial void DeleteExceptionReplication(ExceptionReplication instance);
    partial void InsertMemberCode(MemberCode instance);
    partial void UpdateMemberCode(MemberCode instance);
    partial void DeleteMemberCode(MemberCode instance);
    partial void InsertInvoiceUserCarrier(InvoiceUserCarrier instance);
    partial void UpdateInvoiceUserCarrier(InvoiceUserCarrier instance);
    partial void DeleteInvoiceUserCarrier(InvoiceUserCarrier instance);
    partial void InsertDocumentDispatch(DocumentDispatch instance);
    partial void UpdateDocumentDispatch(DocumentDispatch instance);
    partial void DeleteDocumentDispatch(DocumentDispatch instance);
    partial void InsertInvoiceAllowance(InvoiceAllowance instance);
    partial void UpdateInvoiceAllowance(InvoiceAllowance instance);
    partial void DeleteInvoiceAllowance(InvoiceAllowance instance);
    partial void InsertInvoiceNoAssignment(InvoiceNoAssignment instance);
    partial void UpdateInvoiceNoAssignment(InvoiceNoAssignment instance);
    partial void DeleteInvoiceNoAssignment(InvoiceNoAssignment instance);
    partial void InsertInvoiceNoInterval(InvoiceNoInterval instance);
    partial void UpdateInvoiceNoInterval(InvoiceNoInterval instance);
    partial void DeleteInvoiceNoInterval(InvoiceNoInterval instance);
    partial void InsertInvoiceTrackCode(InvoiceTrackCode instance);
    partial void UpdateInvoiceTrackCode(InvoiceTrackCode instance);
    partial void DeleteInvoiceTrackCode(InvoiceTrackCode instance);
    partial void InsertInvoiceTrackCodeAssignment(InvoiceTrackCodeAssignment instance);
    partial void UpdateInvoiceTrackCodeAssignment(InvoiceTrackCodeAssignment instance);
    partial void DeleteInvoiceTrackCodeAssignment(InvoiceTrackCodeAssignment instance);
    partial void InsertDocumentOwner(DocumentOwner instance);
    partial void UpdateDocumentOwner(DocumentOwner instance);
    partial void DeleteDocumentOwner(DocumentOwner instance);
    partial void InsertUniformInvoiceWinningNumber(UniformInvoiceWinningNumber instance);
    partial void UpdateUniformInvoiceWinningNumber(UniformInvoiceWinningNumber instance);
    partial void DeleteUniformInvoiceWinningNumber(UniformInvoiceWinningNumber instance);
    partial void InsertInvoiceWinningNumber(InvoiceWinningNumber instance);
    partial void UpdateInvoiceWinningNumber(InvoiceWinningNumber instance);
    partial void DeleteInvoiceWinningNumber(InvoiceWinningNumber instance);
    partial void InsertDocumentPrintLog(DocumentPrintLog instance);
    partial void UpdateDocumentPrintLog(DocumentPrintLog instance);
    partial void DeleteDocumentPrintLog(DocumentPrintLog instance);
    partial void InsertDocumentDownloadLog(DocumentDownloadLog instance);
    partial void UpdateDocumentDownloadLog(DocumentDownloadLog instance);
    partial void DeleteDocumentDownloadLog(DocumentDownloadLog instance);
    partial void InsertInvoicePaperRequest(InvoicePaperRequest instance);
    partial void UpdateInvoicePaperRequest(InvoicePaperRequest instance);
    partial void DeleteInvoicePaperRequest(InvoicePaperRequest instance);
    partial void InsertInvoicePurchaseOrderUpload(InvoicePurchaseOrderUpload instance);
    partial void UpdateInvoicePurchaseOrderUpload(InvoicePurchaseOrderUpload instance);
    partial void DeleteInvoicePurchaseOrderUpload(InvoicePurchaseOrderUpload instance);
    partial void InsertInvoiceCancellationUpload(InvoiceCancellationUpload instance);
    partial void UpdateInvoiceCancellationUpload(InvoiceCancellationUpload instance);
    partial void DeleteInvoiceCancellationUpload(InvoiceCancellationUpload instance);
    partial void InsertInvoiceCancellationUploadList(InvoiceCancellationUploadList instance);
    partial void UpdateInvoiceCancellationUploadList(InvoiceCancellationUploadList instance);
    partial void DeleteInvoiceCancellationUploadList(InvoiceCancellationUploadList instance);
    partial void InsertInvoicePrintQueue(InvoicePrintQueue instance);
    partial void UpdateInvoicePrintQueue(InvoicePrintQueue instance);
    partial void DeleteInvoicePrintQueue(InvoicePrintQueue instance);
    partial void InsertDocumentReplication(DocumentReplication instance);
    partial void UpdateDocumentReplication(DocumentReplication instance);
    partial void DeleteDocumentReplication(DocumentReplication instance);
    partial void InsertReplicationNotification(ReplicationNotification instance);
    partial void UpdateReplicationNotification(ReplicationNotification instance);
    partial void DeleteReplicationNotification(ReplicationNotification instance);
    partial void InsertUserRoleDefinition(UserRoleDefinition instance);
    partial void UpdateUserRoleDefinition(UserRoleDefinition instance);
    partial void DeleteUserRoleDefinition(UserRoleDefinition instance);
    partial void InsertCategoryDefinition(CategoryDefinition instance);
    partial void UpdateCategoryDefinition(CategoryDefinition instance);
    partial void DeleteCategoryDefinition(CategoryDefinition instance);
    partial void InsertOrganizationCategoryUserRole(OrganizationCategoryUserRole instance);
    partial void UpdateOrganizationCategoryUserRole(OrganizationCategoryUserRole instance);
    partial void DeleteOrganizationCategoryUserRole(OrganizationCategoryUserRole instance);
    partial void InsertB2BBuyerInvoiceTag(B2BBuyerInvoiceTag instance);
    partial void UpdateB2BBuyerInvoiceTag(B2BBuyerInvoiceTag instance);
    partial void DeleteB2BBuyerInvoiceTag(B2BBuyerInvoiceTag instance);
    partial void InsertDerivedDocument(DerivedDocument instance);
    partial void UpdateDerivedDocument(DerivedDocument instance);
    partial void DeleteDerivedDocument(DerivedDocument instance);
    partial void InsertInvoiceAmountType(InvoiceAmountType instance);
    partial void UpdateInvoiceAmountType(InvoiceAmountType instance);
    partial void DeleteInvoiceAmountType(InvoiceAmountType instance);
    partial void InsertInvoiceAllowanceBuyer(InvoiceAllowanceBuyer instance);
    partial void UpdateInvoiceAllowanceBuyer(InvoiceAllowanceBuyer instance);
    partial void DeleteInvoiceAllowanceBuyer(InvoiceAllowanceBuyer instance);
    partial void InsertInvoiceAllowanceSeller(InvoiceAllowanceSeller instance);
    partial void UpdateInvoiceAllowanceSeller(InvoiceAllowanceSeller instance);
    partial void DeleteInvoiceAllowanceSeller(InvoiceAllowanceSeller instance);
    partial void InsertInvoiceSeller(InvoiceSeller instance);
    partial void UpdateInvoiceSeller(InvoiceSeller instance);
    partial void DeleteInvoiceSeller(InvoiceSeller instance);
    partial void InsertEnterpriseGroup(EnterpriseGroup instance);
    partial void UpdateEnterpriseGroup(EnterpriseGroup instance);
    partial void DeleteEnterpriseGroup(EnterpriseGroup instance);
    partial void InsertEnterpriseGroupMember(EnterpriseGroupMember instance);
    partial void UpdateEnterpriseGroupMember(EnterpriseGroupMember instance);
    partial void DeleteEnterpriseGroupMember(EnterpriseGroupMember instance);
    partial void InsertBusinessType(BusinessType instance);
    partial void UpdateBusinessType(BusinessType instance);
    partial void DeleteBusinessType(BusinessType instance);
    partial void InsertDocumentFlow(DocumentFlow instance);
    partial void UpdateDocumentFlow(DocumentFlow instance);
    partial void DeleteDocumentFlow(DocumentFlow instance);
    partial void InsertDocumentFlowControl(DocumentFlowControl instance);
    partial void UpdateDocumentFlowControl(DocumentFlowControl instance);
    partial void DeleteDocumentFlowControl(DocumentFlowControl instance);
    partial void InsertDocumentTypeFlow(DocumentTypeFlow instance);
    partial void UpdateDocumentTypeFlow(DocumentTypeFlow instance);
    partial void DeleteDocumentTypeFlow(DocumentTypeFlow instance);
    partial void InsertDocumentFlowStep(DocumentFlowStep instance);
    partial void UpdateDocumentFlowStep(DocumentFlowStep instance);
    partial void DeleteDocumentFlowStep(DocumentFlowStep instance);
    partial void InsertDocumentProcessLog(DocumentProcessLog instance);
    partial void UpdateDocumentProcessLog(DocumentProcessLog instance);
    partial void DeleteDocumentProcessLog(DocumentProcessLog instance);
    partial void InsertLevelExpression(LevelExpression instance);
    partial void UpdateLevelExpression(LevelExpression instance);
    partial void DeleteLevelExpression(LevelExpression instance);
    partial void InsertCommonDocumentTypeFlow(CommonDocumentTypeFlow instance);
    partial void UpdateCommonDocumentTypeFlow(CommonDocumentTypeFlow instance);
    partial void DeleteCommonDocumentTypeFlow(CommonDocumentTypeFlow instance);
    partial void InsertBusinessRelationship(BusinessRelationship instance);
    partial void UpdateBusinessRelationship(BusinessRelationship instance);
    partial void DeleteBusinessRelationship(BusinessRelationship instance);
    partial void InsertReceiptDetail(ReceiptDetail instance);
    partial void UpdateReceiptDetail(ReceiptDetail instance);
    partial void DeleteReceiptDetail(ReceiptDetail instance);
    partial void InsertReceiptItem(ReceiptItem instance);
    partial void UpdateReceiptItem(ReceiptItem instance);
    partial void DeleteReceiptItem(ReceiptItem instance);
    partial void InsertReceiptCancellation(ReceiptCancellation instance);
    partial void UpdateReceiptCancellation(ReceiptCancellation instance);
    partial void DeleteReceiptCancellation(ReceiptCancellation instance);
    partial void InsertExceptionLog(ExceptionLog instance);
    partial void UpdateExceptionLog(ExceptionLog instance);
    partial void DeleteExceptionLog(ExceptionLog instance);
    partial void InsertUserProfile(UserProfile instance);
    partial void UpdateUserProfile(UserProfile instance);
    partial void DeleteUserProfile(UserProfile instance);
    partial void InsertOrganizationToken(OrganizationToken instance);
    partial void UpdateOrganizationToken(OrganizationToken instance);
    partial void DeleteOrganizationToken(OrganizationToken instance);
    partial void InsertUserToken(UserToken instance);
    partial void UpdateUserToken(UserToken instance);
    partial void DeleteUserToken(UserToken instance);
    partial void InsertAttachment(Attachment instance);
    partial void UpdateAttachment(Attachment instance);
    partial void DeleteAttachment(Attachment instance);
    partial void InsertInvoiceAllowanceItem(InvoiceAllowanceItem instance);
    partial void UpdateInvoiceAllowanceItem(InvoiceAllowanceItem instance);
    partial void DeleteInvoiceAllowanceItem(InvoiceAllowanceItem instance);
    partial void InsertInvoiceProductItem(InvoiceProductItem instance);
    partial void UpdateInvoiceProductItem(InvoiceProductItem instance);
    partial void DeleteInvoiceProductItem(InvoiceProductItem instance);
    partial void InsertEnterpriseGroupMemberToken(EnterpriseGroupMemberToken instance);
    partial void UpdateEnterpriseGroupMemberToken(EnterpriseGroupMemberToken instance);
    partial void DeleteEnterpriseGroupMemberToken(EnterpriseGroupMemberToken instance);
    partial void InsertDocumentFlowBranch(DocumentFlowBranch instance);
    partial void UpdateDocumentFlowBranch(DocumentFlowBranch instance);
    partial void DeleteDocumentFlowBranch(DocumentFlowBranch instance);
    partial void InsertDocumentReady(DocumentReady instance);
    partial void UpdateDocumentReady(DocumentReady instance);
    partial void DeleteDocumentReady(DocumentReady instance);
    partial void InsertDocumentAccessaryFlow(DocumentAccessaryFlow instance);
    partial void UpdateDocumentAccessaryFlow(DocumentAccessaryFlow instance);
    partial void DeleteDocumentAccessaryFlow(DocumentAccessaryFlow instance);
    partial void InsertInvoiceAllowanceItemExtension(InvoiceAllowanceItemExtension instance);
    partial void UpdateInvoiceAllowanceItemExtension(InvoiceAllowanceItemExtension instance);
    partial void DeleteInvoiceAllowanceItemExtension(InvoiceAllowanceItemExtension instance);
    partial void InsertCALog(CALog instance);
    partial void UpdateCALog(CALog instance);
    partial void DeleteCALog(CALog instance);
    partial void InsertDocumentPrintQueue(DocumentPrintQueue instance);
    partial void UpdateDocumentPrintQueue(DocumentPrintQueue instance);
    partial void DeleteDocumentPrintQueue(DocumentPrintQueue instance);
    partial void InsertSMSNotificationQueue(SMSNotificationQueue instance);
    partial void UpdateSMSNotificationQueue(SMSNotificationQueue instance);
    partial void DeleteSMSNotificationQueue(SMSNotificationQueue instance);
    partial void InsertSMSNotificationLog(SMSNotificationLog instance);
    partial void UpdateSMSNotificationLog(SMSNotificationLog instance);
    partial void DeleteSMSNotificationLog(SMSNotificationLog instance);
    partial void InsertDocumentMappingQueue(DocumentMappingQueue instance);
    partial void UpdateDocumentMappingQueue(DocumentMappingQueue instance);
    partial void DeleteDocumentMappingQueue(DocumentMappingQueue instance);
    partial void InsertDocumentDownloadQueue(DocumentDownloadQueue instance);
    partial void UpdateDocumentDownloadQueue(DocumentDownloadQueue instance);
    partial void DeleteDocumentDownloadQueue(DocumentDownloadQueue instance);
    partial void InsertInvoiceCarrier(InvoiceCarrier instance);
    partial void UpdateInvoiceCarrier(InvoiceCarrier instance);
    partial void DeleteInvoiceCarrier(InvoiceCarrier instance);
    partial void InsertInvoiceDonation(InvoiceDonation instance);
    partial void UpdateInvoiceDonation(InvoiceDonation instance);
    partial void DeleteInvoiceDonation(InvoiceDonation instance);
    partial void InsertUnassignedInvoiceNo(UnassignedInvoiceNo instance);
    partial void UpdateUnassignedInvoiceNo(UnassignedInvoiceNo instance);
    partial void DeleteUnassignedInvoiceNo(UnassignedInvoiceNo instance);
    partial void InsertInvoiceAllowanceCancellation(InvoiceAllowanceCancellation instance);
    partial void UpdateInvoiceAllowanceCancellation(InvoiceAllowanceCancellation instance);
    partial void DeleteInvoiceAllowanceCancellation(InvoiceAllowanceCancellation instance);
    partial void InsertOrganizationStatus(OrganizationStatus instance);
    partial void UpdateOrganizationStatus(OrganizationStatus instance);
    partial void DeleteOrganizationStatus(OrganizationStatus instance);
    partial void InsertSystemMessage(SystemMessage instance);
    partial void UpdateSystemMessage(SystemMessage instance);
    partial void DeleteSystemMessage(SystemMessage instance);
    partial void InsertInvoiceDeliveryTracking(InvoiceDeliveryTracking instance);
    partial void UpdateInvoiceDeliveryTracking(InvoiceDeliveryTracking instance);
    partial void DeleteInvoiceDeliveryTracking(InvoiceDeliveryTracking instance);
    partial void InsertDocumentSubscriptionQueue(DocumentSubscriptionQueue instance);
    partial void UpdateDocumentSubscriptionQueue(DocumentSubscriptionQueue instance);
    partial void DeleteDocumentSubscriptionQueue(DocumentSubscriptionQueue instance);
    partial void InsertInvoiceBuyer(InvoiceBuyer instance);
    partial void UpdateInvoiceBuyer(InvoiceBuyer instance);
    partial void DeleteInvoiceBuyer(InvoiceBuyer instance);
    partial void InsertInvoiceIssuerAgent(InvoiceIssuerAgent instance);
    partial void UpdateInvoiceIssuerAgent(InvoiceIssuerAgent instance);
    partial void DeleteInvoiceIssuerAgent(InvoiceIssuerAgent instance);
    partial void InsertInvoicePurchaseOrder(InvoicePurchaseOrder instance);
    partial void UpdateInvoicePurchaseOrder(InvoicePurchaseOrder instance);
    partial void DeleteInvoicePurchaseOrder(InvoicePurchaseOrder instance);
    partial void InsertInvoiceItemExtension(InvoiceItemExtension instance);
    partial void UpdateInvoiceItemExtension(InvoiceItemExtension instance);
    partial void DeleteInvoiceItemExtension(InvoiceItemExtension instance);
    partial void InsertBlankInvoiceNoSummary(BlankInvoiceNoSummary instance);
    partial void UpdateBlankInvoiceNoSummary(BlankInvoiceNoSummary instance);
    partial void DeleteBlankInvoiceNoSummary(BlankInvoiceNoSummary instance);
    partial void InsertProductItemCategory(ProductItemCategory instance);
    partial void UpdateProductItemCategory(ProductItemCategory instance);
    partial void DeleteProductItemCategory(ProductItemCategory instance);
    partial void InsertInvoiceNoSegmentDisposition(InvoiceNoSegmentDisposition instance);
    partial void UpdateInvoiceNoSegmentDisposition(InvoiceNoSegmentDisposition instance);
    partial void DeleteInvoiceNoSegmentDisposition(InvoiceNoSegmentDisposition instance);
    partial void InsertInvoiceNoSegment(InvoiceNoSegment instance);
    partial void UpdateInvoiceNoSegment(InvoiceNoSegment instance);
    partial void DeleteInvoiceNoSegment(InvoiceNoSegment instance);
    partial void InsertPOSDevice(POSDevice instance);
    partial void UpdatePOSDevice(POSDevice instance);
    partial void DeletePOSDevice(POSDevice instance);
    partial void InsertPOSInvoiceNoSegment(POSInvoiceNoSegment instance);
    partial void UpdatePOSInvoiceNoSegment(POSInvoiceNoSegment instance);
    partial void DeletePOSInvoiceNoSegment(POSInvoiceNoSegment instance);
    partial void InsertOrganizationExtension(OrganizationExtension instance);
    partial void UpdateOrganizationExtension(OrganizationExtension instance);
    partial void DeleteOrganizationExtension(OrganizationExtension instance);
    #endregion
		
		public EIVOEntityDataContext() : 
				base(global::Model.Properties.Settings.Default.eInvoiceConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EIVOEntityDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EIVOEntityDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EIVOEntityDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EIVOEntityDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Organization> Organization
		{
			get
			{
				return this.GetTable<Organization>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRole
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
		
		public System.Data.Linq.Table<OrganizationCategory> OrganizationCategory
		{
			get
			{
				return this.GetTable<OrganizationCategory>();
			}
		}
		
		public System.Data.Linq.Table<MenuControl> MenuControl
		{
			get
			{
				return this.GetTable<MenuControl>();
			}
		}
		
		public System.Data.Linq.Table<UserMenu> UserMenu
		{
			get
			{
				return this.GetTable<UserMenu>();
			}
		}
		
		public System.Data.Linq.Table<UserAuth> UserAuth
		{
			get
			{
				return this.GetTable<UserAuth>();
			}
		}
		
		public System.Data.Linq.Table<CDS_Document> CDS_Documents
		{
			get
			{
				return this.GetTable<CDS_Document>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceAllowanceDetail> InvoiceAllowanceDetails
		{
			get
			{
				return this.GetTable<InvoiceAllowanceDetail>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceByHousehold> InvoiceByHouseholds
		{
			get
			{
				return this.GetTable<InvoiceByHousehold>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceCancellation> InvoiceCancellations
		{
			get
			{
				return this.GetTable<InvoiceCancellation>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceDetail> InvoiceDetails
		{
			get
			{
				return this.GetTable<InvoiceDetail>();
			}
		}
		
		public System.Data.Linq.Table<InvoicePrintAssertion> InvoicePrintAssertions
		{
			get
			{
				return this.GetTable<InvoicePrintAssertion>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceProduct> InvoiceProducts
		{
			get
			{
				return this.GetTable<InvoiceProduct>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceRejection> InvoiceRejections
		{
			get
			{
				return this.GetTable<InvoiceRejection>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceVoid> InvoiceVoids
		{
			get
			{
				return this.GetTable<InvoiceVoid>();
			}
		}
		
		public System.Data.Linq.Table<CurrencyType> CurrencyTypes
		{
			get
			{
				return this.GetTable<CurrencyType>();
			}
		}
		
		public System.Data.Linq.Table<WelfareReplication> WelfareReplications
		{
			get
			{
				return this.GetTable<WelfareReplication>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceWelfareAgency> InvoiceWelfareAgencies
		{
			get
			{
				return this.GetTable<InvoiceWelfareAgency>();
			}
		}
		
		public System.Data.Linq.Table<WelfareAgency> WelfareAgencies
		{
			get
			{
				return this.GetTable<WelfareAgency>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceUserCarrierType> InvoiceUserCarrierTypes
		{
			get
			{
				return this.GetTable<InvoiceUserCarrierType>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceItem> InvoiceItems
		{
			get
			{
				return this.GetTable<InvoiceItem>();
			}
		}
		
		public System.Data.Linq.Table<DocumentType> DocumentTypes
		{
			get
			{
				return this.GetTable<DocumentType>();
			}
		}
		
		public System.Data.Linq.Table<viewDomationListCountGroup> viewDomationListCountGroups
		{
			get
			{
				return this.GetTable<viewDomationListCountGroup>();
			}
		}
		
		public System.Data.Linq.Table<UserProfileExtension> UserProfileExtensions
		{
			get
			{
				return this.GetTable<UserProfileExtension>();
			}
		}
		
		public System.Data.Linq.Table<UserProfileStatus> UserProfileStatus
		{
			get
			{
				return this.GetTable<UserProfileStatus>();
			}
		}
		
		public System.Data.Linq.Table<ExceptionReplication> ExceptionReplications
		{
			get
			{
				return this.GetTable<ExceptionReplication>();
			}
		}
		
		public System.Data.Linq.Table<MemberCode> MemberCodes
		{
			get
			{
				return this.GetTable<MemberCode>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceUserCarrier> InvoiceUserCarriers
		{
			get
			{
				return this.GetTable<InvoiceUserCarrier>();
			}
		}
		
		public System.Data.Linq.Table<DocumentDispatch> DocumentDispatches
		{
			get
			{
				return this.GetTable<DocumentDispatch>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceAllowance> InvoiceAllowances
		{
			get
			{
				return this.GetTable<InvoiceAllowance>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceNoAssignment> InvoiceNoAssignments
		{
			get
			{
				return this.GetTable<InvoiceNoAssignment>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceNoInterval> InvoiceNoIntervals
		{
			get
			{
				return this.GetTable<InvoiceNoInterval>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceTrackCode> InvoiceTrackCodes
		{
			get
			{
				return this.GetTable<InvoiceTrackCode>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceTrackCodeAssignment> InvoiceTrackCodeAssignments
		{
			get
			{
				return this.GetTable<InvoiceTrackCodeAssignment>();
			}
		}
		
		public System.Data.Linq.Table<DocumentOwner> DocumentOwners
		{
			get
			{
				return this.GetTable<DocumentOwner>();
			}
		}
		
		public System.Data.Linq.Table<UniformInvoiceWinningNumber> UniformInvoiceWinningNumbers
		{
			get
			{
				return this.GetTable<UniformInvoiceWinningNumber>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceWinningNumber> InvoiceWinningNumbers
		{
			get
			{
				return this.GetTable<InvoiceWinningNumber>();
			}
		}
		
		public System.Data.Linq.Table<DocumentPrintLog> DocumentPrintLogs
		{
			get
			{
				return this.GetTable<DocumentPrintLog>();
			}
		}
		
		public System.Data.Linq.Table<DocumentDownloadLog> DocumentDownloadLogs
		{
			get
			{
				return this.GetTable<DocumentDownloadLog>();
			}
		}
		
		public System.Data.Linq.Table<InvoicePaperRequest> InvoicePaperRequests
		{
			get
			{
				return this.GetTable<InvoicePaperRequest>();
			}
		}
		
		public System.Data.Linq.Table<InvoicePurchaseOrderUpload> InvoicePurchaseOrderUploads
		{
			get
			{
				return this.GetTable<InvoicePurchaseOrderUpload>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceCancellationUpload> InvoiceCancellationUploads
		{
			get
			{
				return this.GetTable<InvoiceCancellationUpload>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceCancellationUploadList> InvoiceCancellationUploadLists
		{
			get
			{
				return this.GetTable<InvoiceCancellationUploadList>();
			}
		}
		
		public System.Data.Linq.Table<InvoicePrintQueue> InvoicePrintQueues
		{
			get
			{
				return this.GetTable<InvoicePrintQueue>();
			}
		}
		
		public System.Data.Linq.Table<DocumentReplication> DocumentReplications
		{
			get
			{
				return this.GetTable<DocumentReplication>();
			}
		}
		
		public System.Data.Linq.Table<ReplicationNotification> ReplicationNotifications
		{
			get
			{
				return this.GetTable<ReplicationNotification>();
			}
		}
		
		public System.Data.Linq.Table<UserRoleDefinition> UserRoleDefinitions
		{
			get
			{
				return this.GetTable<UserRoleDefinition>();
			}
		}
		
		public System.Data.Linq.Table<CategoryDefinition> CategoryDefinitions
		{
			get
			{
				return this.GetTable<CategoryDefinition>();
			}
		}
		
		public System.Data.Linq.Table<OrganizationCategoryUserRole> OrganizationCategoryUserRoles
		{
			get
			{
				return this.GetTable<OrganizationCategoryUserRole>();
			}
		}
		
		public System.Data.Linq.Table<B2BBuyerInvoiceTag> B2BBuyerInvoiceTag
		{
			get
			{
				return this.GetTable<B2BBuyerInvoiceTag>();
			}
		}
		
		public System.Data.Linq.Table<DerivedDocument> DerivedDocument
		{
			get
			{
				return this.GetTable<DerivedDocument>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceAmountType> InvoiceAmountType
		{
			get
			{
				return this.GetTable<InvoiceAmountType>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceAllowanceBuyer> InvoiceAllowanceBuyer
		{
			get
			{
				return this.GetTable<InvoiceAllowanceBuyer>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceAllowanceSeller> InvoiceAllowanceSeller
		{
			get
			{
				return this.GetTable<InvoiceAllowanceSeller>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceSeller> InvoiceSeller
		{
			get
			{
				return this.GetTable<InvoiceSeller>();
			}
		}
		
		public System.Data.Linq.Table<EnterpriseGroup> EnterpriseGroup
		{
			get
			{
				return this.GetTable<EnterpriseGroup>();
			}
		}
		
		public System.Data.Linq.Table<EnterpriseGroupMember> EnterpriseGroupMember
		{
			get
			{
				return this.GetTable<EnterpriseGroupMember>();
			}
		}
		
		public System.Data.Linq.Table<BusinessType> BusinessType
		{
			get
			{
				return this.GetTable<BusinessType>();
			}
		}
		
		public System.Data.Linq.Table<DocumentFlow> DocumentFlow
		{
			get
			{
				return this.GetTable<DocumentFlow>();
			}
		}
		
		public System.Data.Linq.Table<DocumentFlowControl> DocumentFlowControl
		{
			get
			{
				return this.GetTable<DocumentFlowControl>();
			}
		}
		
		public System.Data.Linq.Table<DocumentTypeFlow> DocumentTypeFlow
		{
			get
			{
				return this.GetTable<DocumentTypeFlow>();
			}
		}
		
		public System.Data.Linq.Table<DocumentFlowStep> DocumentFlowStep
		{
			get
			{
				return this.GetTable<DocumentFlowStep>();
			}
		}
		
		public System.Data.Linq.Table<DocumentProcessLog> DocumentProcessLog
		{
			get
			{
				return this.GetTable<DocumentProcessLog>();
			}
		}
		
		public System.Data.Linq.Table<LevelExpression> LevelExpression
		{
			get
			{
				return this.GetTable<LevelExpression>();
			}
		}
		
		public System.Data.Linq.Table<CommonDocumentTypeFlow> CommonDocumentTypeFlow
		{
			get
			{
				return this.GetTable<CommonDocumentTypeFlow>();
			}
		}
		
		public System.Data.Linq.Table<BusinessRelationship> BusinessRelationship
		{
			get
			{
				return this.GetTable<BusinessRelationship>();
			}
		}
		
		public System.Data.Linq.Table<ReceiptDetail> ReceiptDetail
		{
			get
			{
				return this.GetTable<ReceiptDetail>();
			}
		}
		
		public System.Data.Linq.Table<ReceiptItem> ReceiptItem
		{
			get
			{
				return this.GetTable<ReceiptItem>();
			}
		}
		
		public System.Data.Linq.Table<ReceiptCancellation> ReceiptCancellation
		{
			get
			{
				return this.GetTable<ReceiptCancellation>();
			}
		}
		
		public System.Data.Linq.Table<ExceptionLog> ExceptionLog
		{
			get
			{
				return this.GetTable<ExceptionLog>();
			}
		}
		
		public System.Data.Linq.Table<UserProfile> UserProfile
		{
			get
			{
				return this.GetTable<UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<OrganizationToken> OrganizationToken
		{
			get
			{
				return this.GetTable<OrganizationToken>();
			}
		}
		
		public System.Data.Linq.Table<UserToken> UserToken
		{
			get
			{
				return this.GetTable<UserToken>();
			}
		}
		
		public System.Data.Linq.Table<Attachment> Attachment
		{
			get
			{
				return this.GetTable<Attachment>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceAllowanceItem> InvoiceAllowanceItem
		{
			get
			{
				return this.GetTable<InvoiceAllowanceItem>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceProductItem> InvoiceProductItem
		{
			get
			{
				return this.GetTable<InvoiceProductItem>();
			}
		}
		
		public System.Data.Linq.Table<EnterpriseGroupMemberToken> EnterpriseGroupMemberToken
		{
			get
			{
				return this.GetTable<EnterpriseGroupMemberToken>();
			}
		}
		
		public System.Data.Linq.Table<DocumentFlowBranch> DocumentFlowBranch
		{
			get
			{
				return this.GetTable<DocumentFlowBranch>();
			}
		}
		
		public System.Data.Linq.Table<DocumentReady> DocumentReady
		{
			get
			{
				return this.GetTable<DocumentReady>();
			}
		}
		
		public System.Data.Linq.Table<DocumentAccessaryFlow> DocumentAccessaryFlow
		{
			get
			{
				return this.GetTable<DocumentAccessaryFlow>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceAllowanceItemExtension> InvoiceAllowanceItemExtension
		{
			get
			{
				return this.GetTable<InvoiceAllowanceItemExtension>();
			}
		}
		
		public System.Data.Linq.Table<CALog> CALog
		{
			get
			{
				return this.GetTable<CALog>();
			}
		}
		
		public System.Data.Linq.Table<DocumentPrintQueue> DocumentPrintQueues
		{
			get
			{
				return this.GetTable<DocumentPrintQueue>();
			}
		}
		
		public System.Data.Linq.Table<SMSNotificationQueue> SMSNotificationQueues
		{
			get
			{
				return this.GetTable<SMSNotificationQueue>();
			}
		}
		
		public System.Data.Linq.Table<SMSNotificationLog> SMSNotificationLogs
		{
			get
			{
				return this.GetTable<SMSNotificationLog>();
			}
		}
		
		public System.Data.Linq.Table<DocumentMappingQueue> DocumentMappingQueue
		{
			get
			{
				return this.GetTable<DocumentMappingQueue>();
			}
		}
		
		public System.Data.Linq.Table<DocumentDownloadQueue> DocumentDownloadQueue
		{
			get
			{
				return this.GetTable<DocumentDownloadQueue>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceCarrier> InvoiceCarrier
		{
			get
			{
				return this.GetTable<InvoiceCarrier>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceDonation> InvoiceDonation
		{
			get
			{
				return this.GetTable<InvoiceDonation>();
			}
		}
		
		public System.Data.Linq.Table<UnassignedInvoiceNo> UnassignedInvoiceNo
		{
			get
			{
				return this.GetTable<UnassignedInvoiceNo>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceAllowanceCancellation> InvoiceAllowanceCancellation
		{
			get
			{
				return this.GetTable<InvoiceAllowanceCancellation>();
			}
		}
		
		public System.Data.Linq.Table<OrganizationStatus> OrganizationStatus
		{
			get
			{
				return this.GetTable<OrganizationStatus>();
			}
		}
		
		public System.Data.Linq.Table<SystemMessage> SystemMessage
		{
			get
			{
				return this.GetTable<SystemMessage>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceDeliveryTracking> InvoiceDeliveryTracking
		{
			get
			{
				return this.GetTable<InvoiceDeliveryTracking>();
			}
		}
		
		public System.Data.Linq.Table<DocumentSubscriptionQueue> DocumentSubscriptionQueue
		{
			get
			{
				return this.GetTable<DocumentSubscriptionQueue>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceBuyer> InvoiceBuyer
		{
			get
			{
				return this.GetTable<InvoiceBuyer>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceIssuerAgent> InvoiceIssuerAgent
		{
			get
			{
				return this.GetTable<InvoiceIssuerAgent>();
			}
		}
		
		public System.Data.Linq.Table<InvoicePurchaseOrder> InvoicePurchaseOrder
		{
			get
			{
				return this.GetTable<InvoicePurchaseOrder>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceItemExtension> InvoiceItemExtensions
		{
			get
			{
				return this.GetTable<InvoiceItemExtension>();
			}
		}
		
		public System.Data.Linq.Table<BlankInvoiceNoSummary> BlankInvoiceNoSummary
		{
			get
			{
				return this.GetTable<BlankInvoiceNoSummary>();
			}
		}
		
		public System.Data.Linq.Table<ProductItemCategory> ProductItemCategory
		{
			get
			{
				return this.GetTable<ProductItemCategory>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceNoSegmentDisposition> InvoiceNoSegmentDisposition
		{
			get
			{
				return this.GetTable<InvoiceNoSegmentDisposition>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceNoSegment> InvoiceNoSegments
		{
			get
			{
				return this.GetTable<InvoiceNoSegment>();
			}
		}
		
		public System.Data.Linq.Table<POSDevice> POSDevice
		{
			get
			{
				return this.GetTable<POSDevice>();
			}
		}
		
		public System.Data.Linq.Table<POSInvoiceNoSegment> POSInvoiceNoSegment
		{
			get
			{
				return this.GetTable<POSInvoiceNoSegment>();
			}
		}
		
		public System.Data.Linq.Table<OrganizationExtension> OrganizationExtension
		{
			get
			{
				return this.GetTable<OrganizationExtension>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MatchDocumentAttachment")]
		public int MatchDocumentAttachment()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateGroupMemberUserRole")]
		public int UpdateGroupMemberUserRole([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyID", DbType="Int")] System.Nullable<int> companyID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OldRoleID", DbType="Int")] System.Nullable<int> oldRoleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewRoleID", DbType="Int")] System.Nullable<int> newRoleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyID, oldRoleID, newRoleID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InquireVacantNo")]
		public ISingleResult<InquireVacantNoResult> InquireVacantNo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SellerID", DbType="Int")] System.Nullable<int> sellerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Year", DbType="Int")] System.Nullable<int> year, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PeriodNo", DbType="Int")] System.Nullable<int> periodNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sellerID, year, periodNo);
			return ((ISingleResult<InquireVacantNoResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organization")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ContactName;
		
		private string _Fax;
		
		private string _LogoURL;
		
		private string _CompanyName;
		
		private int _CompanyID;
		
		private string _ReceiptNo;
		
		private string _Phone;
		
		private string _ContactFax;
		
		private string _ContactPhone;
		
		private string _ContactMobilePhone;
		
		private string _RegAddr;
		
		private string _UndertakerName;
		
		private string _Addr;
		
		private string _EnglishName;
		
		private string _EnglishAddr;
		
		private string _EnglishRegAddr;
		
		private string _ContactEmail;
		
		private string _UndertakerPhone;
		
		private string _UndertakerFax;
		
		private string _UndertakerMobilePhone;
		
		private string _InvoiceSignature;
		
		private string _UndertakerID;
		
		private string _ContactTitle;
		
		private EntitySet<OrganizationCategory> _OrganizationCategory;
		
		private EntitySet<InvoiceWelfareAgency> _InvoiceWelfareAgencies;
		
		private EntityRef<WelfareAgency> _WelfareAgency;
		
		private EntitySet<InvoiceItem> _InvoiceItems;
		
		private EntitySet<InvoiceItem> _InvoiceItems1;
		
		private EntitySet<MemberCode> _MemberCodes;
		
		private EntitySet<InvoiceTrackCodeAssignment> _InvoiceTrackCodeAssignments;
		
		private EntitySet<DocumentOwner> _DocumentOwners;
		
		private EntitySet<InvoiceAllowanceBuyer> _InvoiceAllowanceBuyer;
		
		private EntitySet<InvoiceAllowanceSeller> _InvoiceAllowanceSeller;
		
		private EntitySet<InvoiceSeller> _InvoiceSeller;
		
		private EntitySet<EnterpriseGroupMember> _EnterpriseGroupMember;
		
		private EntitySet<DocumentTypeFlow> _DocumentTypeFlow;
		
		private EntitySet<BusinessRelationship> _BusinessRelationship;
		
		private EntitySet<BusinessRelationship> _BusinessRelationship1;
		
		private EntitySet<ReceiptItem> _ReceiptItemForSeller;
		
		private EntitySet<ReceiptItem> _ReceiptItemForBuyer;
		
		private EntitySet<ExceptionLog> _ExceptionLog;
		
		private EntityRef<OrganizationToken> _OrganizationToken;
		
		private EntitySet<CALog> _CALog;
		
		private EntitySet<SMSNotificationLog> _SMSNotificationLogs;
		
		private EntityRef<OrganizationStatus> _OrganizationStatus;
		
		private EntitySet<InvoiceBuyer> _InvoiceBuyer;
		
		private EntitySet<InvoiceIssuerAgent> _InvoiceInsurerAgent;
		
		private EntitySet<InvoiceIssuerAgent> _AsInvoiceInsurer;
		
		private EntitySet<POSDevice> _POSDevice;
		
		private EntityRef<OrganizationExtension> _OrganizationExtension;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnLogoURLChanging(string value);
    partial void OnLogoURLChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnReceiptNoChanging(string value);
    partial void OnReceiptNoChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnContactFaxChanging(string value);
    partial void OnContactFaxChanged();
    partial void OnContactPhoneChanging(string value);
    partial void OnContactPhoneChanged();
    partial void OnContactMobilePhoneChanging(string value);
    partial void OnContactMobilePhoneChanged();
    partial void OnRegAddrChanging(string value);
    partial void OnRegAddrChanged();
    partial void OnUndertakerNameChanging(string value);
    partial void OnUndertakerNameChanged();
    partial void OnAddrChanging(string value);
    partial void OnAddrChanged();
    partial void OnEnglishNameChanging(string value);
    partial void OnEnglishNameChanged();
    partial void OnEnglishAddrChanging(string value);
    partial void OnEnglishAddrChanged();
    partial void OnEnglishRegAddrChanging(string value);
    partial void OnEnglishRegAddrChanged();
    partial void OnContactEmailChanging(string value);
    partial void OnContactEmailChanged();
    partial void OnUndertakerPhoneChanging(string value);
    partial void OnUndertakerPhoneChanged();
    partial void OnUndertakerFaxChanging(string value);
    partial void OnUndertakerFaxChanged();
    partial void OnUndertakerMobilePhoneChanging(string value);
    partial void OnUndertakerMobilePhoneChanged();
    partial void OnInvoiceSignatureChanging(string value);
    partial void OnInvoiceSignatureChanged();
    partial void OnUndertakerIDChanging(string value);
    partial void OnUndertakerIDChanged();
    partial void OnContactTitleChanging(string value);
    partial void OnContactTitleChanged();
    #endregion
		
		public Organization()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoURL", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string LogoURL
		{
			get
			{
				return this._LogoURL;
			}
			set
			{
				if ((this._LogoURL != value))
				{
					this.OnLogoURLChanging(value);
					this.SendPropertyChanging();
					this._LogoURL = value;
					this.SendPropertyChanged("LogoURL");
					this.OnLogoURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNo", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string ReceiptNo
		{
			get
			{
				return this._ReceiptNo;
			}
			set
			{
				if ((this._ReceiptNo != value))
				{
					this.OnReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNo = value;
					this.SendPropertyChanged("ReceiptNo");
					this.OnReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactFax", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string ContactFax
		{
			get
			{
				return this._ContactFax;
			}
			set
			{
				if ((this._ContactFax != value))
				{
					this.OnContactFaxChanging(value);
					this.SendPropertyChanging();
					this._ContactFax = value;
					this.SendPropertyChanged("ContactFax");
					this.OnContactFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this.OnContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPhone = value;
					this.SendPropertyChanged("ContactPhone");
					this.OnContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactMobilePhone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string ContactMobilePhone
		{
			get
			{
				return this._ContactMobilePhone;
			}
			set
			{
				if ((this._ContactMobilePhone != value))
				{
					this.OnContactMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactMobilePhone = value;
					this.SendPropertyChanged("ContactMobilePhone");
					this.OnContactMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegAddr", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string RegAddr
		{
			get
			{
				return this._RegAddr;
			}
			set
			{
				if ((this._RegAddr != value))
				{
					this.OnRegAddrChanging(value);
					this.SendPropertyChanging();
					this._RegAddr = value;
					this.SendPropertyChanged("RegAddr");
					this.OnRegAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UndertakerName", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string UndertakerName
		{
			get
			{
				return this._UndertakerName;
			}
			set
			{
				if ((this._UndertakerName != value))
				{
					this.OnUndertakerNameChanging(value);
					this.SendPropertyChanging();
					this._UndertakerName = value;
					this.SendPropertyChanged("UndertakerName");
					this.OnUndertakerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addr", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string Addr
		{
			get
			{
				return this._Addr;
			}
			set
			{
				if ((this._Addr != value))
				{
					this.OnAddrChanging(value);
					this.SendPropertyChanging();
					this._Addr = value;
					this.SendPropertyChanged("Addr");
					this.OnAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishName", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string EnglishName
		{
			get
			{
				return this._EnglishName;
			}
			set
			{
				if ((this._EnglishName != value))
				{
					this.OnEnglishNameChanging(value);
					this.SendPropertyChanging();
					this._EnglishName = value;
					this.SendPropertyChanged("EnglishName");
					this.OnEnglishNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishAddr", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string EnglishAddr
		{
			get
			{
				return this._EnglishAddr;
			}
			set
			{
				if ((this._EnglishAddr != value))
				{
					this.OnEnglishAddrChanging(value);
					this.SendPropertyChanging();
					this._EnglishAddr = value;
					this.SendPropertyChanged("EnglishAddr");
					this.OnEnglishAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishRegAddr", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string EnglishRegAddr
		{
			get
			{
				return this._EnglishRegAddr;
			}
			set
			{
				if ((this._EnglishRegAddr != value))
				{
					this.OnEnglishRegAddrChanging(value);
					this.SendPropertyChanging();
					this._EnglishRegAddr = value;
					this.SendPropertyChanged("EnglishRegAddr");
					this.OnEnglishRegAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this.OnContactEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactEmail = value;
					this.SendPropertyChanged("ContactEmail");
					this.OnContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UndertakerPhone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string UndertakerPhone
		{
			get
			{
				return this._UndertakerPhone;
			}
			set
			{
				if ((this._UndertakerPhone != value))
				{
					this.OnUndertakerPhoneChanging(value);
					this.SendPropertyChanging();
					this._UndertakerPhone = value;
					this.SendPropertyChanged("UndertakerPhone");
					this.OnUndertakerPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UndertakerFax", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string UndertakerFax
		{
			get
			{
				return this._UndertakerFax;
			}
			set
			{
				if ((this._UndertakerFax != value))
				{
					this.OnUndertakerFaxChanging(value);
					this.SendPropertyChanging();
					this._UndertakerFax = value;
					this.SendPropertyChanged("UndertakerFax");
					this.OnUndertakerFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UndertakerMobilePhone", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string UndertakerMobilePhone
		{
			get
			{
				return this._UndertakerMobilePhone;
			}
			set
			{
				if ((this._UndertakerMobilePhone != value))
				{
					this.OnUndertakerMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._UndertakerMobilePhone = value;
					this.SendPropertyChanged("UndertakerMobilePhone");
					this.OnUndertakerMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceSignature", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string InvoiceSignature
		{
			get
			{
				return this._InvoiceSignature;
			}
			set
			{
				if ((this._InvoiceSignature != value))
				{
					this.OnInvoiceSignatureChanging(value);
					this.SendPropertyChanging();
					this._InvoiceSignature = value;
					this.SendPropertyChanged("InvoiceSignature");
					this.OnInvoiceSignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UndertakerID", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string UndertakerID
		{
			get
			{
				return this._UndertakerID;
			}
			set
			{
				if ((this._UndertakerID != value))
				{
					this.OnUndertakerIDChanging(value);
					this.SendPropertyChanging();
					this._UndertakerID = value;
					this.SendPropertyChanged("UndertakerID");
					this.OnUndertakerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactTitle", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public string ContactTitle
		{
			get
			{
				return this._ContactTitle;
			}
			set
			{
				if ((this._ContactTitle != value))
				{
					this.OnContactTitleChanging(value);
					this.SendPropertyChanging();
					this._ContactTitle = value;
					this.SendPropertyChanged("ContactTitle");
					this.OnContactTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrganizationCategory", Storage="_OrganizationCategory", ThisKey="CompanyID", OtherKey="CompanyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<OrganizationCategory> OrganizationCategory
		{
			get
			{
				if ((this.serializing 
							&& (this._OrganizationCategory.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._OrganizationCategory;
			}
			set
			{
				this._OrganizationCategory.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_InvoiceWelfareAgency", Storage="_InvoiceWelfareAgencies", ThisKey="CompanyID", OtherKey="SellerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<InvoiceWelfareAgency> InvoiceWelfareAgencies
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceWelfareAgencies.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceWelfareAgencies;
			}
			set
			{
				this._InvoiceWelfareAgencies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_WelfareAgency", Storage="_WelfareAgency", ThisKey="CompanyID", OtherKey="AgencyID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public WelfareAgency WelfareAgency
		{
			get
			{
				if ((this.serializing 
							&& (this._WelfareAgency.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._WelfareAgency.Entity;
			}
			set
			{
				WelfareAgency previousValue = this._WelfareAgency.Entity;
				if (((previousValue != value) 
							|| (this._WelfareAgency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WelfareAgency.Entity = null;
						previousValue.Organization = null;
					}
					this._WelfareAgency.Entity = value;
					if ((value != null))
					{
						value.Organization = this;
					}
					this.SendPropertyChanged("WelfareAgency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_InvoiceItem", Storage="_InvoiceItems", ThisKey="CompanyID", OtherKey="SellerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27, EmitDefaultValue=false)]
		public EntitySet<InvoiceItem> InvoiceItems
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceItems.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceItems;
			}
			set
			{
				this._InvoiceItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_InvoiceItem1", Storage="_InvoiceItems1", ThisKey="CompanyID", OtherKey="DonationID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28, EmitDefaultValue=false)]
		public EntitySet<InvoiceItem> DonatedInvoiceItems
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceItems1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceItems1;
			}
			set
			{
				this._InvoiceItems1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_MemberCode", Storage="_MemberCodes", ThisKey="CompanyID", OtherKey="CompanyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29, EmitDefaultValue=false)]
		public EntitySet<MemberCode> MemberCodes
		{
			get
			{
				if ((this.serializing 
							&& (this._MemberCodes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MemberCodes;
			}
			set
			{
				this._MemberCodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_InvoiceTrackCodeAssignment", Storage="_InvoiceTrackCodeAssignments", ThisKey="CompanyID", OtherKey="SellerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30, EmitDefaultValue=false)]
		public EntitySet<InvoiceTrackCodeAssignment> InvoiceTrackCodeAssignments
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceTrackCodeAssignments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceTrackCodeAssignments;
			}
			set
			{
				this._InvoiceTrackCodeAssignments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_DocumentOwner", Storage="_DocumentOwners", ThisKey="CompanyID", OtherKey="OwnerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31, EmitDefaultValue=false)]
		public EntitySet<DocumentOwner> DocumentOwners
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentOwners.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentOwners;
			}
			set
			{
				this._DocumentOwners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_InvoiceAllowanceBuyer", Storage="_InvoiceAllowanceBuyer", ThisKey="CompanyID", OtherKey="BuyerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32, EmitDefaultValue=false)]
		public EntitySet<InvoiceAllowanceBuyer> InvoiceAllowanceBuyer
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceAllowanceBuyer.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceAllowanceBuyer;
			}
			set
			{
				this._InvoiceAllowanceBuyer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_InvoiceAllowanceSeller", Storage="_InvoiceAllowanceSeller", ThisKey="CompanyID", OtherKey="SellerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33, EmitDefaultValue=false)]
		public EntitySet<InvoiceAllowanceSeller> InvoiceAllowanceSeller
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceAllowanceSeller.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceAllowanceSeller;
			}
			set
			{
				this._InvoiceAllowanceSeller.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_InvoiceSeller", Storage="_InvoiceSeller", ThisKey="CompanyID", OtherKey="SellerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34, EmitDefaultValue=false)]
		public EntitySet<InvoiceSeller> InvoiceSeller
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceSeller.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceSeller;
			}
			set
			{
				this._InvoiceSeller.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_EnterpriseGroupMember", Storage="_EnterpriseGroupMember", ThisKey="CompanyID", OtherKey="CompanyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35, EmitDefaultValue=false)]
		public EntitySet<EnterpriseGroupMember> EnterpriseGroupMember
		{
			get
			{
				if ((this.serializing 
							&& (this._EnterpriseGroupMember.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EnterpriseGroupMember;
			}
			set
			{
				this._EnterpriseGroupMember.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_DocumentTypeFlow", Storage="_DocumentTypeFlow", ThisKey="CompanyID", OtherKey="CompanyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36, EmitDefaultValue=false)]
		public EntitySet<DocumentTypeFlow> DocumentTypeFlow
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentTypeFlow.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentTypeFlow;
			}
			set
			{
				this._DocumentTypeFlow.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_BusinessRelationship", Storage="_BusinessRelationship", ThisKey="CompanyID", OtherKey="MasterID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37, EmitDefaultValue=false)]
		public EntitySet<BusinessRelationship> MasterRelation
		{
			get
			{
				if ((this.serializing 
							&& (this._BusinessRelationship.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BusinessRelationship;
			}
			set
			{
				this._BusinessRelationship.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_BusinessRelationship1", Storage="_BusinessRelationship1", ThisKey="CompanyID", OtherKey="RelativeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=38, EmitDefaultValue=false)]
		public EntitySet<BusinessRelationship> RelativeRelation
		{
			get
			{
				if ((this.serializing 
							&& (this._BusinessRelationship1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BusinessRelationship1;
			}
			set
			{
				this._BusinessRelationship1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_ReceiptItem", Storage="_ReceiptItemForSeller", ThisKey="CompanyID", OtherKey="SellerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=39, EmitDefaultValue=false)]
		public EntitySet<ReceiptItem> ReceiptItemForSeller
		{
			get
			{
				if ((this.serializing 
							&& (this._ReceiptItemForSeller.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ReceiptItemForSeller;
			}
			set
			{
				this._ReceiptItemForSeller.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_ReceiptItem1", Storage="_ReceiptItemForBuyer", ThisKey="CompanyID", OtherKey="BuyerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=40, EmitDefaultValue=false)]
		public EntitySet<ReceiptItem> ReceiptItemForBuyer
		{
			get
			{
				if ((this.serializing 
							&& (this._ReceiptItemForBuyer.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ReceiptItemForBuyer;
			}
			set
			{
				this._ReceiptItemForBuyer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_ExceptionLog", Storage="_ExceptionLog", ThisKey="CompanyID", OtherKey="CompanyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=41, EmitDefaultValue=false)]
		public EntitySet<ExceptionLog> ExceptionLog
		{
			get
			{
				if ((this.serializing 
							&& (this._ExceptionLog.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ExceptionLog;
			}
			set
			{
				this._ExceptionLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrganizationToken", Storage="_OrganizationToken", ThisKey="CompanyID", OtherKey="CompanyID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=42, EmitDefaultValue=false)]
		public OrganizationToken OrganizationToken
		{
			get
			{
				if ((this.serializing 
							&& (this._OrganizationToken.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._OrganizationToken.Entity;
			}
			set
			{
				OrganizationToken previousValue = this._OrganizationToken.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationToken.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationToken.Entity = null;
						previousValue.Organization = null;
					}
					this._OrganizationToken.Entity = value;
					if ((value != null))
					{
						value.Organization = this;
					}
					this.SendPropertyChanged("OrganizationToken");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_CALog", Storage="_CALog", ThisKey="CompanyID", OtherKey="CompanyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=43, EmitDefaultValue=false)]
		public EntitySet<CALog> CALog
		{
			get
			{
				if ((this.serializing 
							&& (this._CALog.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CALog;
			}
			set
			{
				this._CALog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_SMSNotificationLog", Storage="_SMSNotificationLogs", ThisKey="CompanyID", OtherKey="OwnerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=44, EmitDefaultValue=false)]
		public EntitySet<SMSNotificationLog> SMSNotificationLogs
		{
			get
			{
				if ((this.serializing 
							&& (this._SMSNotificationLogs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SMSNotificationLogs;
			}
			set
			{
				this._SMSNotificationLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrganizationStatus", Storage="_OrganizationStatus", ThisKey="CompanyID", OtherKey="CompanyID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=45, EmitDefaultValue=false)]
		public OrganizationStatus OrganizationStatus
		{
			get
			{
				if ((this.serializing 
							&& (this._OrganizationStatus.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._OrganizationStatus.Entity;
			}
			set
			{
				OrganizationStatus previousValue = this._OrganizationStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationStatus.Entity = null;
						previousValue.Organization = null;
					}
					this._OrganizationStatus.Entity = value;
					if ((value != null))
					{
						value.Organization = this;
					}
					this.SendPropertyChanged("OrganizationStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_InvoiceBuyer", Storage="_InvoiceBuyer", ThisKey="CompanyID", OtherKey="BuyerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=46, EmitDefaultValue=false)]
		public EntitySet<InvoiceBuyer> InvoiceBuyer
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceBuyer.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceBuyer;
			}
			set
			{
				this._InvoiceBuyer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_InvoiceIssuerAgent", Storage="_InvoiceInsurerAgent", ThisKey="CompanyID", OtherKey="AgentID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=47, EmitDefaultValue=false)]
		public EntitySet<InvoiceIssuerAgent> InvoiceInsurerAgent
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceInsurerAgent.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceInsurerAgent;
			}
			set
			{
				this._InvoiceInsurerAgent.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_InvoiceIssuerAgent1", Storage="_AsInvoiceInsurer", ThisKey="CompanyID", OtherKey="IssuerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=48, EmitDefaultValue=false)]
		public EntitySet<InvoiceIssuerAgent> AsInvoiceInsurer
		{
			get
			{
				if ((this.serializing 
							&& (this._AsInvoiceInsurer.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AsInvoiceInsurer;
			}
			set
			{
				this._AsInvoiceInsurer.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_POSDevice", Storage="_POSDevice", ThisKey="CompanyID", OtherKey="CompanyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=49, EmitDefaultValue=false)]
		public EntitySet<POSDevice> POSDevice
		{
			get
			{
				if ((this.serializing 
							&& (this._POSDevice.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._POSDevice;
			}
			set
			{
				this._POSDevice.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrganizationExtension", Storage="_OrganizationExtension", ThisKey="CompanyID", OtherKey="CompanyID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=50, EmitDefaultValue=false)]
		public OrganizationExtension OrganizationExtension
		{
			get
			{
				if ((this.serializing 
							&& (this._OrganizationExtension.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._OrganizationExtension.Entity;
			}
			set
			{
				OrganizationExtension previousValue = this._OrganizationExtension.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationExtension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationExtension.Entity = null;
						previousValue.Organization = null;
					}
					this._OrganizationExtension.Entity = value;
					if ((value != null))
					{
						value.Organization = this;
					}
					this.SendPropertyChanged("OrganizationExtension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrganizationCategory(OrganizationCategory entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_OrganizationCategory(OrganizationCategory entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_InvoiceWelfareAgencies(InvoiceWelfareAgency entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_InvoiceWelfareAgencies(InvoiceWelfareAgency entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_InvoiceItems(InvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_InvoiceItems(InvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_InvoiceItems1(InvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.Donatory = this;
		}
		
		private void detach_InvoiceItems1(InvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.Donatory = null;
		}
		
		private void attach_MemberCodes(MemberCode entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_MemberCodes(MemberCode entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_InvoiceTrackCodeAssignments(InvoiceTrackCodeAssignment entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_InvoiceTrackCodeAssignments(InvoiceTrackCodeAssignment entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_DocumentOwners(DocumentOwner entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_DocumentOwners(DocumentOwner entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_InvoiceAllowanceBuyer(InvoiceAllowanceBuyer entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_InvoiceAllowanceBuyer(InvoiceAllowanceBuyer entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_InvoiceAllowanceSeller(InvoiceAllowanceSeller entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_InvoiceAllowanceSeller(InvoiceAllowanceSeller entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_InvoiceSeller(InvoiceSeller entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_InvoiceSeller(InvoiceSeller entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_EnterpriseGroupMember(EnterpriseGroupMember entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_EnterpriseGroupMember(EnterpriseGroupMember entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_DocumentTypeFlow(DocumentTypeFlow entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_DocumentTypeFlow(DocumentTypeFlow entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_BusinessRelationship(BusinessRelationship entity)
		{
			this.SendPropertyChanging();
			entity.BusinessMaster = this;
		}
		
		private void detach_BusinessRelationship(BusinessRelationship entity)
		{
			this.SendPropertyChanging();
			entity.BusinessMaster = null;
		}
		
		private void attach_BusinessRelationship1(BusinessRelationship entity)
		{
			this.SendPropertyChanging();
			entity.Counterpart = this;
		}
		
		private void detach_BusinessRelationship1(BusinessRelationship entity)
		{
			this.SendPropertyChanging();
			entity.Counterpart = null;
		}
		
		private void attach_ReceiptItemForSeller(ReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.Seller = this;
		}
		
		private void detach_ReceiptItemForSeller(ReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.Seller = null;
		}
		
		private void attach_ReceiptItemForBuyer(ReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = this;
		}
		
		private void detach_ReceiptItemForBuyer(ReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.Buyer = null;
		}
		
		private void attach_ExceptionLog(ExceptionLog entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_ExceptionLog(ExceptionLog entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_CALog(CALog entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_CALog(CALog entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_SMSNotificationLogs(SMSNotificationLog entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_SMSNotificationLogs(SMSNotificationLog entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_InvoiceBuyer(InvoiceBuyer entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_InvoiceBuyer(InvoiceBuyer entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_InvoiceInsurerAgent(InvoiceIssuerAgent entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceAgent = this;
		}
		
		private void detach_InvoiceInsurerAgent(InvoiceIssuerAgent entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceAgent = null;
		}
		
		private void attach_AsInvoiceInsurer(InvoiceIssuerAgent entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceInsurer = this;
		}
		
		private void detach_AsInvoiceInsurer(InvoiceIssuerAgent entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceInsurer = null;
		}
		
		private void attach_POSDevice(POSDevice entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_POSDevice(POSDevice entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void Initialize()
		{
			this._OrganizationCategory = new EntitySet<OrganizationCategory>(new Action<OrganizationCategory>(this.attach_OrganizationCategory), new Action<OrganizationCategory>(this.detach_OrganizationCategory));
			this._InvoiceWelfareAgencies = new EntitySet<InvoiceWelfareAgency>(new Action<InvoiceWelfareAgency>(this.attach_InvoiceWelfareAgencies), new Action<InvoiceWelfareAgency>(this.detach_InvoiceWelfareAgencies));
			this._WelfareAgency = default(EntityRef<WelfareAgency>);
			this._InvoiceItems = new EntitySet<InvoiceItem>(new Action<InvoiceItem>(this.attach_InvoiceItems), new Action<InvoiceItem>(this.detach_InvoiceItems));
			this._InvoiceItems1 = new EntitySet<InvoiceItem>(new Action<InvoiceItem>(this.attach_InvoiceItems1), new Action<InvoiceItem>(this.detach_InvoiceItems1));
			this._MemberCodes = new EntitySet<MemberCode>(new Action<MemberCode>(this.attach_MemberCodes), new Action<MemberCode>(this.detach_MemberCodes));
			this._InvoiceTrackCodeAssignments = new EntitySet<InvoiceTrackCodeAssignment>(new Action<InvoiceTrackCodeAssignment>(this.attach_InvoiceTrackCodeAssignments), new Action<InvoiceTrackCodeAssignment>(this.detach_InvoiceTrackCodeAssignments));
			this._DocumentOwners = new EntitySet<DocumentOwner>(new Action<DocumentOwner>(this.attach_DocumentOwners), new Action<DocumentOwner>(this.detach_DocumentOwners));
			this._InvoiceAllowanceBuyer = new EntitySet<InvoiceAllowanceBuyer>(new Action<InvoiceAllowanceBuyer>(this.attach_InvoiceAllowanceBuyer), new Action<InvoiceAllowanceBuyer>(this.detach_InvoiceAllowanceBuyer));
			this._InvoiceAllowanceSeller = new EntitySet<InvoiceAllowanceSeller>(new Action<InvoiceAllowanceSeller>(this.attach_InvoiceAllowanceSeller), new Action<InvoiceAllowanceSeller>(this.detach_InvoiceAllowanceSeller));
			this._InvoiceSeller = new EntitySet<InvoiceSeller>(new Action<InvoiceSeller>(this.attach_InvoiceSeller), new Action<InvoiceSeller>(this.detach_InvoiceSeller));
			this._EnterpriseGroupMember = new EntitySet<EnterpriseGroupMember>(new Action<EnterpriseGroupMember>(this.attach_EnterpriseGroupMember), new Action<EnterpriseGroupMember>(this.detach_EnterpriseGroupMember));
			this._DocumentTypeFlow = new EntitySet<DocumentTypeFlow>(new Action<DocumentTypeFlow>(this.attach_DocumentTypeFlow), new Action<DocumentTypeFlow>(this.detach_DocumentTypeFlow));
			this._BusinessRelationship = new EntitySet<BusinessRelationship>(new Action<BusinessRelationship>(this.attach_BusinessRelationship), new Action<BusinessRelationship>(this.detach_BusinessRelationship));
			this._BusinessRelationship1 = new EntitySet<BusinessRelationship>(new Action<BusinessRelationship>(this.attach_BusinessRelationship1), new Action<BusinessRelationship>(this.detach_BusinessRelationship1));
			this._ReceiptItemForSeller = new EntitySet<ReceiptItem>(new Action<ReceiptItem>(this.attach_ReceiptItemForSeller), new Action<ReceiptItem>(this.detach_ReceiptItemForSeller));
			this._ReceiptItemForBuyer = new EntitySet<ReceiptItem>(new Action<ReceiptItem>(this.attach_ReceiptItemForBuyer), new Action<ReceiptItem>(this.detach_ReceiptItemForBuyer));
			this._ExceptionLog = new EntitySet<ExceptionLog>(new Action<ExceptionLog>(this.attach_ExceptionLog), new Action<ExceptionLog>(this.detach_ExceptionLog));
			this._OrganizationToken = default(EntityRef<OrganizationToken>);
			this._CALog = new EntitySet<CALog>(new Action<CALog>(this.attach_CALog), new Action<CALog>(this.detach_CALog));
			this._SMSNotificationLogs = new EntitySet<SMSNotificationLog>(new Action<SMSNotificationLog>(this.attach_SMSNotificationLogs), new Action<SMSNotificationLog>(this.detach_SMSNotificationLogs));
			this._OrganizationStatus = default(EntityRef<OrganizationStatus>);
			this._InvoiceBuyer = new EntitySet<InvoiceBuyer>(new Action<InvoiceBuyer>(this.attach_InvoiceBuyer), new Action<InvoiceBuyer>(this.detach_InvoiceBuyer));
			this._InvoiceInsurerAgent = new EntitySet<InvoiceIssuerAgent>(new Action<InvoiceIssuerAgent>(this.attach_InvoiceInsurerAgent), new Action<InvoiceIssuerAgent>(this.detach_InvoiceInsurerAgent));
			this._AsInvoiceInsurer = new EntitySet<InvoiceIssuerAgent>(new Action<InvoiceIssuerAgent>(this.attach_AsInvoiceInsurer), new Action<InvoiceIssuerAgent>(this.detach_AsInvoiceInsurer));
			this._POSDevice = new EntitySet<POSDevice>(new Action<POSDevice>(this.attach_POSDevice), new Action<POSDevice>(this.detach_POSDevice));
			this._OrganizationExtension = default(EntityRef<OrganizationExtension>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRole")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UID;
		
		private int _RoleID;
		
		private int _OrgaCateID;
		
		private EntityRef<OrganizationCategory> _OrganizationCategory;
		
		private EntityRef<UserRoleDefinition> _UserRoleDefinition;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnOrgaCateIDChanging(int value);
    partial void OnOrgaCateIDChanged();
    #endregion
		
		public UserRole()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._UserRoleDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgaCateID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int OrgaCateID
		{
			get
			{
				return this._OrgaCateID;
			}
			set
			{
				if ((this._OrgaCateID != value))
				{
					if (this._OrganizationCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrgaCateIDChanging(value);
					this.SendPropertyChanging();
					this._OrgaCateID = value;
					this.SendPropertyChanged("OrgaCateID");
					this.OnOrgaCateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationCategory_UserRole", Storage="_OrganizationCategory", ThisKey="OrgaCateID", OtherKey="OrgaCateID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OrganizationCategory OrganizationCategory
		{
			get
			{
				return this._OrganizationCategory.Entity;
			}
			set
			{
				OrganizationCategory previousValue = this._OrganizationCategory.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationCategory.Entity = null;
						previousValue.UserRole.Remove(this);
					}
					this._OrganizationCategory.Entity = value;
					if ((value != null))
					{
						value.UserRole.Add(this);
						this._OrgaCateID = value.OrgaCateID;
					}
					else
					{
						this._OrgaCateID = default(int);
					}
					this.SendPropertyChanged("OrganizationCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleDefinition_UserRole", Storage="_UserRoleDefinition", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public UserRoleDefinition UserRoleDefinition
		{
			get
			{
				return this._UserRoleDefinition.Entity;
			}
			set
			{
				UserRoleDefinition previousValue = this._UserRoleDefinition.Entity;
				if (((previousValue != value) 
							|| (this._UserRoleDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRoleDefinition.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._UserRoleDefinition.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("UserRoleDefinition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserRole", Storage="_UserProfile", ThisKey="UID", OtherKey="UID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.UserRole.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.UserRole.Add(this);
						this._UID = value.UID;
					}
					else
					{
						this._UID = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._OrganizationCategory = default(EntityRef<OrganizationCategory>);
			this._UserRoleDefinition = default(EntityRef<UserRoleDefinition>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganizationCategory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class OrganizationCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrgaCateID;
		
		private int _CompanyID;
		
		private int _CategoryID;
		
		private EntitySet<UserRole> _UserRole;
		
		private EntitySet<OrganizationCategoryUserRole> _OrganizationCategoryUserRoles;
		
		private EntityRef<Organization> _Organization;
		
		private EntityRef<CategoryDefinition> _CategoryDefinition;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrgaCateIDChanging(int value);
    partial void OnOrgaCateIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    #endregion
		
		public OrganizationCategory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgaCateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int OrgaCateID
		{
			get
			{
				return this._OrgaCateID;
			}
			set
			{
				if ((this._OrgaCateID != value))
				{
					this.OnOrgaCateIDChanging(value);
					this.SendPropertyChanging();
					this._OrgaCateID = value;
					this.SendPropertyChanged("OrgaCateID");
					this.OnOrgaCateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._CategoryDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationCategory_UserRole", Storage="_UserRole", ThisKey="OrgaCateID", OtherKey="OrgaCateID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<UserRole> UserRole
		{
			get
			{
				if ((this.serializing 
							&& (this._UserRole.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserRole;
			}
			set
			{
				this._UserRole.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationCategory_OrganizationCategoryUserRole", Storage="_OrganizationCategoryUserRoles", ThisKey="OrgaCateID", OtherKey="OrgaCateID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<OrganizationCategoryUserRole> OrganizationCategoryUserRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._OrganizationCategoryUserRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._OrganizationCategoryUserRoles;
			}
			set
			{
				this._OrganizationCategoryUserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrganizationCategory", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.OrganizationCategory.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.OrganizationCategory.Add(this);
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoryDefinition_OrganizationCategory", Storage="_CategoryDefinition", ThisKey="CategoryID", OtherKey="CategoryID", IsForeignKey=true)]
		public CategoryDefinition CategoryDefinition
		{
			get
			{
				return this._CategoryDefinition.Entity;
			}
			set
			{
				CategoryDefinition previousValue = this._CategoryDefinition.Entity;
				if (((previousValue != value) 
							|| (this._CategoryDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CategoryDefinition.Entity = null;
						previousValue.OrganizationCategories.Remove(this);
					}
					this._CategoryDefinition.Entity = value;
					if ((value != null))
					{
						value.OrganizationCategories.Add(this);
						this._CategoryID = value.CategoryID;
					}
					else
					{
						this._CategoryID = default(int);
					}
					this.SendPropertyChanged("CategoryDefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRole(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationCategory = this;
		}
		
		private void detach_UserRole(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationCategory = null;
		}
		
		private void attach_OrganizationCategoryUserRoles(OrganizationCategoryUserRole entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationCategory = this;
		}
		
		private void detach_OrganizationCategoryUserRoles(OrganizationCategoryUserRole entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationCategory = null;
		}
		
		private void Initialize()
		{
			this._UserRole = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRole), new Action<UserRole>(this.detach_UserRole));
			this._OrganizationCategoryUserRoles = new EntitySet<OrganizationCategoryUserRole>(new Action<OrganizationCategoryUserRole>(this.attach_OrganizationCategoryUserRoles), new Action<OrganizationCategoryUserRole>(this.detach_OrganizationCategoryUserRoles));
			this._Organization = default(EntityRef<Organization>);
			this._CategoryDefinition = default(EntityRef<CategoryDefinition>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenuControl")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MenuControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MenuID;
		
		private string _SiteMenu;
		
		private EntitySet<UserMenu> _UserMenu;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIDChanging(int value);
    partial void OnMenuIDChanged();
    partial void OnSiteMenuChanging(string value);
    partial void OnSiteMenuChanged();
    #endregion
		
		public MenuControl()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMenu", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string SiteMenu
		{
			get
			{
				return this._SiteMenu;
			}
			set
			{
				if ((this._SiteMenu != value))
				{
					this.OnSiteMenuChanging(value);
					this.SendPropertyChanging();
					this._SiteMenu = value;
					this.SendPropertyChanged("SiteMenu");
					this.OnSiteMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MenuControl_UserMenu", Storage="_UserMenu", ThisKey="MenuID", OtherKey="MenuID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<UserMenu> UserMenu
		{
			get
			{
				if ((this.serializing 
							&& (this._UserMenu.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserMenu;
			}
			set
			{
				this._UserMenu.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserMenu(UserMenu entity)
		{
			this.SendPropertyChanging();
			entity.MenuControl = this;
		}
		
		private void detach_UserMenu(UserMenu entity)
		{
			this.SendPropertyChanging();
			entity.MenuControl = null;
		}
		
		private void Initialize()
		{
			this._UserMenu = new EntitySet<UserMenu>(new Action<UserMenu>(this.attach_UserMenu), new Action<UserMenu>(this.detach_UserMenu));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserMenu")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private int _CategoryID;
		
		private int _MenuID;
		
		private EntityRef<MenuControl> _MenuControl;
		
		private EntityRef<UserRoleDefinition> _UserRoleDefinition;
		
		private EntityRef<CategoryDefinition> _CategoryDefinition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnMenuIDChanging(int value);
    partial void OnMenuIDChanged();
    #endregion
		
		public UserMenu()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._UserRoleDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._CategoryDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					if (this._MenuControl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MenuControl_UserMenu", Storage="_MenuControl", ThisKey="MenuID", OtherKey="MenuID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MenuControl MenuControl
		{
			get
			{
				return this._MenuControl.Entity;
			}
			set
			{
				MenuControl previousValue = this._MenuControl.Entity;
				if (((previousValue != value) 
							|| (this._MenuControl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MenuControl.Entity = null;
						previousValue.UserMenu.Remove(this);
					}
					this._MenuControl.Entity = value;
					if ((value != null))
					{
						value.UserMenu.Add(this);
						this._MenuID = value.MenuID;
					}
					else
					{
						this._MenuID = default(int);
					}
					this.SendPropertyChanged("MenuControl");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleDefinition_UserMenu", Storage="_UserRoleDefinition", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserRoleDefinition UserRoleDefinition
		{
			get
			{
				return this._UserRoleDefinition.Entity;
			}
			set
			{
				UserRoleDefinition previousValue = this._UserRoleDefinition.Entity;
				if (((previousValue != value) 
							|| (this._UserRoleDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRoleDefinition.Entity = null;
						previousValue.UserMenus.Remove(this);
					}
					this._UserRoleDefinition.Entity = value;
					if ((value != null))
					{
						value.UserMenus.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("UserRoleDefinition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoryDefinition_UserMenu", Storage="_CategoryDefinition", ThisKey="CategoryID", OtherKey="CategoryID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CategoryDefinition CategoryDefinition
		{
			get
			{
				return this._CategoryDefinition.Entity;
			}
			set
			{
				CategoryDefinition previousValue = this._CategoryDefinition.Entity;
				if (((previousValue != value) 
							|| (this._CategoryDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CategoryDefinition.Entity = null;
						previousValue.UserMenus.Remove(this);
					}
					this._CategoryDefinition.Entity = value;
					if ((value != null))
					{
						value.UserMenus.Add(this);
						this._CategoryID = value.CategoryID;
					}
					else
					{
						this._CategoryID = default(int);
					}
					this.SendPropertyChanged("CategoryDefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._MenuControl = default(EntityRef<MenuControl>);
			this._UserRoleDefinition = default(EntityRef<UserRoleDefinition>);
			this._CategoryDefinition = default(EntityRef<CategoryDefinition>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAuth")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserAuth : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AuthID;
		
		private int _UID;
		
		private string _Thumbprint;
		
		private string _X509Certificate;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthIDChanging(int value);
    partial void OnAuthIDChanged();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    partial void OnThumbprintChanging(string value);
    partial void OnThumbprintChanged();
    partial void OnX509CertificateChanging(string value);
    partial void OnX509CertificateChanged();
    #endregion
		
		public UserAuth()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AuthID
		{
			get
			{
				return this._AuthID;
			}
			set
			{
				if ((this._AuthID != value))
				{
					this.OnAuthIDChanging(value);
					this.SendPropertyChanging();
					this._AuthID = value;
					this.SendPropertyChanged("AuthID");
					this.OnAuthIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thumbprint", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Thumbprint
		{
			get
			{
				return this._Thumbprint;
			}
			set
			{
				if ((this._Thumbprint != value))
				{
					this.OnThumbprintChanging(value);
					this.SendPropertyChanging();
					this._Thumbprint = value;
					this.SendPropertyChanged("Thumbprint");
					this.OnThumbprintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X509Certificate", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string X509Certificate
		{
			get
			{
				return this._X509Certificate;
			}
			set
			{
				if ((this._X509Certificate != value))
				{
					this.OnX509CertificateChanging(value);
					this.SendPropertyChanging();
					this._X509Certificate = value;
					this.SendPropertyChanged("X509Certificate");
					this.OnX509CertificateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserAuth", Storage="_UserProfile", ThisKey="UID", OtherKey="UID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.UserAuth.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.UserAuth.Add(this);
						this._UID = value.UID;
					}
					else
					{
						this._UID = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CDS_Document")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CDS_Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private System.Nullable<int> _DocType;
		
		private System.DateTime _DocDate;
		
		private System.Nullable<int> _CurrentStep;
		
		private System.Nullable<int> _ChannelID;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
		private EntitySet<DocumentDispatch> _DocumentDispatches;
		
		private EntityRef<InvoiceAllowance> _InvoiceAllowance;
		
		private EntityRef<DocumentOwner> _DocumentOwner;
		
		private EntitySet<DocumentPrintLog> _DocumentPrintLogs;
		
		private EntitySet<DocumentDownloadLog> _DocumentDownloadLogs;
		
		private EntitySet<DocumentReplication> _DocumentReplications;
		
		private EntityRef<DerivedDocument> _DerivedDocument;
		
		private EntitySet<DerivedDocument> _DerivedDocument1;
		
		private EntityRef<DocumentFlowStep> _DocumentFlowStep;
		
		private EntitySet<DocumentProcessLog> _DocumentProcessLog;
		
		private EntityRef<ReceiptItem> _ReceiptItem;
		
		private EntitySet<ExceptionLog> _ExceptionLog;
		
		private EntitySet<Attachment> _Attachment;
		
		private EntitySet<DocumentReady> _DocumentReady;
		
		private EntitySet<DocumentAccessaryFlow> _DocumentAccessaryFlow;
		
		private EntitySet<CALog> _CALog;
		
		private EntityRef<DocumentPrintQueue> _DocumentPrintQueue;
		
		private EntitySet<SMSNotificationQueue> _SMSNotificationQueues;
		
		private EntitySet<SMSNotificationLog> _SMSNotificationLogs;
		
		private EntityRef<DocumentMappingQueue> _DocumentMappingQueue;
		
		private EntityRef<DocumentDownloadQueue> _DocumentDownloadQueue;
		
		private EntityRef<DocumentSubscriptionQueue> _DocumentSubscriptionQueue;
		
		private EntityRef<DocumentType> _DocumentType;
		
		private EntityRef<LevelExpression> _LevelExpression;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnDocTypeChanging(System.Nullable<int> value);
    partial void OnDocTypeChanged();
    partial void OnDocDateChanging(System.DateTime value);
    partial void OnDocDateChanged();
    partial void OnCurrentStepChanging(System.Nullable<int> value);
    partial void OnCurrentStepChanged();
    partial void OnChannelIDChanging(System.Nullable<int> value);
    partial void OnChannelIDChanged();
    #endregion
		
		public CDS_Document()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocType", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> DocType
		{
			get
			{
				return this._DocType;
			}
			set
			{
				if ((this._DocType != value))
				{
					if (this._DocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocTypeChanging(value);
					this.SendPropertyChanging();
					this._DocType = value;
					this.SendPropertyChanged("DocType");
					this.OnDocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime DocDate
		{
			get
			{
				return this._DocDate;
			}
			set
			{
				if ((this._DocDate != value))
				{
					this.OnDocDateChanging(value);
					this.SendPropertyChanging();
					this._DocDate = value;
					this.SendPropertyChanged("DocDate");
					this.OnDocDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentStep", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> CurrentStep
		{
			get
			{
				return this._CurrentStep;
			}
			set
			{
				if ((this._CurrentStep != value))
				{
					if (this._LevelExpression.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrentStepChanging(value);
					this.SendPropertyChanging();
					this._CurrentStep = value;
					this.SendPropertyChanged("CurrentStep");
					this.OnCurrentStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChannelID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> ChannelID
		{
			get
			{
				return this._ChannelID;
			}
			set
			{
				if ((this._ChannelID != value))
				{
					this.OnChannelIDChanging(value);
					this.SendPropertyChanging();
					this._ChannelID = value;
					this.SendPropertyChanged("ChannelID");
					this.OnChannelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_InvoiceItem", Storage="_InvoiceItem", ThisKey="DocID", OtherKey="InvoiceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public InvoiceItem InvoiceItem
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.CDS_Document = null;
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.CDS_Document = this;
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentDispatch", Storage="_DocumentDispatches", ThisKey="DocID", OtherKey="DocID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<DocumentDispatch> DocumentDispatches
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentDispatches.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentDispatches;
			}
			set
			{
				this._DocumentDispatches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_InvoiceAllowance", Storage="_InvoiceAllowance", ThisKey="DocID", OtherKey="AllowanceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public InvoiceAllowance InvoiceAllowance
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceAllowance.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoiceAllowance.Entity;
			}
			set
			{
				InvoiceAllowance previousValue = this._InvoiceAllowance.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceAllowance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceAllowance.Entity = null;
						previousValue.CDS_Document = null;
					}
					this._InvoiceAllowance.Entity = value;
					if ((value != null))
					{
						value.CDS_Document = this;
					}
					this.SendPropertyChanged("InvoiceAllowance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentOwner", Storage="_DocumentOwner", ThisKey="DocID", OtherKey="DocID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public DocumentOwner DocumentOwner
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentOwner.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._DocumentOwner.Entity;
			}
			set
			{
				DocumentOwner previousValue = this._DocumentOwner.Entity;
				if (((previousValue != value) 
							|| (this._DocumentOwner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentOwner.Entity = null;
						previousValue.CDS_Document = null;
					}
					this._DocumentOwner.Entity = value;
					if ((value != null))
					{
						value.CDS_Document = this;
					}
					this.SendPropertyChanged("DocumentOwner");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentPrintLog", Storage="_DocumentPrintLogs", ThisKey="DocID", OtherKey="DocID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<DocumentPrintLog> DocumentPrintLogs
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentPrintLogs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentPrintLogs;
			}
			set
			{
				this._DocumentPrintLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentDownloadLog", Storage="_DocumentDownloadLogs", ThisKey="DocID", OtherKey="DocID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<DocumentDownloadLog> DocumentDownloadLogs
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentDownloadLogs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentDownloadLogs;
			}
			set
			{
				this._DocumentDownloadLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentReplication", Storage="_DocumentReplications", ThisKey="DocID", OtherKey="DocID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<DocumentReplication> DocumentReplications
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentReplications.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentReplications;
			}
			set
			{
				this._DocumentReplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DerivedDocument", Storage="_DerivedDocument", ThisKey="DocID", OtherKey="DocID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public DerivedDocument DerivedDocument
		{
			get
			{
				if ((this.serializing 
							&& (this._DerivedDocument.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._DerivedDocument.Entity;
			}
			set
			{
				DerivedDocument previousValue = this._DerivedDocument.Entity;
				if (((previousValue != value) 
							|| (this._DerivedDocument.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DerivedDocument.Entity = null;
						previousValue.CDS_Document = null;
					}
					this._DerivedDocument.Entity = value;
					if ((value != null))
					{
						value.CDS_Document = this;
					}
					this.SendPropertyChanged("DerivedDocument");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DerivedDocument1", Storage="_DerivedDocument1", ThisKey="DocID", OtherKey="SourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<DerivedDocument> ChildDocument
		{
			get
			{
				if ((this.serializing 
							&& (this._DerivedDocument1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DerivedDocument1;
			}
			set
			{
				this._DerivedDocument1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentFlowStep", Storage="_DocumentFlowStep", ThisKey="DocID", OtherKey="DocID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public DocumentFlowStep DocumentFlowStep
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentFlowStep.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._DocumentFlowStep.Entity;
			}
			set
			{
				DocumentFlowStep previousValue = this._DocumentFlowStep.Entity;
				if (((previousValue != value) 
							|| (this._DocumentFlowStep.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentFlowStep.Entity = null;
						previousValue.CDS_Document = null;
					}
					this._DocumentFlowStep.Entity = value;
					if ((value != null))
					{
						value.CDS_Document = this;
					}
					this.SendPropertyChanged("DocumentFlowStep");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentProcessLog", Storage="_DocumentProcessLog", ThisKey="DocID", OtherKey="DocID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<DocumentProcessLog> DocumentProcessLog
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentProcessLog.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentProcessLog;
			}
			set
			{
				this._DocumentProcessLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_ReceiptItem", Storage="_ReceiptItem", ThisKey="DocID", OtherKey="ReceiptID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public ReceiptItem ReceiptItem
		{
			get
			{
				if ((this.serializing 
							&& (this._ReceiptItem.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._ReceiptItem.Entity;
			}
			set
			{
				ReceiptItem previousValue = this._ReceiptItem.Entity;
				if (((previousValue != value) 
							|| (this._ReceiptItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReceiptItem.Entity = null;
						previousValue.CDS_Document = null;
					}
					this._ReceiptItem.Entity = value;
					if ((value != null))
					{
						value.CDS_Document = this;
					}
					this.SendPropertyChanged("ReceiptItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_ExceptionLog", Storage="_ExceptionLog", ThisKey="DocID", OtherKey="DocID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<ExceptionLog> ExceptionLog
		{
			get
			{
				if ((this.serializing 
							&& (this._ExceptionLog.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ExceptionLog;
			}
			set
			{
				this._ExceptionLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_Attachment", Storage="_Attachment", ThisKey="DocID", OtherKey="DocID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<Attachment> Attachment
		{
			get
			{
				if ((this.serializing 
							&& (this._Attachment.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Attachment;
			}
			set
			{
				this._Attachment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentReady", Storage="_DocumentReady", ThisKey="DocID", OtherKey="DocID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<DocumentReady> DocumentReady
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentReady.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentReady;
			}
			set
			{
				this._DocumentReady.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentAccessaryFlow", Storage="_DocumentAccessaryFlow", ThisKey="DocID", OtherKey="DocID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<DocumentAccessaryFlow> DocumentAccessaryFlow
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentAccessaryFlow.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentAccessaryFlow;
			}
			set
			{
				this._DocumentAccessaryFlow.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_CALog", Storage="_CALog", ThisKey="DocID", OtherKey="DocID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<CALog> CALog
		{
			get
			{
				if ((this.serializing 
							&& (this._CALog.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CALog;
			}
			set
			{
				this._CALog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentPrintQueue", Storage="_DocumentPrintQueue", ThisKey="DocID", OtherKey="DocID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public DocumentPrintQueue DocumentPrintQueue
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentPrintQueue.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._DocumentPrintQueue.Entity;
			}
			set
			{
				DocumentPrintQueue previousValue = this._DocumentPrintQueue.Entity;
				if (((previousValue != value) 
							|| (this._DocumentPrintQueue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentPrintQueue.Entity = null;
						previousValue.CDS_Document = null;
					}
					this._DocumentPrintQueue.Entity = value;
					if ((value != null))
					{
						value.CDS_Document = this;
					}
					this.SendPropertyChanged("DocumentPrintQueue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_SMSNotificationQueue", Storage="_SMSNotificationQueues", ThisKey="DocID", OtherKey="DocID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<SMSNotificationQueue> SMSNotificationQueues
		{
			get
			{
				if ((this.serializing 
							&& (this._SMSNotificationQueues.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SMSNotificationQueues;
			}
			set
			{
				this._SMSNotificationQueues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_SMSNotificationLog", Storage="_SMSNotificationLogs", ThisKey="DocID", OtherKey="DocID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<SMSNotificationLog> SMSNotificationLogs
		{
			get
			{
				if ((this.serializing 
							&& (this._SMSNotificationLogs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SMSNotificationLogs;
			}
			set
			{
				this._SMSNotificationLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentMappingQueue", Storage="_DocumentMappingQueue", ThisKey="DocID", OtherKey="DocID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public DocumentMappingQueue DocumentMappingQueue
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentMappingQueue.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._DocumentMappingQueue.Entity;
			}
			set
			{
				DocumentMappingQueue previousValue = this._DocumentMappingQueue.Entity;
				if (((previousValue != value) 
							|| (this._DocumentMappingQueue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentMappingQueue.Entity = null;
						previousValue.CDS_Document = null;
					}
					this._DocumentMappingQueue.Entity = value;
					if ((value != null))
					{
						value.CDS_Document = this;
					}
					this.SendPropertyChanged("DocumentMappingQueue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentDownloadQueue", Storage="_DocumentDownloadQueue", ThisKey="DocID", OtherKey="DocID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27, EmitDefaultValue=false)]
		public DocumentDownloadQueue DocumentDownloadQueue
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentDownloadQueue.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._DocumentDownloadQueue.Entity;
			}
			set
			{
				DocumentDownloadQueue previousValue = this._DocumentDownloadQueue.Entity;
				if (((previousValue != value) 
							|| (this._DocumentDownloadQueue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentDownloadQueue.Entity = null;
						previousValue.CDS_Document = null;
					}
					this._DocumentDownloadQueue.Entity = value;
					if ((value != null))
					{
						value.CDS_Document = this;
					}
					this.SendPropertyChanged("DocumentDownloadQueue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentSubscriptionQueue", Storage="_DocumentSubscriptionQueue", ThisKey="DocID", OtherKey="DocID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28, EmitDefaultValue=false)]
		public DocumentSubscriptionQueue DocumentSubscriptionQueue
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentSubscriptionQueue.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._DocumentSubscriptionQueue.Entity;
			}
			set
			{
				DocumentSubscriptionQueue previousValue = this._DocumentSubscriptionQueue.Entity;
				if (((previousValue != value) 
							|| (this._DocumentSubscriptionQueue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentSubscriptionQueue.Entity = null;
						previousValue.CDS_Document = null;
					}
					this._DocumentSubscriptionQueue.Entity = value;
					if ((value != null))
					{
						value.CDS_Document = this;
					}
					this.SendPropertyChanged("DocumentSubscriptionQueue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_CDS_Document", Storage="_DocumentType", ThisKey="DocType", OtherKey="TypeID", IsForeignKey=true)]
		public DocumentType DocumentType
		{
			get
			{
				return this._DocumentType.Entity;
			}
			set
			{
				DocumentType previousValue = this._DocumentType.Entity;
				if (((previousValue != value) 
							|| (this._DocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentType.Entity = null;
						previousValue.CDS_Documents.Remove(this);
					}
					this._DocumentType.Entity = value;
					if ((value != null))
					{
						value.CDS_Documents.Add(this);
						this._DocType = value.TypeID;
					}
					else
					{
						this._DocType = default(Nullable<int>);
					}
					this.SendPropertyChanged("DocumentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_CDS_Document", Storage="_LevelExpression", ThisKey="CurrentStep", OtherKey="LevelID", IsForeignKey=true)]
		public LevelExpression LevelExpression
		{
			get
			{
				return this._LevelExpression.Entity;
			}
			set
			{
				LevelExpression previousValue = this._LevelExpression.Entity;
				if (((previousValue != value) 
							|| (this._LevelExpression.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LevelExpression.Entity = null;
						previousValue.CDS_Document.Remove(this);
					}
					this._LevelExpression.Entity = value;
					if ((value != null))
					{
						value.CDS_Document.Add(this);
						this._CurrentStep = value.LevelID;
					}
					else
					{
						this._CurrentStep = default(Nullable<int>);
					}
					this.SendPropertyChanged("LevelExpression");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DocumentDispatches(DocumentDispatch entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = this;
		}
		
		private void detach_DocumentDispatches(DocumentDispatch entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = null;
		}
		
		private void attach_DocumentPrintLogs(DocumentPrintLog entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = this;
		}
		
		private void detach_DocumentPrintLogs(DocumentPrintLog entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = null;
		}
		
		private void attach_DocumentDownloadLogs(DocumentDownloadLog entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = this;
		}
		
		private void detach_DocumentDownloadLogs(DocumentDownloadLog entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = null;
		}
		
		private void attach_DocumentReplications(DocumentReplication entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = this;
		}
		
		private void detach_DocumentReplications(DocumentReplication entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = null;
		}
		
		private void attach_DerivedDocument1(DerivedDocument entity)
		{
			this.SendPropertyChanging();
			entity.ParentDocument = this;
		}
		
		private void detach_DerivedDocument1(DerivedDocument entity)
		{
			this.SendPropertyChanging();
			entity.ParentDocument = null;
		}
		
		private void attach_DocumentProcessLog(DocumentProcessLog entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = this;
		}
		
		private void detach_DocumentProcessLog(DocumentProcessLog entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = null;
		}
		
		private void attach_ExceptionLog(ExceptionLog entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = this;
		}
		
		private void detach_ExceptionLog(ExceptionLog entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = null;
		}
		
		private void attach_Attachment(Attachment entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = this;
		}
		
		private void detach_Attachment(Attachment entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = null;
		}
		
		private void attach_DocumentReady(DocumentReady entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = this;
		}
		
		private void detach_DocumentReady(DocumentReady entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = null;
		}
		
		private void attach_DocumentAccessaryFlow(DocumentAccessaryFlow entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = this;
		}
		
		private void detach_DocumentAccessaryFlow(DocumentAccessaryFlow entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = null;
		}
		
		private void attach_CALog(CALog entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = this;
		}
		
		private void detach_CALog(CALog entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = null;
		}
		
		private void attach_SMSNotificationQueues(SMSNotificationQueue entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = this;
		}
		
		private void detach_SMSNotificationQueues(SMSNotificationQueue entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = null;
		}
		
		private void attach_SMSNotificationLogs(SMSNotificationLog entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = this;
		}
		
		private void detach_SMSNotificationLogs(SMSNotificationLog entity)
		{
			this.SendPropertyChanging();
			entity.CDS_Document = null;
		}
		
		private void Initialize()
		{
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			this._DocumentDispatches = new EntitySet<DocumentDispatch>(new Action<DocumentDispatch>(this.attach_DocumentDispatches), new Action<DocumentDispatch>(this.detach_DocumentDispatches));
			this._InvoiceAllowance = default(EntityRef<InvoiceAllowance>);
			this._DocumentOwner = default(EntityRef<DocumentOwner>);
			this._DocumentPrintLogs = new EntitySet<DocumentPrintLog>(new Action<DocumentPrintLog>(this.attach_DocumentPrintLogs), new Action<DocumentPrintLog>(this.detach_DocumentPrintLogs));
			this._DocumentDownloadLogs = new EntitySet<DocumentDownloadLog>(new Action<DocumentDownloadLog>(this.attach_DocumentDownloadLogs), new Action<DocumentDownloadLog>(this.detach_DocumentDownloadLogs));
			this._DocumentReplications = new EntitySet<DocumentReplication>(new Action<DocumentReplication>(this.attach_DocumentReplications), new Action<DocumentReplication>(this.detach_DocumentReplications));
			this._DerivedDocument = default(EntityRef<DerivedDocument>);
			this._DerivedDocument1 = new EntitySet<DerivedDocument>(new Action<DerivedDocument>(this.attach_DerivedDocument1), new Action<DerivedDocument>(this.detach_DerivedDocument1));
			this._DocumentFlowStep = default(EntityRef<DocumentFlowStep>);
			this._DocumentProcessLog = new EntitySet<DocumentProcessLog>(new Action<DocumentProcessLog>(this.attach_DocumentProcessLog), new Action<DocumentProcessLog>(this.detach_DocumentProcessLog));
			this._ReceiptItem = default(EntityRef<ReceiptItem>);
			this._ExceptionLog = new EntitySet<ExceptionLog>(new Action<ExceptionLog>(this.attach_ExceptionLog), new Action<ExceptionLog>(this.detach_ExceptionLog));
			this._Attachment = new EntitySet<Attachment>(new Action<Attachment>(this.attach_Attachment), new Action<Attachment>(this.detach_Attachment));
			this._DocumentReady = new EntitySet<DocumentReady>(new Action<DocumentReady>(this.attach_DocumentReady), new Action<DocumentReady>(this.detach_DocumentReady));
			this._DocumentAccessaryFlow = new EntitySet<DocumentAccessaryFlow>(new Action<DocumentAccessaryFlow>(this.attach_DocumentAccessaryFlow), new Action<DocumentAccessaryFlow>(this.detach_DocumentAccessaryFlow));
			this._CALog = new EntitySet<CALog>(new Action<CALog>(this.attach_CALog), new Action<CALog>(this.detach_CALog));
			this._DocumentPrintQueue = default(EntityRef<DocumentPrintQueue>);
			this._SMSNotificationQueues = new EntitySet<SMSNotificationQueue>(new Action<SMSNotificationQueue>(this.attach_SMSNotificationQueues), new Action<SMSNotificationQueue>(this.detach_SMSNotificationQueues));
			this._SMSNotificationLogs = new EntitySet<SMSNotificationLog>(new Action<SMSNotificationLog>(this.attach_SMSNotificationLogs), new Action<SMSNotificationLog>(this.detach_SMSNotificationLogs));
			this._DocumentMappingQueue = default(EntityRef<DocumentMappingQueue>);
			this._DocumentDownloadQueue = default(EntityRef<DocumentDownloadQueue>);
			this._DocumentSubscriptionQueue = default(EntityRef<DocumentSubscriptionQueue>);
			this._DocumentType = default(EntityRef<DocumentType>);
			this._LevelExpression = default(EntityRef<LevelExpression>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceAllowanceDetails")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceAllowanceDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AllowanceID;
		
		private int _ItemID;
		
		private EntityRef<InvoiceAllowance> _InvoiceAllowance;
		
		private EntityRef<InvoiceAllowanceItem> _InvoiceAllowanceItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAllowanceIDChanging(int value);
    partial void OnAllowanceIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    #endregion
		
		public InvoiceAllowanceDetail()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowanceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AllowanceID
		{
			get
			{
				return this._AllowanceID;
			}
			set
			{
				if ((this._AllowanceID != value))
				{
					if (this._InvoiceAllowance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAllowanceIDChanging(value);
					this.SendPropertyChanging();
					this._AllowanceID = value;
					this.SendPropertyChanged("AllowanceID");
					this.OnAllowanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._InvoiceAllowanceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceAllowance_InvoiceAllowanceDetail", Storage="_InvoiceAllowance", ThisKey="AllowanceID", OtherKey="AllowanceID", IsForeignKey=true)]
		public InvoiceAllowance InvoiceAllowance
		{
			get
			{
				return this._InvoiceAllowance.Entity;
			}
			set
			{
				InvoiceAllowance previousValue = this._InvoiceAllowance.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceAllowance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceAllowance.Entity = null;
						previousValue.InvoiceAllowanceDetails.Remove(this);
					}
					this._InvoiceAllowance.Entity = value;
					if ((value != null))
					{
						value.InvoiceAllowanceDetails.Add(this);
						this._AllowanceID = value.AllowanceID;
					}
					else
					{
						this._AllowanceID = default(int);
					}
					this.SendPropertyChanged("InvoiceAllowance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceAllowanceItem_InvoiceAllowanceDetail", Storage="_InvoiceAllowanceItem", ThisKey="ItemID", OtherKey="ItemID", IsForeignKey=true)]
		public InvoiceAllowanceItem InvoiceAllowanceItem
		{
			get
			{
				return this._InvoiceAllowanceItem.Entity;
			}
			set
			{
				InvoiceAllowanceItem previousValue = this._InvoiceAllowanceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceAllowanceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceAllowanceItem.Entity = null;
						previousValue.InvoiceAllowanceDetail.Remove(this);
					}
					this._InvoiceAllowanceItem.Entity = value;
					if ((value != null))
					{
						value.InvoiceAllowanceDetail.Add(this);
						this._ItemID = value.ItemID;
					}
					else
					{
						this._ItemID = default(int);
					}
					this.SendPropertyChanged("InvoiceAllowanceItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceAllowance = default(EntityRef<InvoiceAllowance>);
			this._InvoiceAllowanceItem = default(EntityRef<InvoiceAllowanceItem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceByHousehold")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceByHousehold : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private int _CarrierID;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
		private EntityRef<InvoiceUserCarrier> _InvoiceUserCarrier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnCarrierIDChanging(int value);
    partial void OnCarrierIDChanged();
    #endregion
		
		public InvoiceByHousehold()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CarrierID
		{
			get
			{
				return this._CarrierID;
			}
			set
			{
				if ((this._CarrierID != value))
				{
					if (this._InvoiceUserCarrier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCarrierIDChanging(value);
					this.SendPropertyChanging();
					this._CarrierID = value;
					this.SendPropertyChanged("CarrierID");
					this.OnCarrierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceByHousehold", Storage="_InvoiceItem", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true)]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.InvoiceByHousehold = null;
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.InvoiceByHousehold = this;
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceUserCarrier_InvoiceByHousehold", Storage="_InvoiceUserCarrier", ThisKey="CarrierID", OtherKey="CarrierID", IsForeignKey=true)]
		public InvoiceUserCarrier InvoiceUserCarrier
		{
			get
			{
				return this._InvoiceUserCarrier.Entity;
			}
			set
			{
				InvoiceUserCarrier previousValue = this._InvoiceUserCarrier.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceUserCarrier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceUserCarrier.Entity = null;
						previousValue.InvoiceByHouseholds.Remove(this);
					}
					this._InvoiceUserCarrier.Entity = value;
					if ((value != null))
					{
						value.InvoiceByHouseholds.Add(this);
						this._CarrierID = value.CarrierID;
					}
					else
					{
						this._CarrierID = default(int);
					}
					this.SendPropertyChanged("InvoiceUserCarrier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			this._InvoiceUserCarrier = default(EntityRef<InvoiceUserCarrier>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceCancellation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceCancellation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CancellationNo;
		
		private System.Nullable<System.DateTime> _CancelDate;
		
		private string _ReturnTaxDocumentNo;
		
		private string _Remark;
		
		private int _InvoiceID;
		
		private string _CancelReason;
		
		private EntitySet<InvoiceCancellationUploadList> _InvoiceCancellationUploadLists;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCancellationNoChanging(string value);
    partial void OnCancellationNoChanged();
    partial void OnCancelDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCancelDateChanged();
    partial void OnReturnTaxDocumentNoChanging(string value);
    partial void OnReturnTaxDocumentNoChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnCancelReasonChanging(string value);
    partial void OnCancelReasonChanged();
    #endregion
		
		public InvoiceCancellation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancellationNo", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string CancellationNo
		{
			get
			{
				return this._CancellationNo;
			}
			set
			{
				if ((this._CancellationNo != value))
				{
					this.OnCancellationNoChanging(value);
					this.SendPropertyChanging();
					this._CancellationNo = value;
					this.SendPropertyChanged("CancellationNo");
					this.OnCancellationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.DateTime> CancelDate
		{
			get
			{
				return this._CancelDate;
			}
			set
			{
				if ((this._CancelDate != value))
				{
					this.OnCancelDateChanging(value);
					this.SendPropertyChanging();
					this._CancelDate = value;
					this.SendPropertyChanged("CancelDate");
					this.OnCancelDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnTaxDocumentNo", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ReturnTaxDocumentNo
		{
			get
			{
				return this._ReturnTaxDocumentNo;
			}
			set
			{
				if ((this._ReturnTaxDocumentNo != value))
				{
					this.OnReturnTaxDocumentNoChanging(value);
					this.SendPropertyChanging();
					this._ReturnTaxDocumentNo = value;
					this.SendPropertyChanged("ReturnTaxDocumentNo");
					this.OnReturnTaxDocumentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelReason", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string CancelReason
		{
			get
			{
				return this._CancelReason;
			}
			set
			{
				if ((this._CancelReason != value))
				{
					this.OnCancelReasonChanging(value);
					this.SendPropertyChanging();
					this._CancelReason = value;
					this.SendPropertyChanged("CancelReason");
					this.OnCancelReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceCancellation_InvoiceCancellationUploadList", Storage="_InvoiceCancellationUploadLists", ThisKey="InvoiceID", OtherKey="InvoiceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<InvoiceCancellationUploadList> InvoiceCancellationUploadLists
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceCancellationUploadLists.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceCancellationUploadLists;
			}
			set
			{
				this._InvoiceCancellationUploadLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceCancellation", Storage="_InvoiceItem", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.InvoiceCancellation = null;
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.InvoiceCancellation = this;
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceCancellationUploadLists(InvoiceCancellationUploadList entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceCancellation = this;
		}
		
		private void detach_InvoiceCancellationUploadLists(InvoiceCancellationUploadList entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceCancellation = null;
		}
		
		private void Initialize()
		{
			this._InvoiceCancellationUploadLists = new EntitySet<InvoiceCancellationUploadList>(new Action<InvoiceCancellationUploadList>(this.attach_InvoiceCancellationUploadLists), new Action<InvoiceCancellationUploadList>(this.detach_InvoiceCancellationUploadLists));
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceDetails")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private int _ProductID;
		
		private EntityRef<InvoiceProduct> _InvoiceProduct;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    #endregion
		
		public InvoiceDetail()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._InvoiceProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceProduct_InvoiceDetail", Storage="_InvoiceProduct", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public InvoiceProduct InvoiceProduct
		{
			get
			{
				return this._InvoiceProduct.Entity;
			}
			set
			{
				InvoiceProduct previousValue = this._InvoiceProduct.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceProduct.Entity = null;
						previousValue.InvoiceDetails.Remove(this);
					}
					this._InvoiceProduct.Entity = value;
					if ((value != null))
					{
						value.InvoiceDetails.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("InvoiceProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceDetail", Storage="_InvoiceItem", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.InvoiceDetails.Remove(this);
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.InvoiceDetails.Add(this);
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceProduct = default(EntityRef<InvoiceProduct>);
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoicePrintAssertion")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoicePrintAssertion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private System.Nullable<System.DateTime> _PrintDate;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnPrintDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPrintDateChanged();
    #endregion
		
		public InvoicePrintAssertion()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.DateTime> PrintDate
		{
			get
			{
				return this._PrintDate;
			}
			set
			{
				if ((this._PrintDate != value))
				{
					this.OnPrintDateChanging(value);
					this.SendPropertyChanging();
					this._PrintDate = value;
					this.SendPropertyChanged("PrintDate");
					this.OnPrintDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoicePrintAssertion", Storage="_InvoiceItem", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true)]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.InvoicePrintAssertion = null;
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.InvoicePrintAssertion = this;
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceProduct")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private string _Brief;
		
		private EntitySet<InvoiceDetail> _InvoiceDetails;
		
		private EntitySet<InvoiceProductItem> _InvoiceProductItem;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnBriefChanging(string value);
    partial void OnBriefChanged();
    #endregion
		
		public InvoiceProduct()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brief", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Brief
		{
			get
			{
				return this._Brief;
			}
			set
			{
				if ((this._Brief != value))
				{
					this.OnBriefChanging(value);
					this.SendPropertyChanging();
					this._Brief = value;
					this.SendPropertyChanged("Brief");
					this.OnBriefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceProduct_InvoiceDetail", Storage="_InvoiceDetails", ThisKey="ProductID", OtherKey="ProductID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<InvoiceDetail> InvoiceDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceDetails;
			}
			set
			{
				this._InvoiceDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceProduct_InvoiceProductItem", Storage="_InvoiceProductItem", ThisKey="ProductID", OtherKey="ProductID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<InvoiceProductItem> InvoiceProductItem
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceProductItem.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceProductItem;
			}
			set
			{
				this._InvoiceProductItem.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceDetails(InvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceProduct = this;
		}
		
		private void detach_InvoiceDetails(InvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceProduct = null;
		}
		
		private void attach_InvoiceProductItem(InvoiceProductItem entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceProduct = this;
		}
		
		private void detach_InvoiceProductItem(InvoiceProductItem entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceProduct = null;
		}
		
		private void Initialize()
		{
			this._InvoiceDetails = new EntitySet<InvoiceDetail>(new Action<InvoiceDetail>(this.attach_InvoiceDetails), new Action<InvoiceDetail>(this.detach_InvoiceDetails));
			this._InvoiceProductItem = new EntitySet<InvoiceProductItem>(new Action<InvoiceProductItem>(this.attach_InvoiceProductItem), new Action<InvoiceProductItem>(this.detach_InvoiceProductItem));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceRejection")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceRejection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private System.Nullable<System.DateTime> _RejectDate;
		
		private string _RejectionReason;
		
		private string _Remark;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnRejectDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRejectDateChanged();
    partial void OnRejectionReasonChanging(string value);
    partial void OnRejectionReasonChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public InvoiceRejection()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.DateTime> RejectDate
		{
			get
			{
				return this._RejectDate;
			}
			set
			{
				if ((this._RejectDate != value))
				{
					this.OnRejectDateChanging(value);
					this.SendPropertyChanging();
					this._RejectDate = value;
					this.SendPropertyChanged("RejectDate");
					this.OnRejectDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectionReason", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string RejectionReason
		{
			get
			{
				return this._RejectionReason;
			}
			set
			{
				if ((this._RejectionReason != value))
				{
					this.OnRejectionReasonChanging(value);
					this.SendPropertyChanging();
					this._RejectionReason = value;
					this.SendPropertyChanged("RejectionReason");
					this.OnRejectionReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceRejection", Storage="_InvoiceItem", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.InvoiceRejection = null;
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.InvoiceRejection = this;
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceVoid")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceVoid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private System.Nullable<System.DateTime> _VoidDate;
		
		private string _Remark;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnVoidDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVoidDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public InvoiceVoid()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoidDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.DateTime> VoidDate
		{
			get
			{
				return this._VoidDate;
			}
			set
			{
				if ((this._VoidDate != value))
				{
					this.OnVoidDateChanging(value);
					this.SendPropertyChanging();
					this._VoidDate = value;
					this.SendPropertyChanged("VoidDate");
					this.OnVoidDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceVoid", Storage="_InvoiceItem", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.InvoiceVoid = null;
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.InvoiceVoid = this;
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CurrencyType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CurrencyType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CurrencyID;
		
		private string _CurrencyName;
		
		private string _AbbrevName;
		
		private EntitySet<InvoiceAmountType> _InvoiceAmountType;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCurrencyIDChanging(int value);
    partial void OnCurrencyIDChanged();
    partial void OnCurrencyNameChanging(string value);
    partial void OnCurrencyNameChanged();
    partial void OnAbbrevNameChanging(string value);
    partial void OnAbbrevNameChanged();
    #endregion
		
		public CurrencyType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this.OnCurrencyNameChanging(value);
					this.SendPropertyChanging();
					this._CurrencyName = value;
					this.SendPropertyChanged("CurrencyName");
					this.OnCurrencyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbbrevName", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string AbbrevName
		{
			get
			{
				return this._AbbrevName;
			}
			set
			{
				if ((this._AbbrevName != value))
				{
					this.OnAbbrevNameChanging(value);
					this.SendPropertyChanging();
					this._AbbrevName = value;
					this.SendPropertyChanged("AbbrevName");
					this.OnAbbrevNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyType_InvoiceAmountType", Storage="_InvoiceAmountType", ThisKey="CurrencyID", OtherKey="CurrencyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<InvoiceAmountType> InvoiceAmountType
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceAmountType.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceAmountType;
			}
			set
			{
				this._InvoiceAmountType.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceAmountType(InvoiceAmountType entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyType = this;
		}
		
		private void detach_InvoiceAmountType(InvoiceAmountType entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyType = null;
		}
		
		private void Initialize()
		{
			this._InvoiceAmountType = new EntitySet<InvoiceAmountType>(new Action<InvoiceAmountType>(this.attach_InvoiceAmountType), new Action<InvoiceAmountType>(this.detach_InvoiceAmountType));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WelfareReplication")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class WelfareReplication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WelfareID;
		
		private EntityRef<InvoiceWelfareAgency> _InvoiceWelfareAgency;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWelfareIDChanging(int value);
    partial void OnWelfareIDChanged();
    #endregion
		
		public WelfareReplication()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelfareID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int WelfareID
		{
			get
			{
				return this._WelfareID;
			}
			set
			{
				if ((this._WelfareID != value))
				{
					if (this._InvoiceWelfareAgency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWelfareIDChanging(value);
					this.SendPropertyChanging();
					this._WelfareID = value;
					this.SendPropertyChanged("WelfareID");
					this.OnWelfareIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceWelfareAgency_WelfareReplication", Storage="_InvoiceWelfareAgency", ThisKey="WelfareID", OtherKey="WelfareID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public InvoiceWelfareAgency InvoiceWelfareAgency
		{
			get
			{
				return this._InvoiceWelfareAgency.Entity;
			}
			set
			{
				InvoiceWelfareAgency previousValue = this._InvoiceWelfareAgency.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceWelfareAgency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceWelfareAgency.Entity = null;
						previousValue.WelfareReplication = null;
					}
					this._InvoiceWelfareAgency.Entity = value;
					if ((value != null))
					{
						value.WelfareReplication = this;
						this._WelfareID = value.WelfareID;
					}
					else
					{
						this._WelfareID = default(int);
					}
					this.SendPropertyChanged("InvoiceWelfareAgency");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceWelfareAgency = default(EntityRef<InvoiceWelfareAgency>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceWelfareAgency")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceWelfareAgency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WelfareID;
		
		private int _SellerID;
		
		private int _AgencyID;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
		private EntityRef<WelfareReplication> _WelfareReplication;
		
		private EntityRef<Organization> _Organization;
		
		private EntityRef<WelfareAgency> _WelfareAgency;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWelfareIDChanging(int value);
    partial void OnWelfareIDChanged();
    partial void OnSellerIDChanging(int value);
    partial void OnSellerIDChanged();
    partial void OnAgencyIDChanging(int value);
    partial void OnAgencyIDChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public InvoiceWelfareAgency()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WelfareID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int WelfareID
		{
			get
			{
				return this._WelfareID;
			}
			set
			{
				if ((this._WelfareID != value))
				{
					this.OnWelfareIDChanging(value);
					this.SendPropertyChanging();
					this._WelfareID = value;
					this.SendPropertyChanged("WelfareID");
					this.OnWelfareIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerIDChanging(value);
					this.SendPropertyChanging();
					this._SellerID = value;
					this.SendPropertyChanged("SellerID");
					this.OnSellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int AgencyID
		{
			get
			{
				return this._AgencyID;
			}
			set
			{
				if ((this._AgencyID != value))
				{
					if (this._WelfareAgency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgencyIDChanging(value);
					this.SendPropertyChanging();
					this._AgencyID = value;
					this.SendPropertyChanged("AgencyID");
					this.OnAgencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceWelfareAgency_WelfareReplication", Storage="_WelfareReplication", ThisKey="WelfareID", OtherKey="WelfareID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public WelfareReplication WelfareReplication
		{
			get
			{
				if ((this.serializing 
							&& (this._WelfareReplication.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._WelfareReplication.Entity;
			}
			set
			{
				WelfareReplication previousValue = this._WelfareReplication.Entity;
				if (((previousValue != value) 
							|| (this._WelfareReplication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WelfareReplication.Entity = null;
						previousValue.InvoiceWelfareAgency = null;
					}
					this._WelfareReplication.Entity = value;
					if ((value != null))
					{
						value.InvoiceWelfareAgency = this;
					}
					this.SendPropertyChanged("WelfareReplication");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_InvoiceWelfareAgency", Storage="_Organization", ThisKey="SellerID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.InvoiceWelfareAgencies.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.InvoiceWelfareAgencies.Add(this);
						this._SellerID = value.CompanyID;
					}
					else
					{
						this._SellerID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WelfareAgency_InvoiceWelfareAgency", Storage="_WelfareAgency", ThisKey="AgencyID", OtherKey="AgencyID", IsForeignKey=true)]
		public WelfareAgency WelfareAgency
		{
			get
			{
				return this._WelfareAgency.Entity;
			}
			set
			{
				WelfareAgency previousValue = this._WelfareAgency.Entity;
				if (((previousValue != value) 
							|| (this._WelfareAgency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WelfareAgency.Entity = null;
						previousValue.InvoiceWelfareAgencies.Remove(this);
					}
					this._WelfareAgency.Entity = value;
					if ((value != null))
					{
						value.InvoiceWelfareAgencies.Add(this);
						this._AgencyID = value.AgencyID;
					}
					else
					{
						this._AgencyID = default(int);
					}
					this.SendPropertyChanged("WelfareAgency");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._WelfareReplication = default(EntityRef<WelfareReplication>);
			this._Organization = default(EntityRef<Organization>);
			this._WelfareAgency = default(EntityRef<WelfareAgency>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WelfareAgency")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class WelfareAgency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AgencyID;
		
		private string _AgencyCode;
		
		private EntitySet<InvoiceWelfareAgency> _InvoiceWelfareAgencies;
		
		private EntityRef<Organization> _Organization;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAgencyIDChanging(int value);
    partial void OnAgencyIDChanged();
    partial void OnAgencyCodeChanging(string value);
    partial void OnAgencyCodeChanged();
    #endregion
		
		public WelfareAgency()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AgencyID
		{
			get
			{
				return this._AgencyID;
			}
			set
			{
				if ((this._AgencyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgencyIDChanging(value);
					this.SendPropertyChanging();
					this._AgencyID = value;
					this.SendPropertyChanged("AgencyID");
					this.OnAgencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyCode", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string AgencyCode
		{
			get
			{
				return this._AgencyCode;
			}
			set
			{
				if ((this._AgencyCode != value))
				{
					this.OnAgencyCodeChanging(value);
					this.SendPropertyChanging();
					this._AgencyCode = value;
					this.SendPropertyChanged("AgencyCode");
					this.OnAgencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WelfareAgency_InvoiceWelfareAgency", Storage="_InvoiceWelfareAgencies", ThisKey="AgencyID", OtherKey="AgencyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<InvoiceWelfareAgency> InvoiceWelfareAgencies
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceWelfareAgencies.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceWelfareAgencies;
			}
			set
			{
				this._InvoiceWelfareAgencies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_WelfareAgency", Storage="_Organization", ThisKey="AgencyID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.WelfareAgency = null;
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.WelfareAgency = this;
						this._AgencyID = value.CompanyID;
					}
					else
					{
						this._AgencyID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceWelfareAgencies(InvoiceWelfareAgency entity)
		{
			this.SendPropertyChanging();
			entity.WelfareAgency = this;
		}
		
		private void detach_InvoiceWelfareAgencies(InvoiceWelfareAgency entity)
		{
			this.SendPropertyChanging();
			entity.WelfareAgency = null;
		}
		
		private void Initialize()
		{
			this._InvoiceWelfareAgencies = new EntitySet<InvoiceWelfareAgency>(new Action<InvoiceWelfareAgency>(this.attach_InvoiceWelfareAgencies), new Action<InvoiceWelfareAgency>(this.detach_InvoiceWelfareAgencies));
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceUserCarrierType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceUserCarrierType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeID;
		
		private string _CarrierType;
		
		private string _Description;
		
		private EntitySet<InvoiceUserCarrier> _InvoiceUserCarriers;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnCarrierTypeChanging(string value);
    partial void OnCarrierTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public InvoiceUserCarrierType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierType", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string CarrierType
		{
			get
			{
				return this._CarrierType;
			}
			set
			{
				if ((this._CarrierType != value))
				{
					this.OnCarrierTypeChanging(value);
					this.SendPropertyChanging();
					this._CarrierType = value;
					this.SendPropertyChanged("CarrierType");
					this.OnCarrierTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceUserCarrierType_InvoiceUserCarrier", Storage="_InvoiceUserCarriers", ThisKey="TypeID", OtherKey="TypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<InvoiceUserCarrier> InvoiceUserCarriers
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceUserCarriers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceUserCarriers;
			}
			set
			{
				this._InvoiceUserCarriers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceUserCarriers(InvoiceUserCarrier entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceUserCarrierType = this;
		}
		
		private void detach_InvoiceUserCarriers(InvoiceUserCarrier entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceUserCarrierType = null;
		}
		
		private void Initialize()
		{
			this._InvoiceUserCarriers = new EntitySet<InvoiceUserCarrier>(new Action<InvoiceUserCarrier>(this.attach_InvoiceUserCarriers), new Action<InvoiceUserCarrier>(this.detach_InvoiceUserCarriers));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceItem")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private string _No;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private string _CheckNo;
		
		private string _Remark;
		
		private string _BuyerRemark;
		
		private string _CustomsClearanceMark;
		
		private string _TaxCenter;
		
		private System.Nullable<System.DateTime> _PermitDate;
		
		private string _PermitWord;
		
		private string _PermitNumber;
		
		private string _Category;
		
		private string _RelateNumber;
		
		private System.Nullable<byte> _InvoiceType;
		
		private string _GroupMark;
		
		private string _DonateMark;
		
		private System.Nullable<int> _SellerID;
		
		private System.Nullable<int> _DonationID;
		
		private string _RandomNo;
		
		private string _TrackCode;
		
		private string _PrintMark;
		
		private EntityRef<InvoiceByHousehold> _InvoiceByHousehold;
		
		private EntityRef<InvoiceCancellation> _InvoiceCancellation;
		
		private EntitySet<InvoiceDetail> _InvoiceDetails;
		
		private EntityRef<InvoicePrintAssertion> _InvoicePrintAssertion;
		
		private EntityRef<InvoiceRejection> _InvoiceRejection;
		
		private EntityRef<InvoiceVoid> _InvoiceVoid;
		
		private EntitySet<InvoiceAllowance> _InvoiceAllowances;
		
		private EntityRef<InvoiceNoAssignment> _InvoiceNoAssignment;
		
		private EntityRef<InvoiceWinningNumber> _InvoiceWinningNumber;
		
		private EntityRef<InvoicePaperRequest> _InvoicePaperRequest;
		
		private EntityRef<InvoicePrintQueue> _InvoicePrintQueue;
		
		private EntityRef<B2BBuyerInvoiceTag> _B2BBuyerInvoiceTag;
		
		private EntityRef<InvoiceAmountType> _InvoiceAmountType;
		
		private EntityRef<InvoiceSeller> _InvoiceSeller;
		
		private EntityRef<InvoiceCarrier> _InvoiceCarrier;
		
		private EntityRef<InvoiceDonation> _InvoiceDonation;
		
		private EntitySet<InvoiceDeliveryTracking> _InvoiceDeliveryTracking;
		
		private EntityRef<InvoiceBuyer> _InvoiceBuyer;
		
		private EntityRef<InvoicePurchaseOrder> _InvoicePurchaseOrder;
		
		private EntityRef<InvoiceItemExtension> _InvoiceItemExtension;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
		private EntityRef<Organization> _Organization;
		
		private EntityRef<Organization> _Organization1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnNoChanging(string value);
    partial void OnNoChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnCheckNoChanging(string value);
    partial void OnCheckNoChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnBuyerRemarkChanging(string value);
    partial void OnBuyerRemarkChanged();
    partial void OnCustomsClearanceMarkChanging(string value);
    partial void OnCustomsClearanceMarkChanged();
    partial void OnTaxCenterChanging(string value);
    partial void OnTaxCenterChanged();
    partial void OnPermitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPermitDateChanged();
    partial void OnPermitWordChanging(string value);
    partial void OnPermitWordChanged();
    partial void OnPermitNumberChanging(string value);
    partial void OnPermitNumberChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnRelateNumberChanging(string value);
    partial void OnRelateNumberChanged();
    partial void OnInvoiceTypeChanging(System.Nullable<byte> value);
    partial void OnInvoiceTypeChanged();
    partial void OnGroupMarkChanging(string value);
    partial void OnGroupMarkChanged();
    partial void OnDonateMarkChanging(string value);
    partial void OnDonateMarkChanged();
    partial void OnSellerIDChanging(System.Nullable<int> value);
    partial void OnSellerIDChanged();
    partial void OnDonationIDChanging(System.Nullable<int> value);
    partial void OnDonationIDChanged();
    partial void OnRandomNoChanging(string value);
    partial void OnRandomNoChanged();
    partial void OnTrackCodeChanging(string value);
    partial void OnTrackCodeChanged();
    partial void OnPrintMarkChanging(string value);
    partial void OnPrintMarkChanged();
    #endregion
		
		public InvoiceItem()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNo", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CheckNo
		{
			get
			{
				return this._CheckNo;
			}
			set
			{
				if ((this._CheckNo != value))
				{
					this.OnCheckNoChanging(value);
					this.SendPropertyChanging();
					this._CheckNo = value;
					this.SendPropertyChanged("CheckNo");
					this.OnCheckNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerRemark", DbType="NVarChar(1)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string BuyerRemark
		{
			get
			{
				return this._BuyerRemark;
			}
			set
			{
				if ((this._BuyerRemark != value))
				{
					this.OnBuyerRemarkChanging(value);
					this.SendPropertyChanging();
					this._BuyerRemark = value;
					this.SendPropertyChanged("BuyerRemark");
					this.OnBuyerRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomsClearanceMark", DbType="NVarChar(1)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string CustomsClearanceMark
		{
			get
			{
				return this._CustomsClearanceMark;
			}
			set
			{
				if ((this._CustomsClearanceMark != value))
				{
					this.OnCustomsClearanceMarkChanging(value);
					this.SendPropertyChanging();
					this._CustomsClearanceMark = value;
					this.SendPropertyChanged("CustomsClearanceMark");
					this.OnCustomsClearanceMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCenter", DbType="NVarChar(40)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string TaxCenter
		{
			get
			{
				return this._TaxCenter;
			}
			set
			{
				if ((this._TaxCenter != value))
				{
					this.OnTaxCenterChanging(value);
					this.SendPropertyChanging();
					this._TaxCenter = value;
					this.SendPropertyChanged("TaxCenter");
					this.OnTaxCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermitDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> PermitDate
		{
			get
			{
				return this._PermitDate;
			}
			set
			{
				if ((this._PermitDate != value))
				{
					this.OnPermitDateChanging(value);
					this.SendPropertyChanging();
					this._PermitDate = value;
					this.SendPropertyChanged("PermitDate");
					this.OnPermitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermitWord", DbType="NVarChar(40)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string PermitWord
		{
			get
			{
				return this._PermitWord;
			}
			set
			{
				if ((this._PermitWord != value))
				{
					this.OnPermitWordChanging(value);
					this.SendPropertyChanging();
					this._PermitWord = value;
					this.SendPropertyChanged("PermitWord");
					this.OnPermitWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermitNumber", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string PermitNumber
		{
			get
			{
				return this._PermitNumber;
			}
			set
			{
				if ((this._PermitNumber != value))
				{
					this.OnPermitNumberChanging(value);
					this.SendPropertyChanging();
					this._PermitNumber = value;
					this.SendPropertyChanged("PermitNumber");
					this.OnPermitNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelateNumber", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string RelateNumber
		{
			get
			{
				return this._RelateNumber;
			}
			set
			{
				if ((this._RelateNumber != value))
				{
					this.OnRelateNumberChanging(value);
					this.SendPropertyChanging();
					this._RelateNumber = value;
					this.SendPropertyChanged("RelateNumber");
					this.OnRelateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceType", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<byte> InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this.OnInvoiceTypeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceType = value;
					this.SendPropertyChanged("InvoiceType");
					this.OnInvoiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupMark", DbType="NVarChar(2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string GroupMark
		{
			get
			{
				return this._GroupMark;
			}
			set
			{
				if ((this._GroupMark != value))
				{
					this.OnGroupMarkChanging(value);
					this.SendPropertyChanging();
					this._GroupMark = value;
					this.SendPropertyChanged("GroupMark");
					this.OnGroupMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonateMark", DbType="NVarChar(1)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string DonateMark
		{
			get
			{
				return this._DonateMark;
			}
			set
			{
				if ((this._DonateMark != value))
				{
					this.OnDonateMarkChanging(value);
					this.SendPropertyChanging();
					this._DonateMark = value;
					this.SendPropertyChanged("DonateMark");
					this.OnDonateMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<int> SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerIDChanging(value);
					this.SendPropertyChanging();
					this._SellerID = value;
					this.SendPropertyChanged("SellerID");
					this.OnSellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonationID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<int> DonationID
		{
			get
			{
				return this._DonationID;
			}
			set
			{
				if ((this._DonationID != value))
				{
					if (this._Organization1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonationIDChanging(value);
					this.SendPropertyChanging();
					this._DonationID = value;
					this.SendPropertyChanged("DonationID");
					this.OnDonationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RandomNo", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string RandomNo
		{
			get
			{
				return this._RandomNo;
			}
			set
			{
				if ((this._RandomNo != value))
				{
					this.OnRandomNoChanging(value);
					this.SendPropertyChanging();
					this._RandomNo = value;
					this.SendPropertyChanged("RandomNo");
					this.OnRandomNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackCode", DbType="NVarChar(2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string TrackCode
		{
			get
			{
				return this._TrackCode;
			}
			set
			{
				if ((this._TrackCode != value))
				{
					this.OnTrackCodeChanging(value);
					this.SendPropertyChanging();
					this._TrackCode = value;
					this.SendPropertyChanged("TrackCode");
					this.OnTrackCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintMark", DbType="NVarChar(1)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string PrintMark
		{
			get
			{
				return this._PrintMark;
			}
			set
			{
				if ((this._PrintMark != value))
				{
					this.OnPrintMarkChanging(value);
					this.SendPropertyChanging();
					this._PrintMark = value;
					this.SendPropertyChanged("PrintMark");
					this.OnPrintMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceByHousehold", Storage="_InvoiceByHousehold", ThisKey="InvoiceID", OtherKey="InvoiceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public InvoiceByHousehold InvoiceByHousehold
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceByHousehold.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoiceByHousehold.Entity;
			}
			set
			{
				InvoiceByHousehold previousValue = this._InvoiceByHousehold.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceByHousehold.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceByHousehold.Entity = null;
						previousValue.InvoiceItem = null;
					}
					this._InvoiceByHousehold.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem = this;
					}
					this.SendPropertyChanged("InvoiceByHousehold");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceCancellation", Storage="_InvoiceCancellation", ThisKey="InvoiceID", OtherKey="InvoiceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public InvoiceCancellation InvoiceCancellation
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceCancellation.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoiceCancellation.Entity;
			}
			set
			{
				InvoiceCancellation previousValue = this._InvoiceCancellation.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceCancellation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceCancellation.Entity = null;
						previousValue.InvoiceItem = null;
					}
					this._InvoiceCancellation.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem = this;
					}
					this.SendPropertyChanged("InvoiceCancellation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceDetail", Storage="_InvoiceDetails", ThisKey="InvoiceID", OtherKey="InvoiceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<InvoiceDetail> InvoiceDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceDetails;
			}
			set
			{
				this._InvoiceDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoicePrintAssertion", Storage="_InvoicePrintAssertion", ThisKey="InvoiceID", OtherKey="InvoiceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public InvoicePrintAssertion InvoicePrintAssertion
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoicePrintAssertion.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoicePrintAssertion.Entity;
			}
			set
			{
				InvoicePrintAssertion previousValue = this._InvoicePrintAssertion.Entity;
				if (((previousValue != value) 
							|| (this._InvoicePrintAssertion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoicePrintAssertion.Entity = null;
						previousValue.InvoiceItem = null;
					}
					this._InvoicePrintAssertion.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem = this;
					}
					this.SendPropertyChanged("InvoicePrintAssertion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceRejection", Storage="_InvoiceRejection", ThisKey="InvoiceID", OtherKey="InvoiceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public InvoiceRejection InvoiceRejection
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceRejection.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoiceRejection.Entity;
			}
			set
			{
				InvoiceRejection previousValue = this._InvoiceRejection.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceRejection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceRejection.Entity = null;
						previousValue.InvoiceItem = null;
					}
					this._InvoiceRejection.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem = this;
					}
					this.SendPropertyChanged("InvoiceRejection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceVoid", Storage="_InvoiceVoid", ThisKey="InvoiceID", OtherKey="InvoiceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27, EmitDefaultValue=false)]
		public InvoiceVoid InvoiceVoid
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceVoid.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoiceVoid.Entity;
			}
			set
			{
				InvoiceVoid previousValue = this._InvoiceVoid.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceVoid.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceVoid.Entity = null;
						previousValue.InvoiceItem = null;
					}
					this._InvoiceVoid.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem = this;
					}
					this.SendPropertyChanged("InvoiceVoid");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceAllowance", Storage="_InvoiceAllowances", ThisKey="InvoiceID", OtherKey="InvoiceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28, EmitDefaultValue=false)]
		public EntitySet<InvoiceAllowance> InvoiceAllowances
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceAllowances.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceAllowances;
			}
			set
			{
				this._InvoiceAllowances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceNoAssignment", Storage="_InvoiceNoAssignment", ThisKey="InvoiceID", OtherKey="InvoiceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29, EmitDefaultValue=false)]
		public InvoiceNoAssignment InvoiceNoAssignment
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceNoAssignment.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoiceNoAssignment.Entity;
			}
			set
			{
				InvoiceNoAssignment previousValue = this._InvoiceNoAssignment.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceNoAssignment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceNoAssignment.Entity = null;
						previousValue.InvoiceItem = null;
					}
					this._InvoiceNoAssignment.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem = this;
					}
					this.SendPropertyChanged("InvoiceNoAssignment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceWinningNumber", Storage="_InvoiceWinningNumber", ThisKey="InvoiceID", OtherKey="InvoiceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30, EmitDefaultValue=false)]
		public InvoiceWinningNumber InvoiceWinningNumber
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceWinningNumber.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoiceWinningNumber.Entity;
			}
			set
			{
				InvoiceWinningNumber previousValue = this._InvoiceWinningNumber.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceWinningNumber.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceWinningNumber.Entity = null;
						previousValue.InvoiceItem = null;
					}
					this._InvoiceWinningNumber.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem = this;
					}
					this.SendPropertyChanged("InvoiceWinningNumber");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoicePaperRequest", Storage="_InvoicePaperRequest", ThisKey="InvoiceID", OtherKey="InvoiceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31, EmitDefaultValue=false)]
		public InvoicePaperRequest InvoicePaperRequest
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoicePaperRequest.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoicePaperRequest.Entity;
			}
			set
			{
				InvoicePaperRequest previousValue = this._InvoicePaperRequest.Entity;
				if (((previousValue != value) 
							|| (this._InvoicePaperRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoicePaperRequest.Entity = null;
						previousValue.InvoiceItem = null;
					}
					this._InvoicePaperRequest.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem = this;
					}
					this.SendPropertyChanged("InvoicePaperRequest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoicePrintQueue", Storage="_InvoicePrintQueue", ThisKey="InvoiceID", OtherKey="InvoiceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32, EmitDefaultValue=false)]
		public InvoicePrintQueue InvoicePrintQueue
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoicePrintQueue.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoicePrintQueue.Entity;
			}
			set
			{
				InvoicePrintQueue previousValue = this._InvoicePrintQueue.Entity;
				if (((previousValue != value) 
							|| (this._InvoicePrintQueue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoicePrintQueue.Entity = null;
						previousValue.InvoiceItem = null;
					}
					this._InvoicePrintQueue.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem = this;
					}
					this.SendPropertyChanged("InvoicePrintQueue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_B2BBuyerInvoiceTag", Storage="_B2BBuyerInvoiceTag", ThisKey="InvoiceID", OtherKey="InvoiceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33, EmitDefaultValue=false)]
		public B2BBuyerInvoiceTag B2BBuyerInvoiceTag
		{
			get
			{
				if ((this.serializing 
							&& (this._B2BBuyerInvoiceTag.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._B2BBuyerInvoiceTag.Entity;
			}
			set
			{
				B2BBuyerInvoiceTag previousValue = this._B2BBuyerInvoiceTag.Entity;
				if (((previousValue != value) 
							|| (this._B2BBuyerInvoiceTag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B2BBuyerInvoiceTag.Entity = null;
						previousValue.InvoiceItem = null;
					}
					this._B2BBuyerInvoiceTag.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem = this;
					}
					this.SendPropertyChanged("B2BBuyerInvoiceTag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceAmountType", Storage="_InvoiceAmountType", ThisKey="InvoiceID", OtherKey="InvoiceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34, EmitDefaultValue=false)]
		public InvoiceAmountType InvoiceAmountType
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceAmountType.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoiceAmountType.Entity;
			}
			set
			{
				InvoiceAmountType previousValue = this._InvoiceAmountType.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceAmountType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceAmountType.Entity = null;
						previousValue.InvoiceItem = null;
					}
					this._InvoiceAmountType.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem = this;
					}
					this.SendPropertyChanged("InvoiceAmountType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceSeller", Storage="_InvoiceSeller", ThisKey="InvoiceID", OtherKey="InvoiceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35, EmitDefaultValue=false)]
		public InvoiceSeller InvoiceSeller
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceSeller.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoiceSeller.Entity;
			}
			set
			{
				InvoiceSeller previousValue = this._InvoiceSeller.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceSeller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceSeller.Entity = null;
						previousValue.InvoiceItem = null;
					}
					this._InvoiceSeller.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem = this;
					}
					this.SendPropertyChanged("InvoiceSeller");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceCarrier", Storage="_InvoiceCarrier", ThisKey="InvoiceID", OtherKey="InvoiceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36, EmitDefaultValue=false)]
		public InvoiceCarrier InvoiceCarrier
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceCarrier.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoiceCarrier.Entity;
			}
			set
			{
				InvoiceCarrier previousValue = this._InvoiceCarrier.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceCarrier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceCarrier.Entity = null;
						previousValue.InvoiceItem = null;
					}
					this._InvoiceCarrier.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem = this;
					}
					this.SendPropertyChanged("InvoiceCarrier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceDonation", Storage="_InvoiceDonation", ThisKey="InvoiceID", OtherKey="InvoiceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37, EmitDefaultValue=false)]
		public InvoiceDonation InvoiceDonation
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceDonation.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoiceDonation.Entity;
			}
			set
			{
				InvoiceDonation previousValue = this._InvoiceDonation.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceDonation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceDonation.Entity = null;
						previousValue.InvoiceItem = null;
					}
					this._InvoiceDonation.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem = this;
					}
					this.SendPropertyChanged("InvoiceDonation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceDeliveryTracking", Storage="_InvoiceDeliveryTracking", ThisKey="InvoiceID", OtherKey="InvoiceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=38, EmitDefaultValue=false)]
		public EntitySet<InvoiceDeliveryTracking> InvoiceDeliveryTracking
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceDeliveryTracking.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceDeliveryTracking;
			}
			set
			{
				this._InvoiceDeliveryTracking.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceBuyer", Storage="_InvoiceBuyer", ThisKey="InvoiceID", OtherKey="InvoiceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=39, EmitDefaultValue=false)]
		public InvoiceBuyer InvoiceBuyer
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceBuyer.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoiceBuyer.Entity;
			}
			set
			{
				InvoiceBuyer previousValue = this._InvoiceBuyer.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceBuyer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceBuyer.Entity = null;
						previousValue.InvoiceItem = null;
					}
					this._InvoiceBuyer.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem = this;
					}
					this.SendPropertyChanged("InvoiceBuyer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoicePurchaseOrder", Storage="_InvoicePurchaseOrder", ThisKey="InvoiceID", OtherKey="InvoiceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=40, EmitDefaultValue=false)]
		public InvoicePurchaseOrder InvoicePurchaseOrder
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoicePurchaseOrder.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoicePurchaseOrder.Entity;
			}
			set
			{
				InvoicePurchaseOrder previousValue = this._InvoicePurchaseOrder.Entity;
				if (((previousValue != value) 
							|| (this._InvoicePurchaseOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoicePurchaseOrder.Entity = null;
						previousValue.InvoiceItem = null;
					}
					this._InvoicePurchaseOrder.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem = this;
					}
					this.SendPropertyChanged("InvoicePurchaseOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceItemExtension", Storage="_InvoiceItemExtension", ThisKey="InvoiceID", OtherKey="InvoiceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=41, EmitDefaultValue=false)]
		public InvoiceItemExtension InvoiceItemExtension
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceItemExtension.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoiceItemExtension.Entity;
			}
			set
			{
				InvoiceItemExtension previousValue = this._InvoiceItemExtension.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItemExtension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItemExtension.Entity = null;
						previousValue.InvoiceItem = null;
					}
					this._InvoiceItemExtension.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem = this;
					}
					this.SendPropertyChanged("InvoiceItemExtension");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_InvoiceItem", Storage="_CDS_Document", ThisKey="InvoiceID", OtherKey="DocID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.InvoiceItem = null;
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.InvoiceItem = this;
						this._InvoiceID = value.DocID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_InvoiceItem", Storage="_Organization", ThisKey="SellerID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.InvoiceItems.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.InvoiceItems.Add(this);
						this._SellerID = value.CompanyID;
					}
					else
					{
						this._SellerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_InvoiceItem1", Storage="_Organization1", ThisKey="DonationID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Donatory
		{
			get
			{
				return this._Organization1.Entity;
			}
			set
			{
				Organization previousValue = this._Organization1.Entity;
				if (((previousValue != value) 
							|| (this._Organization1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization1.Entity = null;
						previousValue.DonatedInvoiceItems.Remove(this);
					}
					this._Organization1.Entity = value;
					if ((value != null))
					{
						value.DonatedInvoiceItems.Add(this);
						this._DonationID = value.CompanyID;
					}
					else
					{
						this._DonationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Donatory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceDetails(InvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceItem = this;
		}
		
		private void detach_InvoiceDetails(InvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceItem = null;
		}
		
		private void attach_InvoiceAllowances(InvoiceAllowance entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceItem = this;
		}
		
		private void detach_InvoiceAllowances(InvoiceAllowance entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceItem = null;
		}
		
		private void attach_InvoiceDeliveryTracking(InvoiceDeliveryTracking entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceItem = this;
		}
		
		private void detach_InvoiceDeliveryTracking(InvoiceDeliveryTracking entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceItem = null;
		}
		
		private void Initialize()
		{
			this._InvoiceByHousehold = default(EntityRef<InvoiceByHousehold>);
			this._InvoiceCancellation = default(EntityRef<InvoiceCancellation>);
			this._InvoiceDetails = new EntitySet<InvoiceDetail>(new Action<InvoiceDetail>(this.attach_InvoiceDetails), new Action<InvoiceDetail>(this.detach_InvoiceDetails));
			this._InvoicePrintAssertion = default(EntityRef<InvoicePrintAssertion>);
			this._InvoiceRejection = default(EntityRef<InvoiceRejection>);
			this._InvoiceVoid = default(EntityRef<InvoiceVoid>);
			this._InvoiceAllowances = new EntitySet<InvoiceAllowance>(new Action<InvoiceAllowance>(this.attach_InvoiceAllowances), new Action<InvoiceAllowance>(this.detach_InvoiceAllowances));
			this._InvoiceNoAssignment = default(EntityRef<InvoiceNoAssignment>);
			this._InvoiceWinningNumber = default(EntityRef<InvoiceWinningNumber>);
			this._InvoicePaperRequest = default(EntityRef<InvoicePaperRequest>);
			this._InvoicePrintQueue = default(EntityRef<InvoicePrintQueue>);
			this._B2BBuyerInvoiceTag = default(EntityRef<B2BBuyerInvoiceTag>);
			this._InvoiceAmountType = default(EntityRef<InvoiceAmountType>);
			this._InvoiceSeller = default(EntityRef<InvoiceSeller>);
			this._InvoiceCarrier = default(EntityRef<InvoiceCarrier>);
			this._InvoiceDonation = default(EntityRef<InvoiceDonation>);
			this._InvoiceDeliveryTracking = new EntitySet<InvoiceDeliveryTracking>(new Action<InvoiceDeliveryTracking>(this.attach_InvoiceDeliveryTracking), new Action<InvoiceDeliveryTracking>(this.detach_InvoiceDeliveryTracking));
			this._InvoiceBuyer = default(EntityRef<InvoiceBuyer>);
			this._InvoicePurchaseOrder = default(EntityRef<InvoicePurchaseOrder>);
			this._InvoiceItemExtension = default(EntityRef<InvoiceItemExtension>);
			this._CDS_Document = default(EntityRef<CDS_Document>);
			this._Organization = default(EntityRef<Organization>);
			this._Organization1 = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeID;
		
		private string _TypeName;
		
		private EntitySet<CDS_Document> _CDS_Documents;
		
		private EntitySet<DocumentDispatch> _DocumentDispatches;
		
		private EntitySet<DocumentPrintLog> _DocumentPrintLogs;
		
		private EntitySet<DocumentDownloadLog> _DocumentDownloadLogs;
		
		private EntitySet<DocumentReplication> _DocumentReplications;
		
		private EntitySet<DocumentTypeFlow> _DocumentTypeFlow;
		
		private EntitySet<CommonDocumentTypeFlow> _CommonDocumentTypeFlow;
		
		private EntitySet<ExceptionLog> _ExceptionLog;
		
		private EntitySet<DocumentReady> _DocumentReady;
		
		private EntitySet<CALog> _CALog;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    #endregion
		
		public DocumentType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_CDS_Document", Storage="_CDS_Documents", ThisKey="TypeID", OtherKey="DocType")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<CDS_Document> CDS_Documents
		{
			get
			{
				if ((this.serializing 
							&& (this._CDS_Documents.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CDS_Documents;
			}
			set
			{
				this._CDS_Documents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_DocumentDispatch", Storage="_DocumentDispatches", ThisKey="TypeID", OtherKey="TypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<DocumentDispatch> DocumentDispatches
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentDispatches.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentDispatches;
			}
			set
			{
				this._DocumentDispatches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_DocumentPrintLog", Storage="_DocumentPrintLogs", ThisKey="TypeID", OtherKey="TypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<DocumentPrintLog> DocumentPrintLogs
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentPrintLogs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentPrintLogs;
			}
			set
			{
				this._DocumentPrintLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_DocumentDownloadLog", Storage="_DocumentDownloadLogs", ThisKey="TypeID", OtherKey="TypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<DocumentDownloadLog> DocumentDownloadLogs
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentDownloadLogs.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentDownloadLogs;
			}
			set
			{
				this._DocumentDownloadLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_DocumentReplication", Storage="_DocumentReplications", ThisKey="TypeID", OtherKey="TypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<DocumentReplication> DocumentReplications
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentReplications.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentReplications;
			}
			set
			{
				this._DocumentReplications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_DocumentTypeFlow", Storage="_DocumentTypeFlow", ThisKey="TypeID", OtherKey="TypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<DocumentTypeFlow> DocumentTypeFlow
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentTypeFlow.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentTypeFlow;
			}
			set
			{
				this._DocumentTypeFlow.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_CommonDocumentTypeFlow", Storage="_CommonDocumentTypeFlow", ThisKey="TypeID", OtherKey="TypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<CommonDocumentTypeFlow> CommonDocumentTypeFlow
		{
			get
			{
				if ((this.serializing 
							&& (this._CommonDocumentTypeFlow.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CommonDocumentTypeFlow;
			}
			set
			{
				this._CommonDocumentTypeFlow.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_ExceptionLog", Storage="_ExceptionLog", ThisKey="TypeID", OtherKey="TypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<ExceptionLog> ExceptionLog
		{
			get
			{
				if ((this.serializing 
							&& (this._ExceptionLog.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ExceptionLog;
			}
			set
			{
				this._ExceptionLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_DocumentReady", Storage="_DocumentReady", ThisKey="TypeID", OtherKey="TypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<DocumentReady> DocumentReady
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentReady.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentReady;
			}
			set
			{
				this._DocumentReady.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_CALog", Storage="_CALog", ThisKey="TypeID", OtherKey="TypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<CALog> CALog
		{
			get
			{
				if ((this.serializing 
							&& (this._CALog.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CALog;
			}
			set
			{
				this._CALog.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CDS_Documents(CDS_Document entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = this;
		}
		
		private void detach_CDS_Documents(CDS_Document entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = null;
		}
		
		private void attach_DocumentDispatches(DocumentDispatch entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = this;
		}
		
		private void detach_DocumentDispatches(DocumentDispatch entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = null;
		}
		
		private void attach_DocumentPrintLogs(DocumentPrintLog entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = this;
		}
		
		private void detach_DocumentPrintLogs(DocumentPrintLog entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = null;
		}
		
		private void attach_DocumentDownloadLogs(DocumentDownloadLog entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = this;
		}
		
		private void detach_DocumentDownloadLogs(DocumentDownloadLog entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = null;
		}
		
		private void attach_DocumentReplications(DocumentReplication entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = this;
		}
		
		private void detach_DocumentReplications(DocumentReplication entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = null;
		}
		
		private void attach_DocumentTypeFlow(DocumentTypeFlow entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = this;
		}
		
		private void detach_DocumentTypeFlow(DocumentTypeFlow entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = null;
		}
		
		private void attach_CommonDocumentTypeFlow(CommonDocumentTypeFlow entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = this;
		}
		
		private void detach_CommonDocumentTypeFlow(CommonDocumentTypeFlow entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = null;
		}
		
		private void attach_ExceptionLog(ExceptionLog entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = this;
		}
		
		private void detach_ExceptionLog(ExceptionLog entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = null;
		}
		
		private void attach_DocumentReady(DocumentReady entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = this;
		}
		
		private void detach_DocumentReady(DocumentReady entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = null;
		}
		
		private void attach_CALog(CALog entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = this;
		}
		
		private void detach_CALog(CALog entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = null;
		}
		
		private void Initialize()
		{
			this._CDS_Documents = new EntitySet<CDS_Document>(new Action<CDS_Document>(this.attach_CDS_Documents), new Action<CDS_Document>(this.detach_CDS_Documents));
			this._DocumentDispatches = new EntitySet<DocumentDispatch>(new Action<DocumentDispatch>(this.attach_DocumentDispatches), new Action<DocumentDispatch>(this.detach_DocumentDispatches));
			this._DocumentPrintLogs = new EntitySet<DocumentPrintLog>(new Action<DocumentPrintLog>(this.attach_DocumentPrintLogs), new Action<DocumentPrintLog>(this.detach_DocumentPrintLogs));
			this._DocumentDownloadLogs = new EntitySet<DocumentDownloadLog>(new Action<DocumentDownloadLog>(this.attach_DocumentDownloadLogs), new Action<DocumentDownloadLog>(this.detach_DocumentDownloadLogs));
			this._DocumentReplications = new EntitySet<DocumentReplication>(new Action<DocumentReplication>(this.attach_DocumentReplications), new Action<DocumentReplication>(this.detach_DocumentReplications));
			this._DocumentTypeFlow = new EntitySet<DocumentTypeFlow>(new Action<DocumentTypeFlow>(this.attach_DocumentTypeFlow), new Action<DocumentTypeFlow>(this.detach_DocumentTypeFlow));
			this._CommonDocumentTypeFlow = new EntitySet<CommonDocumentTypeFlow>(new Action<CommonDocumentTypeFlow>(this.attach_CommonDocumentTypeFlow), new Action<CommonDocumentTypeFlow>(this.detach_CommonDocumentTypeFlow));
			this._ExceptionLog = new EntitySet<ExceptionLog>(new Action<ExceptionLog>(this.attach_ExceptionLog), new Action<ExceptionLog>(this.detach_ExceptionLog));
			this._DocumentReady = new EntitySet<DocumentReady>(new Action<DocumentReady>(this.attach_DocumentReady), new Action<DocumentReady>(this.detach_DocumentReady));
			this._CALog = new EntitySet<CALog>(new Action<CALog>(this.attach_CALog), new Action<CALog>(this.detach_CALog));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.viewDomationListCountGroup")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class viewDomationListCountGroup
	{
		
		private string _No;
		
		private System.Nullable<int> _SellerID;
		
		private System.Nullable<int> _DonationID;
		
		private string _AgencyCode;
		
		private string _WAName;
		
		private string _DonateMark;
		
		private string _InvoCount;
		
		private string _WinningType;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		public viewDomationListCountGroup()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this._No = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					this._SellerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonationID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> DonationID
		{
			get
			{
				return this._DonationID;
			}
			set
			{
				if ((this._DonationID != value))
				{
					this._DonationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyCode", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string AgencyCode
		{
			get
			{
				return this._AgencyCode;
			}
			set
			{
				if ((this._AgencyCode != value))
				{
					this._AgencyCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WAName", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string WAName
		{
			get
			{
				return this._WAName;
			}
			set
			{
				if ((this._WAName != value))
				{
					this._WAName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonateMark", DbType="NVarChar(1)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string DonateMark
		{
			get
			{
				return this._DonateMark;
			}
			set
			{
				if ((this._DonateMark != value))
				{
					this._DonateMark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoCount", DbType="VarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string InvoCount
		{
			get
			{
				return this._InvoCount;
			}
			set
			{
				if ((this._InvoCount != value))
				{
					this._InvoCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinningType", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string WinningType
		{
			get
			{
				return this._WinningType;
			}
			set
			{
				if ((this._WinningType != value))
				{
					this._WinningType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProfileExtension")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserProfileExtension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UID;
		
		private string _IDNo;
		
		private string _Sex;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _NightPhone;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    partial void OnIDNoChanging(string value);
    partial void OnIDNoChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnNightPhoneChanging(string value);
    partial void OnNightPhoneChanged();
    #endregion
		
		public UserProfileExtension()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNo", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string IDNo
		{
			get
			{
				return this._IDNo;
			}
			set
			{
				if ((this._IDNo != value))
				{
					this.OnIDNoChanging(value);
					this.SendPropertyChanging();
					this._IDNo = value;
					this.SendPropertyChanged("IDNo");
					this.OnIDNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="NVarChar(1)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NightPhone", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string NightPhone
		{
			get
			{
				return this._NightPhone;
			}
			set
			{
				if ((this._NightPhone != value))
				{
					this.OnNightPhoneChanging(value);
					this.SendPropertyChanging();
					this._NightPhone = value;
					this.SendPropertyChanged("NightPhone");
					this.OnNightPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserProfileExtension", Storage="_UserProfile", ThisKey="UID", OtherKey="UID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.UserProfileExtension = null;
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.UserProfileExtension = this;
						this._UID = value.UID;
					}
					else
					{
						this._UID = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProfileStatus")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserProfileStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UID;
		
		private System.Nullable<int> _CurrentLevel;
		
		private EntityRef<LevelExpression> _LevelExpression;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    partial void OnCurrentLevelChanging(System.Nullable<int> value);
    partial void OnCurrentLevelChanged();
    #endregion
		
		public UserProfileStatus()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentLevel", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> CurrentLevel
		{
			get
			{
				return this._CurrentLevel;
			}
			set
			{
				if ((this._CurrentLevel != value))
				{
					if (this._LevelExpression.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrentLevelChanging(value);
					this.SendPropertyChanging();
					this._CurrentLevel = value;
					this.SendPropertyChanged("CurrentLevel");
					this.OnCurrentLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_UserProfileStatus", Storage="_LevelExpression", ThisKey="CurrentLevel", OtherKey="LevelID", IsForeignKey=true)]
		public LevelExpression LevelExpression
		{
			get
			{
				return this._LevelExpression.Entity;
			}
			set
			{
				LevelExpression previousValue = this._LevelExpression.Entity;
				if (((previousValue != value) 
							|| (this._LevelExpression.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LevelExpression.Entity = null;
						previousValue.UserProfileStatus.Remove(this);
					}
					this._LevelExpression.Entity = value;
					if ((value != null))
					{
						value.UserProfileStatus.Add(this);
						this._CurrentLevel = value.LevelID;
					}
					else
					{
						this._CurrentLevel = default(Nullable<int>);
					}
					this.SendPropertyChanged("LevelExpression");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserProfileStatus", Storage="_UserProfile", ThisKey="UID", OtherKey="UID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.UserProfileStatus = null;
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.UserProfileStatus = this;
						this._UID = value.UID;
					}
					else
					{
						this._UID = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._LevelExpression = default(EntityRef<LevelExpression>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExceptionReplication")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ExceptionReplication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private EntityRef<ExceptionLog> _ExceptionLog;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    #endregion
		
		public ExceptionReplication()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					if (this._ExceptionLog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExceptionLog_ExceptionReplication", Storage="_ExceptionLog", ThisKey="LogID", OtherKey="LogID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ExceptionLog ExceptionLog
		{
			get
			{
				return this._ExceptionLog.Entity;
			}
			set
			{
				ExceptionLog previousValue = this._ExceptionLog.Entity;
				if (((previousValue != value) 
							|| (this._ExceptionLog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExceptionLog.Entity = null;
						previousValue.ExceptionReplication = null;
					}
					this._ExceptionLog.Entity = value;
					if ((value != null))
					{
						value.ExceptionReplication = this;
						this._LogID = value.LogID;
					}
					else
					{
						this._LogID = default(int);
					}
					this.SendPropertyChanged("ExceptionLog");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ExceptionLog = default(EntityRef<ExceptionLog>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MemberCode")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MemberCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _CompanyID;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
		private System.Guid _UUID;
		
		private string _HashID;
		
		private int _CodeID;
		
		private EntitySet<InvoiceUserCarrier> _InvoiceUserCarriers;
		
		private EntityRef<Organization> _Organization;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    partial void OnUUIDChanging(System.Guid value);
    partial void OnUUIDChanged();
    partial void OnHashIDChanging(string value);
    partial void OnHashIDChanged();
    partial void OnCodeIDChanging(int value);
    partial void OnCodeIDChanged();
    #endregion
		
		public MemberCode()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UUID", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid UUID
		{
			get
			{
				return this._UUID;
			}
			set
			{
				if ((this._UUID != value))
				{
					this.OnUUIDChanging(value);
					this.SendPropertyChanging();
					this._UUID = value;
					this.SendPropertyChanged("UUID");
					this.OnUUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashID", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string HashID
		{
			get
			{
				return this._HashID;
			}
			set
			{
				if ((this._HashID != value))
				{
					this.OnHashIDChanging(value);
					this.SendPropertyChanging();
					this._HashID = value;
					this.SendPropertyChanged("HashID");
					this.OnHashIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int CodeID
		{
			get
			{
				return this._CodeID;
			}
			set
			{
				if ((this._CodeID != value))
				{
					this.OnCodeIDChanging(value);
					this.SendPropertyChanging();
					this._CodeID = value;
					this.SendPropertyChanged("CodeID");
					this.OnCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MemberCode_InvoiceUserCarrier", Storage="_InvoiceUserCarriers", ThisKey="CodeID", OtherKey="CodeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<InvoiceUserCarrier> InvoiceUserCarriers
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceUserCarriers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceUserCarriers;
			}
			set
			{
				this._InvoiceUserCarriers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_MemberCode", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.MemberCodes.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.MemberCodes.Add(this);
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceUserCarriers(InvoiceUserCarrier entity)
		{
			this.SendPropertyChanging();
			entity.MemberCode = this;
		}
		
		private void detach_InvoiceUserCarriers(InvoiceUserCarrier entity)
		{
			this.SendPropertyChanging();
			entity.MemberCode = null;
		}
		
		private void Initialize()
		{
			this._InvoiceUserCarriers = new EntitySet<InvoiceUserCarrier>(new Action<InvoiceUserCarrier>(this.attach_InvoiceUserCarriers), new Action<InvoiceUserCarrier>(this.detach_InvoiceUserCarriers));
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceUserCarrier")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceUserCarrier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CarrierID;
		
		private System.Nullable<int> _UID;
		
		private int _TypeID;
		
		private string _CarrierNo;
		
		private string _CarrierNo2;
		
		private System.Nullable<bool> _DeleteFlag;
		
		private System.Nullable<int> _CodeID;
		
		private EntitySet<InvoiceByHousehold> _InvoiceByHouseholds;
		
		private EntityRef<InvoiceUserCarrierType> _InvoiceUserCarrierType;
		
		private EntityRef<MemberCode> _MemberCode;
		
		private EntityRef<UserProfile> _UserProfile;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCarrierIDChanging(int value);
    partial void OnCarrierIDChanged();
    partial void OnUIDChanging(System.Nullable<int> value);
    partial void OnUIDChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnCarrierNoChanging(string value);
    partial void OnCarrierNoChanged();
    partial void OnCarrierNo2Changing(string value);
    partial void OnCarrierNo2Changed();
    partial void OnDeleteFlagChanging(System.Nullable<bool> value);
    partial void OnDeleteFlagChanged();
    partial void OnCodeIDChanging(System.Nullable<int> value);
    partial void OnCodeIDChanged();
    #endregion
		
		public InvoiceUserCarrier()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CarrierID
		{
			get
			{
				return this._CarrierID;
			}
			set
			{
				if ((this._CarrierID != value))
				{
					this.OnCarrierIDChanging(value);
					this.SendPropertyChanging();
					this._CarrierID = value;
					this.SendPropertyChanged("CarrierID");
					this.OnCarrierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._InvoiceUserCarrierType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierNo", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CarrierNo
		{
			get
			{
				return this._CarrierNo;
			}
			set
			{
				if ((this._CarrierNo != value))
				{
					this.OnCarrierNoChanging(value);
					this.SendPropertyChanging();
					this._CarrierNo = value;
					this.SendPropertyChanged("CarrierNo");
					this.OnCarrierNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierNo2", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string CarrierNo2
		{
			get
			{
				return this._CarrierNo2;
			}
			set
			{
				if ((this._CarrierNo2 != value))
				{
					this.OnCarrierNo2Changing(value);
					this.SendPropertyChanging();
					this._CarrierNo2 = value;
					this.SendPropertyChanged("CarrierNo2");
					this.OnCarrierNo2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> CodeID
		{
			get
			{
				return this._CodeID;
			}
			set
			{
				if ((this._CodeID != value))
				{
					if (this._MemberCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeIDChanging(value);
					this.SendPropertyChanging();
					this._CodeID = value;
					this.SendPropertyChanged("CodeID");
					this.OnCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceUserCarrier_InvoiceByHousehold", Storage="_InvoiceByHouseholds", ThisKey="CarrierID", OtherKey="CarrierID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<InvoiceByHousehold> InvoiceByHouseholds
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceByHouseholds.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceByHouseholds;
			}
			set
			{
				this._InvoiceByHouseholds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceUserCarrierType_InvoiceUserCarrier", Storage="_InvoiceUserCarrierType", ThisKey="TypeID", OtherKey="TypeID", IsForeignKey=true)]
		public InvoiceUserCarrierType InvoiceUserCarrierType
		{
			get
			{
				return this._InvoiceUserCarrierType.Entity;
			}
			set
			{
				InvoiceUserCarrierType previousValue = this._InvoiceUserCarrierType.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceUserCarrierType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceUserCarrierType.Entity = null;
						previousValue.InvoiceUserCarriers.Remove(this);
					}
					this._InvoiceUserCarrierType.Entity = value;
					if ((value != null))
					{
						value.InvoiceUserCarriers.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("InvoiceUserCarrierType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MemberCode_InvoiceUserCarrier", Storage="_MemberCode", ThisKey="CodeID", OtherKey="CodeID", IsForeignKey=true)]
		public MemberCode MemberCode
		{
			get
			{
				return this._MemberCode.Entity;
			}
			set
			{
				MemberCode previousValue = this._MemberCode.Entity;
				if (((previousValue != value) 
							|| (this._MemberCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MemberCode.Entity = null;
						previousValue.InvoiceUserCarriers.Remove(this);
					}
					this._MemberCode.Entity = value;
					if ((value != null))
					{
						value.InvoiceUserCarriers.Add(this);
						this._CodeID = value.CodeID;
					}
					else
					{
						this._CodeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MemberCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_InvoiceUserCarrier", Storage="_UserProfile", ThisKey="UID", OtherKey="UID", IsForeignKey=true)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.InvoiceUserCarrier.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.InvoiceUserCarrier.Add(this);
						this._UID = value.UID;
					}
					else
					{
						this._UID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceByHouseholds(InvoiceByHousehold entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceUserCarrier = this;
		}
		
		private void detach_InvoiceByHouseholds(InvoiceByHousehold entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceUserCarrier = null;
		}
		
		private void Initialize()
		{
			this._InvoiceByHouseholds = new EntitySet<InvoiceByHousehold>(new Action<InvoiceByHousehold>(this.attach_InvoiceByHouseholds), new Action<InvoiceByHousehold>(this.detach_InvoiceByHouseholds));
			this._InvoiceUserCarrierType = default(EntityRef<InvoiceUserCarrierType>);
			this._MemberCode = default(EntityRef<MemberCode>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentDispatch")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentDispatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private int _TypeID;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
		private EntityRef<DocumentType> _DocumentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    #endregion
		
		public DocumentDispatch()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._DocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentDispatch", Storage="_CDS_Document", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true)]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.DocumentDispatches.Remove(this);
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.DocumentDispatches.Add(this);
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_DocumentDispatch", Storage="_DocumentType", ThisKey="TypeID", OtherKey="TypeID", IsForeignKey=true)]
		public DocumentType DocumentType
		{
			get
			{
				return this._DocumentType.Entity;
			}
			set
			{
				DocumentType previousValue = this._DocumentType.Entity;
				if (((previousValue != value) 
							|| (this._DocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentType.Entity = null;
						previousValue.DocumentDispatches.Remove(this);
					}
					this._DocumentType.Entity = value;
					if ((value != null))
					{
						value.DocumentDispatches.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("DocumentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CDS_Document = default(EntityRef<CDS_Document>);
			this._DocumentType = default(EntityRef<DocumentType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceAllowance")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceAllowance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AllowanceID;
		
		private string _AllowanceNumber;
		
		private System.Nullable<byte> _AllowanceType;
		
		private System.Nullable<System.DateTime> _AllowanceDate;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private System.Nullable<decimal> _TaxAmount;
		
		private System.Nullable<int> _InvoiceID;
		
		private string _SellerId;
		
		private string _BuyerId;
		
		private EntitySet<InvoiceAllowanceDetail> _InvoiceAllowanceDetails;
		
		private EntityRef<InvoiceAllowanceBuyer> _InvoiceAllowanceBuyer;
		
		private EntityRef<InvoiceAllowanceSeller> _InvoiceAllowanceSeller;
		
		private EntityRef<InvoiceAllowanceItemExtension> _InvoiceAllowanceItemExtension;
		
		private EntityRef<InvoiceAllowanceCancellation> _InvoiceAllowanceCancellation;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAllowanceIDChanging(int value);
    partial void OnAllowanceIDChanged();
    partial void OnAllowanceNumberChanging(string value);
    partial void OnAllowanceNumberChanged();
    partial void OnAllowanceTypeChanging(System.Nullable<byte> value);
    partial void OnAllowanceTypeChanged();
    partial void OnAllowanceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAllowanceDateChanged();
    partial void OnTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTotalAmountChanged();
    partial void OnTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnTaxAmountChanged();
    partial void OnInvoiceIDChanging(System.Nullable<int> value);
    partial void OnInvoiceIDChanged();
    partial void OnSellerIdChanging(string value);
    partial void OnSellerIdChanged();
    partial void OnBuyerIdChanging(string value);
    partial void OnBuyerIdChanged();
    #endregion
		
		public InvoiceAllowance()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowanceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AllowanceID
		{
			get
			{
				return this._AllowanceID;
			}
			set
			{
				if ((this._AllowanceID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAllowanceIDChanging(value);
					this.SendPropertyChanging();
					this._AllowanceID = value;
					this.SendPropertyChanged("AllowanceID");
					this.OnAllowanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowanceNumber", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string AllowanceNumber
		{
			get
			{
				return this._AllowanceNumber;
			}
			set
			{
				if ((this._AllowanceNumber != value))
				{
					this.OnAllowanceNumberChanging(value);
					this.SendPropertyChanging();
					this._AllowanceNumber = value;
					this.SendPropertyChanged("AllowanceNumber");
					this.OnAllowanceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowanceType", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<byte> AllowanceType
		{
			get
			{
				return this._AllowanceType;
			}
			set
			{
				if ((this._AllowanceType != value))
				{
					this.OnAllowanceTypeChanging(value);
					this.SendPropertyChanging();
					this._AllowanceType = value;
					this.SendPropertyChanged("AllowanceType");
					this.OnAllowanceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowanceDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> AllowanceDate
		{
			get
			{
				return this._AllowanceDate;
			}
			set
			{
				if ((this._AllowanceDate != value))
				{
					this.OnAllowanceDateChanging(value);
					this.SendPropertyChanging();
					this._AllowanceDate = value;
					this.SendPropertyChanged("AllowanceDate");
					this.OnAllowanceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmount", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<decimal> TaxAmount
		{
			get
			{
				return this._TaxAmount;
			}
			set
			{
				if ((this._TaxAmount != value))
				{
					this.OnTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxAmount = value;
					this.SendPropertyChanged("TaxAmount");
					this.OnTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerId", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string SellerId
		{
			get
			{
				return this._SellerId;
			}
			set
			{
				if ((this._SellerId != value))
				{
					this.OnSellerIdChanging(value);
					this.SendPropertyChanging();
					this._SellerId = value;
					this.SendPropertyChanged("SellerId");
					this.OnSellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerId", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string BuyerId
		{
			get
			{
				return this._BuyerId;
			}
			set
			{
				if ((this._BuyerId != value))
				{
					this.OnBuyerIdChanging(value);
					this.SendPropertyChanging();
					this._BuyerId = value;
					this.SendPropertyChanged("BuyerId");
					this.OnBuyerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceAllowance_InvoiceAllowanceDetail", Storage="_InvoiceAllowanceDetails", ThisKey="AllowanceID", OtherKey="AllowanceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<InvoiceAllowanceDetail> InvoiceAllowanceDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceAllowanceDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceAllowanceDetails;
			}
			set
			{
				this._InvoiceAllowanceDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceAllowance_InvoiceAllowanceBuyer", Storage="_InvoiceAllowanceBuyer", ThisKey="AllowanceID", OtherKey="AllowanceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public InvoiceAllowanceBuyer InvoiceAllowanceBuyer
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceAllowanceBuyer.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoiceAllowanceBuyer.Entity;
			}
			set
			{
				InvoiceAllowanceBuyer previousValue = this._InvoiceAllowanceBuyer.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceAllowanceBuyer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceAllowanceBuyer.Entity = null;
						previousValue.InvoiceAllowance = null;
					}
					this._InvoiceAllowanceBuyer.Entity = value;
					if ((value != null))
					{
						value.InvoiceAllowance = this;
					}
					this.SendPropertyChanged("InvoiceAllowanceBuyer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceAllowance_InvoiceAllowanceSeller", Storage="_InvoiceAllowanceSeller", ThisKey="AllowanceID", OtherKey="AllowanceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public InvoiceAllowanceSeller InvoiceAllowanceSeller
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceAllowanceSeller.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoiceAllowanceSeller.Entity;
			}
			set
			{
				InvoiceAllowanceSeller previousValue = this._InvoiceAllowanceSeller.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceAllowanceSeller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceAllowanceSeller.Entity = null;
						previousValue.InvoiceAllowance = null;
					}
					this._InvoiceAllowanceSeller.Entity = value;
					if ((value != null))
					{
						value.InvoiceAllowance = this;
					}
					this.SendPropertyChanged("InvoiceAllowanceSeller");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceAllowance_InvoiceAllowanceItemExtension", Storage="_InvoiceAllowanceItemExtension", ThisKey="AllowanceID", OtherKey="AllowanceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public InvoiceAllowanceItemExtension InvoiceAllowanceItemExtension
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceAllowanceItemExtension.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoiceAllowanceItemExtension.Entity;
			}
			set
			{
				InvoiceAllowanceItemExtension previousValue = this._InvoiceAllowanceItemExtension.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceAllowanceItemExtension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceAllowanceItemExtension.Entity = null;
						previousValue.InvoiceAllowance = null;
					}
					this._InvoiceAllowanceItemExtension.Entity = value;
					if ((value != null))
					{
						value.InvoiceAllowance = this;
					}
					this.SendPropertyChanged("InvoiceAllowanceItemExtension");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceAllowance_InvoiceAllowanceCancellation", Storage="_InvoiceAllowanceCancellation", ThisKey="AllowanceID", OtherKey="AllowanceID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public InvoiceAllowanceCancellation InvoiceAllowanceCancellation
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceAllowanceCancellation.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoiceAllowanceCancellation.Entity;
			}
			set
			{
				InvoiceAllowanceCancellation previousValue = this._InvoiceAllowanceCancellation.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceAllowanceCancellation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceAllowanceCancellation.Entity = null;
						previousValue.InvoiceAllowance = null;
					}
					this._InvoiceAllowanceCancellation.Entity = value;
					if ((value != null))
					{
						value.InvoiceAllowance = this;
					}
					this.SendPropertyChanged("InvoiceAllowanceCancellation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_InvoiceAllowance", Storage="_CDS_Document", ThisKey="AllowanceID", OtherKey="DocID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.InvoiceAllowance = null;
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.InvoiceAllowance = this;
						this._AllowanceID = value.DocID;
					}
					else
					{
						this._AllowanceID = default(int);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceAllowance", Storage="_InvoiceItem", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true)]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.InvoiceAllowances.Remove(this);
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.InvoiceAllowances.Add(this);
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceAllowanceDetails(InvoiceAllowanceDetail entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceAllowance = this;
		}
		
		private void detach_InvoiceAllowanceDetails(InvoiceAllowanceDetail entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceAllowance = null;
		}
		
		private void Initialize()
		{
			this._InvoiceAllowanceDetails = new EntitySet<InvoiceAllowanceDetail>(new Action<InvoiceAllowanceDetail>(this.attach_InvoiceAllowanceDetails), new Action<InvoiceAllowanceDetail>(this.detach_InvoiceAllowanceDetails));
			this._InvoiceAllowanceBuyer = default(EntityRef<InvoiceAllowanceBuyer>);
			this._InvoiceAllowanceSeller = default(EntityRef<InvoiceAllowanceSeller>);
			this._InvoiceAllowanceItemExtension = default(EntityRef<InvoiceAllowanceItemExtension>);
			this._InvoiceAllowanceCancellation = default(EntityRef<InvoiceAllowanceCancellation>);
			this._CDS_Document = default(EntityRef<CDS_Document>);
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceNoAssignment")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceNoAssignment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private System.Nullable<int> _IntervalID;
		
		private System.Nullable<int> _InvoiceNo;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
		private EntityRef<InvoiceNoInterval> _InvoiceNoInterval;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnIntervalIDChanging(System.Nullable<int> value);
    partial void OnIntervalIDChanged();
    partial void OnInvoiceNoChanging(System.Nullable<int> value);
    partial void OnInvoiceNoChanged();
    #endregion
		
		public InvoiceNoAssignment()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntervalID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> IntervalID
		{
			get
			{
				return this._IntervalID;
			}
			set
			{
				if ((this._IntervalID != value))
				{
					if (this._InvoiceNoInterval.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIntervalIDChanging(value);
					this.SendPropertyChanging();
					this._IntervalID = value;
					this.SendPropertyChanged("IntervalID");
					this.OnIntervalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceNoAssignment", Storage="_InvoiceItem", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true)]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.InvoiceNoAssignment = null;
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.InvoiceNoAssignment = this;
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceNoInterval_InvoiceNoAssignment", Storage="_InvoiceNoInterval", ThisKey="IntervalID", OtherKey="IntervalID", IsForeignKey=true)]
		public InvoiceNoInterval InvoiceNoInterval
		{
			get
			{
				return this._InvoiceNoInterval.Entity;
			}
			set
			{
				InvoiceNoInterval previousValue = this._InvoiceNoInterval.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceNoInterval.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceNoInterval.Entity = null;
						previousValue.InvoiceNoAssignments.Remove(this);
					}
					this._InvoiceNoInterval.Entity = value;
					if ((value != null))
					{
						value.InvoiceNoAssignments.Add(this);
						this._IntervalID = value.IntervalID;
					}
					else
					{
						this._IntervalID = default(Nullable<int>);
					}
					this.SendPropertyChanged("InvoiceNoInterval");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			this._InvoiceNoInterval = default(EntityRef<InvoiceNoInterval>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceNoInterval")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceNoInterval : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IntervalID;
		
		private int _TrackID;
		
		private int _SellerID;
		
		private int _StartNo;
		
		private int _EndNo;
		
		private EntitySet<InvoiceNoAssignment> _InvoiceNoAssignments;
		
		private EntitySet<BlankInvoiceNoSummary> _BlankInvoiceNoSummary;
		
		private EntityRef<InvoiceNoSegment> _InvoiceNoSegment;
		
		private EntityRef<InvoiceTrackCodeAssignment> _InvoiceTrackCodeAssignment;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIntervalIDChanging(int value);
    partial void OnIntervalIDChanged();
    partial void OnTrackIDChanging(int value);
    partial void OnTrackIDChanged();
    partial void OnSellerIDChanging(int value);
    partial void OnSellerIDChanged();
    partial void OnStartNoChanging(int value);
    partial void OnStartNoChanged();
    partial void OnEndNoChanging(int value);
    partial void OnEndNoChanged();
    #endregion
		
		public InvoiceNoInterval()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntervalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int IntervalID
		{
			get
			{
				return this._IntervalID;
			}
			set
			{
				if ((this._IntervalID != value))
				{
					this.OnIntervalIDChanging(value);
					this.SendPropertyChanging();
					this._IntervalID = value;
					this.SendPropertyChanged("IntervalID");
					this.OnIntervalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int TrackID
		{
			get
			{
				return this._TrackID;
			}
			set
			{
				if ((this._TrackID != value))
				{
					if (this._InvoiceTrackCodeAssignment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrackIDChanging(value);
					this.SendPropertyChanging();
					this._TrackID = value;
					this.SendPropertyChanged("TrackID");
					this.OnTrackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					if (this._InvoiceTrackCodeAssignment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerIDChanging(value);
					this.SendPropertyChanging();
					this._SellerID = value;
					this.SendPropertyChanged("SellerID");
					this.OnSellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartNo", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int StartNo
		{
			get
			{
				return this._StartNo;
			}
			set
			{
				if ((this._StartNo != value))
				{
					this.OnStartNoChanging(value);
					this.SendPropertyChanging();
					this._StartNo = value;
					this.SendPropertyChanged("StartNo");
					this.OnStartNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndNo", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int EndNo
		{
			get
			{
				return this._EndNo;
			}
			set
			{
				if ((this._EndNo != value))
				{
					this.OnEndNoChanging(value);
					this.SendPropertyChanging();
					this._EndNo = value;
					this.SendPropertyChanged("EndNo");
					this.OnEndNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceNoInterval_InvoiceNoAssignment", Storage="_InvoiceNoAssignments", ThisKey="IntervalID", OtherKey="IntervalID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<InvoiceNoAssignment> InvoiceNoAssignments
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceNoAssignments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceNoAssignments;
			}
			set
			{
				this._InvoiceNoAssignments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceNoInterval_BlankInvoiceNoSummary", Storage="_BlankInvoiceNoSummary", ThisKey="IntervalID", OtherKey="IntervalID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<BlankInvoiceNoSummary> BlankInvoiceNoSummary
		{
			get
			{
				if ((this.serializing 
							&& (this._BlankInvoiceNoSummary.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BlankInvoiceNoSummary;
			}
			set
			{
				this._BlankInvoiceNoSummary.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceNoInterval_InvoiceNoSegment", Storage="_InvoiceNoSegment", ThisKey="IntervalID", OtherKey="SegmentID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public InvoiceNoSegment InvoiceNoSegment
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceNoSegment.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoiceNoSegment.Entity;
			}
			set
			{
				InvoiceNoSegment previousValue = this._InvoiceNoSegment.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceNoSegment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceNoSegment.Entity = null;
						previousValue.InvoiceNoInterval = null;
					}
					this._InvoiceNoSegment.Entity = value;
					if ((value != null))
					{
						value.InvoiceNoInterval = this;
					}
					this.SendPropertyChanged("InvoiceNoSegment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceTrackCodeAssignment_InvoiceNoInterval", Storage="_InvoiceTrackCodeAssignment", ThisKey="TrackID,SellerID", OtherKey="TrackID,SellerID", IsForeignKey=true)]
		public InvoiceTrackCodeAssignment InvoiceTrackCodeAssignment
		{
			get
			{
				return this._InvoiceTrackCodeAssignment.Entity;
			}
			set
			{
				InvoiceTrackCodeAssignment previousValue = this._InvoiceTrackCodeAssignment.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceTrackCodeAssignment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceTrackCodeAssignment.Entity = null;
						previousValue.InvoiceNoIntervals.Remove(this);
					}
					this._InvoiceTrackCodeAssignment.Entity = value;
					if ((value != null))
					{
						value.InvoiceNoIntervals.Add(this);
						this._TrackID = value.TrackID;
						this._SellerID = value.SellerID;
					}
					else
					{
						this._TrackID = default(int);
						this._SellerID = default(int);
					}
					this.SendPropertyChanged("InvoiceTrackCodeAssignment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceNoAssignments(InvoiceNoAssignment entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceNoInterval = this;
		}
		
		private void detach_InvoiceNoAssignments(InvoiceNoAssignment entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceNoInterval = null;
		}
		
		private void attach_BlankInvoiceNoSummary(BlankInvoiceNoSummary entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceNoInterval = this;
		}
		
		private void detach_BlankInvoiceNoSummary(BlankInvoiceNoSummary entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceNoInterval = null;
		}
		
		private void Initialize()
		{
			this._InvoiceNoAssignments = new EntitySet<InvoiceNoAssignment>(new Action<InvoiceNoAssignment>(this.attach_InvoiceNoAssignments), new Action<InvoiceNoAssignment>(this.detach_InvoiceNoAssignments));
			this._BlankInvoiceNoSummary = new EntitySet<BlankInvoiceNoSummary>(new Action<BlankInvoiceNoSummary>(this.attach_BlankInvoiceNoSummary), new Action<BlankInvoiceNoSummary>(this.detach_BlankInvoiceNoSummary));
			this._InvoiceNoSegment = default(EntityRef<InvoiceNoSegment>);
			this._InvoiceTrackCodeAssignment = default(EntityRef<InvoiceTrackCodeAssignment>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceTrackCode")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceTrackCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TrackID;
		
		private string _TrackCode;
		
		private short _Year;
		
		private short _PeriodNo;
		
		private EntitySet<InvoiceTrackCodeAssignment> _InvoiceTrackCodeAssignments;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrackIDChanging(int value);
    partial void OnTrackIDChanged();
    partial void OnTrackCodeChanging(string value);
    partial void OnTrackCodeChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    partial void OnPeriodNoChanging(short value);
    partial void OnPeriodNoChanged();
    #endregion
		
		public InvoiceTrackCode()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int TrackID
		{
			get
			{
				return this._TrackID;
			}
			set
			{
				if ((this._TrackID != value))
				{
					this.OnTrackIDChanging(value);
					this.SendPropertyChanging();
					this._TrackID = value;
					this.SendPropertyChanged("TrackID");
					this.OnTrackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string TrackCode
		{
			get
			{
				return this._TrackCode;
			}
			set
			{
				if ((this._TrackCode != value))
				{
					this.OnTrackCodeChanging(value);
					this.SendPropertyChanging();
					this._TrackCode = value;
					this.SendPropertyChanged("TrackCode");
					this.OnTrackCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodNo", DbType="SmallInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public short PeriodNo
		{
			get
			{
				return this._PeriodNo;
			}
			set
			{
				if ((this._PeriodNo != value))
				{
					this.OnPeriodNoChanging(value);
					this.SendPropertyChanging();
					this._PeriodNo = value;
					this.SendPropertyChanged("PeriodNo");
					this.OnPeriodNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceTrackCode_InvoiceTrackCodeAssignment", Storage="_InvoiceTrackCodeAssignments", ThisKey="TrackID", OtherKey="TrackID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<InvoiceTrackCodeAssignment> InvoiceTrackCodeAssignments
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceTrackCodeAssignments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceTrackCodeAssignments;
			}
			set
			{
				this._InvoiceTrackCodeAssignments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceTrackCodeAssignments(InvoiceTrackCodeAssignment entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceTrackCode = this;
		}
		
		private void detach_InvoiceTrackCodeAssignments(InvoiceTrackCodeAssignment entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceTrackCode = null;
		}
		
		private void Initialize()
		{
			this._InvoiceTrackCodeAssignments = new EntitySet<InvoiceTrackCodeAssignment>(new Action<InvoiceTrackCodeAssignment>(this.attach_InvoiceTrackCodeAssignments), new Action<InvoiceTrackCodeAssignment>(this.detach_InvoiceTrackCodeAssignments));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceTrackCodeAssignment")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceTrackCodeAssignment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TrackID;
		
		private int _SellerID;
		
		private EntitySet<InvoiceNoInterval> _InvoiceNoIntervals;
		
		private EntitySet<UnassignedInvoiceNo> _UnassignedInvoiceNo;
		
		private EntityRef<InvoiceTrackCode> _InvoiceTrackCode;
		
		private EntityRef<Organization> _Organization;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrackIDChanging(int value);
    partial void OnTrackIDChanged();
    partial void OnSellerIDChanging(int value);
    partial void OnSellerIDChanged();
    #endregion
		
		public InvoiceTrackCodeAssignment()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int TrackID
		{
			get
			{
				return this._TrackID;
			}
			set
			{
				if ((this._TrackID != value))
				{
					if (this._InvoiceTrackCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrackIDChanging(value);
					this.SendPropertyChanging();
					this._TrackID = value;
					this.SendPropertyChanged("TrackID");
					this.OnTrackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerIDChanging(value);
					this.SendPropertyChanging();
					this._SellerID = value;
					this.SendPropertyChanged("SellerID");
					this.OnSellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceTrackCodeAssignment_InvoiceNoInterval", Storage="_InvoiceNoIntervals", ThisKey="TrackID,SellerID", OtherKey="TrackID,SellerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<InvoiceNoInterval> InvoiceNoIntervals
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceNoIntervals.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceNoIntervals;
			}
			set
			{
				this._InvoiceNoIntervals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceTrackCodeAssignment_UnassignedInvoiceNo", Storage="_UnassignedInvoiceNo", ThisKey="TrackID,SellerID", OtherKey="TrackID,SellerID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<UnassignedInvoiceNo> UnassignedInvoiceNo
		{
			get
			{
				if ((this.serializing 
							&& (this._UnassignedInvoiceNo.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UnassignedInvoiceNo;
			}
			set
			{
				this._UnassignedInvoiceNo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceTrackCode_InvoiceTrackCodeAssignment", Storage="_InvoiceTrackCode", ThisKey="TrackID", OtherKey="TrackID", IsForeignKey=true)]
		public InvoiceTrackCode InvoiceTrackCode
		{
			get
			{
				return this._InvoiceTrackCode.Entity;
			}
			set
			{
				InvoiceTrackCode previousValue = this._InvoiceTrackCode.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceTrackCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceTrackCode.Entity = null;
						previousValue.InvoiceTrackCodeAssignments.Remove(this);
					}
					this._InvoiceTrackCode.Entity = value;
					if ((value != null))
					{
						value.InvoiceTrackCodeAssignments.Add(this);
						this._TrackID = value.TrackID;
					}
					else
					{
						this._TrackID = default(int);
					}
					this.SendPropertyChanged("InvoiceTrackCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_InvoiceTrackCodeAssignment", Storage="_Organization", ThisKey="SellerID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.InvoiceTrackCodeAssignments.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.InvoiceTrackCodeAssignments.Add(this);
						this._SellerID = value.CompanyID;
					}
					else
					{
						this._SellerID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceNoIntervals(InvoiceNoInterval entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceTrackCodeAssignment = this;
		}
		
		private void detach_InvoiceNoIntervals(InvoiceNoInterval entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceTrackCodeAssignment = null;
		}
		
		private void attach_UnassignedInvoiceNo(UnassignedInvoiceNo entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceTrackCodeAssignment = this;
		}
		
		private void detach_UnassignedInvoiceNo(UnassignedInvoiceNo entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceTrackCodeAssignment = null;
		}
		
		private void Initialize()
		{
			this._InvoiceNoIntervals = new EntitySet<InvoiceNoInterval>(new Action<InvoiceNoInterval>(this.attach_InvoiceNoIntervals), new Action<InvoiceNoInterval>(this.detach_InvoiceNoIntervals));
			this._UnassignedInvoiceNo = new EntitySet<UnassignedInvoiceNo>(new Action<UnassignedInvoiceNo>(this.attach_UnassignedInvoiceNo), new Action<UnassignedInvoiceNo>(this.detach_UnassignedInvoiceNo));
			this._InvoiceTrackCode = default(EntityRef<InvoiceTrackCode>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentOwner")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentOwner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private int _OwnerID;
		
		private string _ClientID;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnOwnerIDChanging(int value);
    partial void OnOwnerIDChanged();
    partial void OnClientIDChanging(string value);
    partial void OnClientIDChanged();
    #endregion
		
		public DocumentOwner()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentOwner", Storage="_CDS_Document", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true)]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.DocumentOwner = null;
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.DocumentOwner = this;
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_DocumentOwner", Storage="_Organization", ThisKey="OwnerID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.DocumentOwners.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.DocumentOwners.Add(this);
						this._OwnerID = value.CompanyID;
					}
					else
					{
						this._OwnerID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CDS_Document = default(EntityRef<CDS_Document>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UniformInvoiceWinningNumber")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UniformInvoiceWinningNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WinningID;
		
		private int _Year;
		
		private int _Period;
		
		private int _Rank;
		
		private string _WinningNO;
		
		private string _PrizeType;
		
		private System.Nullable<int> _Bonus;
		
		private EntitySet<InvoiceWinningNumber> _InvoiceWinningNumbers;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWinningIDChanging(int value);
    partial void OnWinningIDChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnPeriodChanging(int value);
    partial void OnPeriodChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnWinningNOChanging(string value);
    partial void OnWinningNOChanged();
    partial void OnPrizeTypeChanging(string value);
    partial void OnPrizeTypeChanged();
    partial void OnBonusChanging(System.Nullable<int> value);
    partial void OnBonusChanged();
    #endregion
		
		public UniformInvoiceWinningNumber()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinningID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int WinningID
		{
			get
			{
				return this._WinningID;
			}
			set
			{
				if ((this._WinningID != value))
				{
					this.OnWinningIDChanging(value);
					this.SendPropertyChanging();
					this._WinningID = value;
					this.SendPropertyChanged("WinningID");
					this.OnWinningIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinningNO", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string WinningNO
		{
			get
			{
				return this._WinningNO;
			}
			set
			{
				if ((this._WinningNO != value))
				{
					this.OnWinningNOChanging(value);
					this.SendPropertyChanging();
					this._WinningNO = value;
					this.SendPropertyChanged("WinningNO");
					this.OnWinningNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrizeType", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string PrizeType
		{
			get
			{
				return this._PrizeType;
			}
			set
			{
				if ((this._PrizeType != value))
				{
					this.OnPrizeTypeChanging(value);
					this.SendPropertyChanging();
					this._PrizeType = value;
					this.SendPropertyChanged("PrizeType");
					this.OnPrizeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bonus", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> Bonus
		{
			get
			{
				return this._Bonus;
			}
			set
			{
				if ((this._Bonus != value))
				{
					this.OnBonusChanging(value);
					this.SendPropertyChanging();
					this._Bonus = value;
					this.SendPropertyChanged("Bonus");
					this.OnBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UniformInvoiceWinningNumber_InvoiceWinningNumber", Storage="_InvoiceWinningNumbers", ThisKey="WinningID", OtherKey="WinningID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<InvoiceWinningNumber> InvoiceWinningNumbers
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceWinningNumbers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceWinningNumbers;
			}
			set
			{
				this._InvoiceWinningNumbers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceWinningNumbers(InvoiceWinningNumber entity)
		{
			this.SendPropertyChanging();
			entity.UniformInvoiceWinningNumber = this;
		}
		
		private void detach_InvoiceWinningNumbers(InvoiceWinningNumber entity)
		{
			this.SendPropertyChanging();
			entity.UniformInvoiceWinningNumber = null;
		}
		
		private void Initialize()
		{
			this._InvoiceWinningNumbers = new EntitySet<InvoiceWinningNumber>(new Action<InvoiceWinningNumber>(this.attach_InvoiceWinningNumbers), new Action<InvoiceWinningNumber>(this.detach_InvoiceWinningNumbers));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceWinningNumber")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceWinningNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WinningNO;
		
		private int _Year;
		
		private byte _MonthFrom;
		
		private byte _MonthTo;
		
		private string _WinningType;
		
		private int _InvoiceID;
		
		private string _TrackCode;
		
		private string _DataType;
		
		private string _BonusDescription;
		
		private System.Nullable<int> _WinningID;
		
		private System.Nullable<System.DateTime> _DownloadDate;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
		private EntityRef<UniformInvoiceWinningNumber> _UniformInvoiceWinningNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWinningNOChanging(string value);
    partial void OnWinningNOChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnMonthFromChanging(byte value);
    partial void OnMonthFromChanged();
    partial void OnMonthToChanging(byte value);
    partial void OnMonthToChanged();
    partial void OnWinningTypeChanging(string value);
    partial void OnWinningTypeChanged();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnTrackCodeChanging(string value);
    partial void OnTrackCodeChanged();
    partial void OnDataTypeChanging(string value);
    partial void OnDataTypeChanged();
    partial void OnBonusDescriptionChanging(string value);
    partial void OnBonusDescriptionChanged();
    partial void OnWinningIDChanging(System.Nullable<int> value);
    partial void OnWinningIDChanged();
    partial void OnDownloadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDownloadDateChanged();
    #endregion
		
		public InvoiceWinningNumber()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinningNO", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string WinningNO
		{
			get
			{
				return this._WinningNO;
			}
			set
			{
				if ((this._WinningNO != value))
				{
					this.OnWinningNOChanging(value);
					this.SendPropertyChanging();
					this._WinningNO = value;
					this.SendPropertyChanged("WinningNO");
					this.OnWinningNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthFrom", DbType="TinyInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public byte MonthFrom
		{
			get
			{
				return this._MonthFrom;
			}
			set
			{
				if ((this._MonthFrom != value))
				{
					this.OnMonthFromChanging(value);
					this.SendPropertyChanging();
					this._MonthFrom = value;
					this.SendPropertyChanged("MonthFrom");
					this.OnMonthFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthTo", DbType="TinyInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public byte MonthTo
		{
			get
			{
				return this._MonthTo;
			}
			set
			{
				if ((this._MonthTo != value))
				{
					this.OnMonthToChanging(value);
					this.SendPropertyChanging();
					this._MonthTo = value;
					this.SendPropertyChanged("MonthTo");
					this.OnMonthToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinningType", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string WinningType
		{
			get
			{
				return this._WinningType;
			}
			set
			{
				if ((this._WinningType != value))
				{
					this.OnWinningTypeChanging(value);
					this.SendPropertyChanging();
					this._WinningType = value;
					this.SendPropertyChanged("WinningType");
					this.OnWinningTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackCode", DbType="NVarChar(2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string TrackCode
		{
			get
			{
				return this._TrackCode;
			}
			set
			{
				if ((this._TrackCode != value))
				{
					this.OnTrackCodeChanging(value);
					this.SendPropertyChanging();
					this._TrackCode = value;
					this.SendPropertyChanged("TrackCode");
					this.OnTrackCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataType", DbType="NVarChar(1)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string DataType
		{
			get
			{
				return this._DataType;
			}
			set
			{
				if ((this._DataType != value))
				{
					this.OnDataTypeChanging(value);
					this.SendPropertyChanging();
					this._DataType = value;
					this.SendPropertyChanged("DataType");
					this.OnDataTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusDescription", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string BonusDescription
		{
			get
			{
				return this._BonusDescription;
			}
			set
			{
				if ((this._BonusDescription != value))
				{
					this.OnBonusDescriptionChanging(value);
					this.SendPropertyChanging();
					this._BonusDescription = value;
					this.SendPropertyChanged("BonusDescription");
					this.OnBonusDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinningID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> WinningID
		{
			get
			{
				return this._WinningID;
			}
			set
			{
				if ((this._WinningID != value))
				{
					if (this._UniformInvoiceWinningNumber.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWinningIDChanging(value);
					this.SendPropertyChanging();
					this._WinningID = value;
					this.SendPropertyChanged("WinningID");
					this.OnWinningIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<System.DateTime> DownloadDate
		{
			get
			{
				return this._DownloadDate;
			}
			set
			{
				if ((this._DownloadDate != value))
				{
					this.OnDownloadDateChanging(value);
					this.SendPropertyChanging();
					this._DownloadDate = value;
					this.SendPropertyChanged("DownloadDate");
					this.OnDownloadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceWinningNumber", Storage="_InvoiceItem", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true)]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.InvoiceWinningNumber = null;
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.InvoiceWinningNumber = this;
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UniformInvoiceWinningNumber_InvoiceWinningNumber", Storage="_UniformInvoiceWinningNumber", ThisKey="WinningID", OtherKey="WinningID", IsForeignKey=true, DeleteRule="CASCADE")]
		public UniformInvoiceWinningNumber UniformInvoiceWinningNumber
		{
			get
			{
				return this._UniformInvoiceWinningNumber.Entity;
			}
			set
			{
				UniformInvoiceWinningNumber previousValue = this._UniformInvoiceWinningNumber.Entity;
				if (((previousValue != value) 
							|| (this._UniformInvoiceWinningNumber.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UniformInvoiceWinningNumber.Entity = null;
						previousValue.InvoiceWinningNumbers.Remove(this);
					}
					this._UniformInvoiceWinningNumber.Entity = value;
					if ((value != null))
					{
						value.InvoiceWinningNumbers.Add(this);
						this._WinningID = value.WinningID;
					}
					else
					{
						this._WinningID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UniformInvoiceWinningNumber");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			this._UniformInvoiceWinningNumber = default(EntityRef<UniformInvoiceWinningNumber>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentPrintLog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentPrintLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private int _TypeID;
		
		private System.DateTime _PrintDate;
		
		private int _UID;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
		private EntityRef<DocumentType> _DocumentType;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnPrintDateChanging(System.DateTime value);
    partial void OnPrintDateChanged();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    #endregion
		
		public DocumentPrintLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._DocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime PrintDate
		{
			get
			{
				return this._PrintDate;
			}
			set
			{
				if ((this._PrintDate != value))
				{
					this.OnPrintDateChanging(value);
					this.SendPropertyChanging();
					this._PrintDate = value;
					this.SendPropertyChanged("PrintDate");
					this.OnPrintDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentPrintLog", Storage="_CDS_Document", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.DocumentPrintLogs.Remove(this);
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.DocumentPrintLogs.Add(this);
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_DocumentPrintLog", Storage="_DocumentType", ThisKey="TypeID", OtherKey="TypeID", IsForeignKey=true)]
		public DocumentType DocumentType
		{
			get
			{
				return this._DocumentType.Entity;
			}
			set
			{
				DocumentType previousValue = this._DocumentType.Entity;
				if (((previousValue != value) 
							|| (this._DocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentType.Entity = null;
						previousValue.DocumentPrintLogs.Remove(this);
					}
					this._DocumentType.Entity = value;
					if ((value != null))
					{
						value.DocumentPrintLogs.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("DocumentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_DocumentPrintLog", Storage="_UserProfile", ThisKey="UID", OtherKey="UID", IsForeignKey=true)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.DocumentPrintLog.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.DocumentPrintLog.Add(this);
						this._UID = value.UID;
					}
					else
					{
						this._UID = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CDS_Document = default(EntityRef<CDS_Document>);
			this._DocumentType = default(EntityRef<DocumentType>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentDownloadLog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentDownloadLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private int _DocID;
		
		private int _TypeID;
		
		private System.DateTime _DownloadDate;
		
		private int _UID;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
		private EntityRef<DocumentType> _DocumentType;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnDownloadDateChanging(System.DateTime value);
    partial void OnDownloadDateChanged();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    #endregion
		
		public DocumentDownloadLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._DocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime DownloadDate
		{
			get
			{
				return this._DownloadDate;
			}
			set
			{
				if ((this._DownloadDate != value))
				{
					this.OnDownloadDateChanging(value);
					this.SendPropertyChanging();
					this._DownloadDate = value;
					this.SendPropertyChanged("DownloadDate");
					this.OnDownloadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentDownloadLog", Storage="_CDS_Document", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.DocumentDownloadLogs.Remove(this);
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.DocumentDownloadLogs.Add(this);
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_DocumentDownloadLog", Storage="_DocumentType", ThisKey="TypeID", OtherKey="TypeID", IsForeignKey=true)]
		public DocumentType DocumentType
		{
			get
			{
				return this._DocumentType.Entity;
			}
			set
			{
				DocumentType previousValue = this._DocumentType.Entity;
				if (((previousValue != value) 
							|| (this._DocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentType.Entity = null;
						previousValue.DocumentDownloadLogs.Remove(this);
					}
					this._DocumentType.Entity = value;
					if ((value != null))
					{
						value.DocumentDownloadLogs.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("DocumentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_DocumentDownloadLog", Storage="_UserProfile", ThisKey="UID", OtherKey="UID", IsForeignKey=true)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.DocumentDownloadLog.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.DocumentDownloadLog.Add(this);
						this._UID = value.UID;
					}
					else
					{
						this._UID = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CDS_Document = default(EntityRef<CDS_Document>);
			this._DocumentType = default(EntityRef<DocumentType>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoicePaperRequest")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoicePaperRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private string _Token;
		
		private System.Nullable<System.DateTime> _RequestDate;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestDateChanged();
    #endregion
		
		public InvoicePaperRequest()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoicePaperRequest", Storage="_InvoiceItem", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true)]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.InvoicePaperRequest = null;
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.InvoicePaperRequest = this;
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoicePurchaseOrderUpload")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoicePurchaseOrderUpload : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UploadID;
		
		private string _FilePath;
		
		private System.Nullable<System.DateTime> _UploadDate;
		
		private System.Nullable<int> _UID;
		
		private EntitySet<InvoicePurchaseOrder> _InvoicePurchaseOrder;
		
		private EntityRef<UserProfile> _UserProfile;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUploadIDChanging(int value);
    partial void OnUploadIDChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnUploadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUploadDateChanged();
    partial void OnUIDChanging(System.Nullable<int> value);
    partial void OnUIDChanged();
    #endregion
		
		public InvoicePurchaseOrderUpload()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UploadID
		{
			get
			{
				return this._UploadID;
			}
			set
			{
				if ((this._UploadID != value))
				{
					this.OnUploadIDChanging(value);
					this.SendPropertyChanging();
					this._UploadID = value;
					this.SendPropertyChanged("UploadID");
					this.OnUploadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> UploadDate
		{
			get
			{
				return this._UploadDate;
			}
			set
			{
				if ((this._UploadDate != value))
				{
					this.OnUploadDateChanging(value);
					this.SendPropertyChanging();
					this._UploadDate = value;
					this.SendPropertyChanged("UploadDate");
					this.OnUploadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoicePurchaseOrderUpload_InvoicePurchaseOrder", Storage="_InvoicePurchaseOrder", ThisKey="UploadID", OtherKey="UploadID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<InvoicePurchaseOrder> InvoicePurchaseOrder
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoicePurchaseOrder.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoicePurchaseOrder;
			}
			set
			{
				this._InvoicePurchaseOrder.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_InvoicePurchaseOrderUpload", Storage="_UserProfile", ThisKey="UID", OtherKey="UID", IsForeignKey=true)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.InvoicePurchaseOrderUpload.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.InvoicePurchaseOrderUpload.Add(this);
						this._UID = value.UID;
					}
					else
					{
						this._UID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoicePurchaseOrder(InvoicePurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.InvoicePurchaseOrderUpload = this;
		}
		
		private void detach_InvoicePurchaseOrder(InvoicePurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.InvoicePurchaseOrderUpload = null;
		}
		
		private void Initialize()
		{
			this._InvoicePurchaseOrder = new EntitySet<InvoicePurchaseOrder>(new Action<InvoicePurchaseOrder>(this.attach_InvoicePurchaseOrder), new Action<InvoicePurchaseOrder>(this.detach_InvoicePurchaseOrder));
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceCancellationUpload")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceCancellationUpload : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UploadID;
		
		private string _FilePath;
		
		private System.Nullable<System.DateTime> _UploadDate;
		
		private System.Nullable<int> _UID;
		
		private EntitySet<InvoiceCancellationUploadList> _InvoiceCancellationUploadLists;
		
		private EntityRef<UserProfile> _UserProfile;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUploadIDChanging(int value);
    partial void OnUploadIDChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnUploadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUploadDateChanged();
    partial void OnUIDChanging(System.Nullable<int> value);
    partial void OnUIDChanged();
    #endregion
		
		public InvoiceCancellationUpload()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UploadID
		{
			get
			{
				return this._UploadID;
			}
			set
			{
				if ((this._UploadID != value))
				{
					this.OnUploadIDChanging(value);
					this.SendPropertyChanging();
					this._UploadID = value;
					this.SendPropertyChanged("UploadID");
					this.OnUploadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> UploadDate
		{
			get
			{
				return this._UploadDate;
			}
			set
			{
				if ((this._UploadDate != value))
				{
					this.OnUploadDateChanging(value);
					this.SendPropertyChanging();
					this._UploadDate = value;
					this.SendPropertyChanged("UploadDate");
					this.OnUploadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceCancellationUpload_InvoiceCancellationUploadList", Storage="_InvoiceCancellationUploadLists", ThisKey="UploadID", OtherKey="UploadID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<InvoiceCancellationUploadList> InvoiceCancellationUploadLists
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceCancellationUploadLists.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceCancellationUploadLists;
			}
			set
			{
				this._InvoiceCancellationUploadLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_InvoiceCancellationUpload", Storage="_UserProfile", ThisKey="UID", OtherKey="UID", IsForeignKey=true)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.InvoiceCancellationUpload.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.InvoiceCancellationUpload.Add(this);
						this._UID = value.UID;
					}
					else
					{
						this._UID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceCancellationUploadLists(InvoiceCancellationUploadList entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceCancellationUpload = this;
		}
		
		private void detach_InvoiceCancellationUploadLists(InvoiceCancellationUploadList entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceCancellationUpload = null;
		}
		
		private void Initialize()
		{
			this._InvoiceCancellationUploadLists = new EntitySet<InvoiceCancellationUploadList>(new Action<InvoiceCancellationUploadList>(this.attach_InvoiceCancellationUploadLists), new Action<InvoiceCancellationUploadList>(this.detach_InvoiceCancellationUploadLists));
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceCancellationUploadList")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceCancellationUploadList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UploadID;
		
		private int _InvoiceID;
		
		private EntityRef<InvoiceCancellation> _InvoiceCancellation;
		
		private EntityRef<InvoiceCancellationUpload> _InvoiceCancellationUpload;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUploadIDChanging(int value);
    partial void OnUploadIDChanged();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    #endregion
		
		public InvoiceCancellationUploadList()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UploadID
		{
			get
			{
				return this._UploadID;
			}
			set
			{
				if ((this._UploadID != value))
				{
					if (this._InvoiceCancellationUpload.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUploadIDChanging(value);
					this.SendPropertyChanging();
					this._UploadID = value;
					this.SendPropertyChanged("UploadID");
					this.OnUploadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceCancellation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceCancellation_InvoiceCancellationUploadList", Storage="_InvoiceCancellation", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true)]
		public InvoiceCancellation InvoiceCancellation
		{
			get
			{
				return this._InvoiceCancellation.Entity;
			}
			set
			{
				InvoiceCancellation previousValue = this._InvoiceCancellation.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceCancellation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceCancellation.Entity = null;
						previousValue.InvoiceCancellationUploadLists.Remove(this);
					}
					this._InvoiceCancellation.Entity = value;
					if ((value != null))
					{
						value.InvoiceCancellationUploadLists.Add(this);
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceCancellation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceCancellationUpload_InvoiceCancellationUploadList", Storage="_InvoiceCancellationUpload", ThisKey="UploadID", OtherKey="UploadID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public InvoiceCancellationUpload InvoiceCancellationUpload
		{
			get
			{
				return this._InvoiceCancellationUpload.Entity;
			}
			set
			{
				InvoiceCancellationUpload previousValue = this._InvoiceCancellationUpload.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceCancellationUpload.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceCancellationUpload.Entity = null;
						previousValue.InvoiceCancellationUploadLists.Remove(this);
					}
					this._InvoiceCancellationUpload.Entity = value;
					if ((value != null))
					{
						value.InvoiceCancellationUploadLists.Add(this);
						this._UploadID = value.UploadID;
					}
					else
					{
						this._UploadID = default(int);
					}
					this.SendPropertyChanged("InvoiceCancellationUpload");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceCancellation = default(EntityRef<InvoiceCancellation>);
			this._InvoiceCancellationUpload = default(EntityRef<InvoiceCancellationUpload>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoicePrintQueue")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoicePrintQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private System.Nullable<int> _UID;
		
		private System.Nullable<System.DateTime> _SubmitDate;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnUIDChanging(System.Nullable<int> value);
    partial void OnUIDChanged();
    partial void OnSubmitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSubmitDateChanged();
    #endregion
		
		public InvoicePrintQueue()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> SubmitDate
		{
			get
			{
				return this._SubmitDate;
			}
			set
			{
				if ((this._SubmitDate != value))
				{
					this.OnSubmitDateChanging(value);
					this.SendPropertyChanging();
					this._SubmitDate = value;
					this.SendPropertyChanged("SubmitDate");
					this.OnSubmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoicePrintQueue", Storage="_InvoiceItem", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true)]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.InvoicePrintQueue = null;
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.InvoicePrintQueue = this;
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_InvoicePrintQueue", Storage="_UserProfile", ThisKey="UID", OtherKey="UID", IsForeignKey=true)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.InvoicePrintQueue.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.InvoicePrintQueue.Add(this);
						this._UID = value.UID;
					}
					else
					{
						this._UID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentReplication")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentReplication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private System.Nullable<System.DateTime> _LastActionTime;
		
		private System.Nullable<int> _RetrialCount;
		
		private string _Message;
		
		private int _TypeID;
		
		private EntityRef<ReplicationNotification> _ReplicationNotification;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
		private EntityRef<DocumentType> _DocumentType;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnLastActionTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastActionTimeChanged();
    partial void OnRetrialCountChanging(System.Nullable<int> value);
    partial void OnRetrialCountChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    #endregion
		
		public DocumentReplication()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActionTime", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.DateTime> LastActionTime
		{
			get
			{
				return this._LastActionTime;
			}
			set
			{
				if ((this._LastActionTime != value))
				{
					this.OnLastActionTimeChanging(value);
					this.SendPropertyChanging();
					this._LastActionTime = value;
					this.SendPropertyChanged("LastActionTime");
					this.OnLastActionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetrialCount", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> RetrialCount
		{
			get
			{
				return this._RetrialCount;
			}
			set
			{
				if ((this._RetrialCount != value))
				{
					this.OnRetrialCountChanging(value);
					this.SendPropertyChanging();
					this._RetrialCount = value;
					this.SendPropertyChanged("RetrialCount");
					this.OnRetrialCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._DocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentReplication_ReplicationNotification", Storage="_ReplicationNotification", ThisKey="DocID,TypeID", OtherKey="DocID,TypeID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public ReplicationNotification ReplicationNotification
		{
			get
			{
				if ((this.serializing 
							&& (this._ReplicationNotification.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._ReplicationNotification.Entity;
			}
			set
			{
				ReplicationNotification previousValue = this._ReplicationNotification.Entity;
				if (((previousValue != value) 
							|| (this._ReplicationNotification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReplicationNotification.Entity = null;
						previousValue.DocumentReplication = null;
					}
					this._ReplicationNotification.Entity = value;
					if ((value != null))
					{
						value.DocumentReplication = this;
					}
					this.SendPropertyChanged("ReplicationNotification");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentReplication", Storage="_CDS_Document", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true)]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.DocumentReplications.Remove(this);
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.DocumentReplications.Add(this);
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_DocumentReplication", Storage="_DocumentType", ThisKey="TypeID", OtherKey="TypeID", IsForeignKey=true)]
		public DocumentType DocumentType
		{
			get
			{
				return this._DocumentType.Entity;
			}
			set
			{
				DocumentType previousValue = this._DocumentType.Entity;
				if (((previousValue != value) 
							|| (this._DocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentType.Entity = null;
						previousValue.DocumentReplications.Remove(this);
					}
					this._DocumentType.Entity = value;
					if ((value != null))
					{
						value.DocumentReplications.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("DocumentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ReplicationNotification = default(EntityRef<ReplicationNotification>);
			this._CDS_Document = default(EntityRef<CDS_Document>);
			this._DocumentType = default(EntityRef<DocumentType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReplicationNotification")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ReplicationNotification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private int _TypeID;
		
		private EntityRef<DocumentReplication> _DocumentReplication;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    #endregion
		
		public ReplicationNotification()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._DocumentReplication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._DocumentReplication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentReplication_ReplicationNotification", Storage="_DocumentReplication", ThisKey="DocID,TypeID", OtherKey="DocID,TypeID", IsForeignKey=true)]
		public DocumentReplication DocumentReplication
		{
			get
			{
				return this._DocumentReplication.Entity;
			}
			set
			{
				DocumentReplication previousValue = this._DocumentReplication.Entity;
				if (((previousValue != value) 
							|| (this._DocumentReplication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentReplication.Entity = null;
						previousValue.ReplicationNotification = null;
					}
					this._DocumentReplication.Entity = value;
					if ((value != null))
					{
						value.ReplicationNotification = this;
						this._DocID = value.DocID;
						this._TypeID = value.TypeID;
					}
					else
					{
						this._DocID = default(int);
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("DocumentReplication");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DocumentReplication = default(EntityRef<DocumentReplication>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRoleDefinition")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserRoleDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleID;
		
		private string _SiteMenu;
		
		private string _Role;
		
		private EntitySet<UserRole> _UserRoles;
		
		private EntitySet<UserMenu> _UserMenus;
		
		private EntitySet<OrganizationCategoryUserRole> _OrganizationCategoryUserRoles;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnSiteMenuChanging(string value);
    partial void OnSiteMenuChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    #endregion
		
		public UserRoleDefinition()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteMenu", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string SiteMenu
		{
			get
			{
				return this._SiteMenu;
			}
			set
			{
				if ((this._SiteMenu != value))
				{
					this.OnSiteMenuChanging(value);
					this.SendPropertyChanging();
					this._SiteMenu = value;
					this.SendPropertyChanged("SiteMenu");
					this.OnSiteMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleDefinition_UserRole", Storage="_UserRoles", ThisKey="RoleID", OtherKey="RoleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._UserRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleDefinition_UserMenu", Storage="_UserMenus", ThisKey="RoleID", OtherKey="RoleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<UserMenu> UserMenus
		{
			get
			{
				if ((this.serializing 
							&& (this._UserMenus.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserMenus;
			}
			set
			{
				this._UserMenus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleDefinition_OrganizationCategoryUserRole", Storage="_OrganizationCategoryUserRoles", ThisKey="RoleID", OtherKey="RoleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<OrganizationCategoryUserRole> OrganizationCategoryUserRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._OrganizationCategoryUserRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._OrganizationCategoryUserRoles;
			}
			set
			{
				this._OrganizationCategoryUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleDefinition = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleDefinition = null;
		}
		
		private void attach_UserMenus(UserMenu entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleDefinition = this;
		}
		
		private void detach_UserMenus(UserMenu entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleDefinition = null;
		}
		
		private void attach_OrganizationCategoryUserRoles(OrganizationCategoryUserRole entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleDefinition = this;
		}
		
		private void detach_OrganizationCategoryUserRoles(OrganizationCategoryUserRole entity)
		{
			this.SendPropertyChanging();
			entity.UserRoleDefinition = null;
		}
		
		private void Initialize()
		{
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			this._UserMenus = new EntitySet<UserMenu>(new Action<UserMenu>(this.attach_UserMenus), new Action<UserMenu>(this.detach_UserMenus));
			this._OrganizationCategoryUserRoles = new EntitySet<OrganizationCategoryUserRole>(new Action<OrganizationCategoryUserRole>(this.attach_OrganizationCategoryUserRoles), new Action<OrganizationCategoryUserRole>(this.detach_OrganizationCategoryUserRoles));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CategoryDefinition")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CategoryDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryID;
		
		private string _Category;
		
		private string _CharacterURL;
		
		private EntitySet<OrganizationCategory> _OrganizationCategories;
		
		private EntitySet<UserMenu> _UserMenus;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnCharacterURLChanging(string value);
    partial void OnCharacterURLChanged();
    #endregion
		
		public CategoryDefinition()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharacterURL", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CharacterURL
		{
			get
			{
				return this._CharacterURL;
			}
			set
			{
				if ((this._CharacterURL != value))
				{
					this.OnCharacterURLChanging(value);
					this.SendPropertyChanging();
					this._CharacterURL = value;
					this.SendPropertyChanged("CharacterURL");
					this.OnCharacterURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoryDefinition_OrganizationCategory", Storage="_OrganizationCategories", ThisKey="CategoryID", OtherKey="CategoryID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<OrganizationCategory> OrganizationCategories
		{
			get
			{
				if ((this.serializing 
							&& (this._OrganizationCategories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._OrganizationCategories;
			}
			set
			{
				this._OrganizationCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoryDefinition_UserMenu", Storage="_UserMenus", ThisKey="CategoryID", OtherKey="CategoryID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<UserMenu> UserMenus
		{
			get
			{
				if ((this.serializing 
							&& (this._UserMenus.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserMenus;
			}
			set
			{
				this._UserMenus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrganizationCategories(OrganizationCategory entity)
		{
			this.SendPropertyChanging();
			entity.CategoryDefinition = this;
		}
		
		private void detach_OrganizationCategories(OrganizationCategory entity)
		{
			this.SendPropertyChanging();
			entity.CategoryDefinition = null;
		}
		
		private void attach_UserMenus(UserMenu entity)
		{
			this.SendPropertyChanging();
			entity.CategoryDefinition = this;
		}
		
		private void detach_UserMenus(UserMenu entity)
		{
			this.SendPropertyChanging();
			entity.CategoryDefinition = null;
		}
		
		private void Initialize()
		{
			this._OrganizationCategories = new EntitySet<OrganizationCategory>(new Action<OrganizationCategory>(this.attach_OrganizationCategories), new Action<OrganizationCategory>(this.detach_OrganizationCategories));
			this._UserMenus = new EntitySet<UserMenu>(new Action<UserMenu>(this.attach_UserMenus), new Action<UserMenu>(this.detach_UserMenus));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganizationCategoryUserRole")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class OrganizationCategoryUserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrgaCateID;
		
		private int _RoleID;
		
		private System.Xml.Linq.XElement _MainMenu;
		
		private EntityRef<OrganizationCategory> _OrganizationCategory;
		
		private EntityRef<UserRoleDefinition> _UserRoleDefinition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrgaCateIDChanging(int value);
    partial void OnOrgaCateIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnMainMenuChanging(System.Xml.Linq.XElement value);
    partial void OnMainMenuChanged();
    #endregion
		
		public OrganizationCategoryUserRole()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgaCateID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int OrgaCateID
		{
			get
			{
				return this._OrgaCateID;
			}
			set
			{
				if ((this._OrgaCateID != value))
				{
					if (this._OrganizationCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrgaCateIDChanging(value);
					this.SendPropertyChanging();
					this._OrgaCateID = value;
					this.SendPropertyChanged("OrgaCateID");
					this.OnOrgaCateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._UserRoleDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainMenu", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Xml.Linq.XElement MainMenu
		{
			get
			{
				return this._MainMenu;
			}
			set
			{
				if ((this._MainMenu != value))
				{
					this.OnMainMenuChanging(value);
					this.SendPropertyChanging();
					this._MainMenu = value;
					this.SendPropertyChanged("MainMenu");
					this.OnMainMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationCategory_OrganizationCategoryUserRole", Storage="_OrganizationCategory", ThisKey="OrgaCateID", OtherKey="OrgaCateID", IsForeignKey=true)]
		public OrganizationCategory OrganizationCategory
		{
			get
			{
				return this._OrganizationCategory.Entity;
			}
			set
			{
				OrganizationCategory previousValue = this._OrganizationCategory.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationCategory.Entity = null;
						previousValue.OrganizationCategoryUserRoles.Remove(this);
					}
					this._OrganizationCategory.Entity = value;
					if ((value != null))
					{
						value.OrganizationCategoryUserRoles.Add(this);
						this._OrgaCateID = value.OrgaCateID;
					}
					else
					{
						this._OrgaCateID = default(int);
					}
					this.SendPropertyChanged("OrganizationCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRoleDefinition_OrganizationCategoryUserRole", Storage="_UserRoleDefinition", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public UserRoleDefinition UserRoleDefinition
		{
			get
			{
				return this._UserRoleDefinition.Entity;
			}
			set
			{
				UserRoleDefinition previousValue = this._UserRoleDefinition.Entity;
				if (((previousValue != value) 
							|| (this._UserRoleDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRoleDefinition.Entity = null;
						previousValue.OrganizationCategoryUserRoles.Remove(this);
					}
					this._UserRoleDefinition.Entity = value;
					if ((value != null))
					{
						value.OrganizationCategoryUserRoles.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(int);
					}
					this.SendPropertyChanged("UserRoleDefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._OrganizationCategory = default(EntityRef<OrganizationCategory>);
			this._UserRoleDefinition = default(EntityRef<UserRoleDefinition>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="center.B2BBuyerInvoiceTag")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class B2BBuyerInvoiceTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private string _DataNumber;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnDataNumberChanging(string value);
    partial void OnDataNumberChanged();
    #endregion
		
		public B2BBuyerInvoiceTag()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataNumber", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string DataNumber
		{
			get
			{
				return this._DataNumber;
			}
			set
			{
				if ((this._DataNumber != value))
				{
					this.OnDataNumberChanging(value);
					this.SendPropertyChanging();
					this._DataNumber = value;
					this.SendPropertyChanged("DataNumber");
					this.OnDataNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_B2BBuyerInvoiceTag", Storage="_InvoiceItem", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true)]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.B2BBuyerInvoiceTag = null;
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.B2BBuyerInvoiceTag = this;
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DerivedDocument")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DerivedDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private int _SourceID;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
		private EntityRef<CDS_Document> _CDS_Document1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnSourceIDChanging(int value);
    partial void OnSourceIDChanged();
    #endregion
		
		public DerivedDocument()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					if (this._CDS_Document1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DerivedDocument", Storage="_CDS_Document", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true)]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.DerivedDocument = null;
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.DerivedDocument = this;
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DerivedDocument1", Storage="_CDS_Document1", ThisKey="SourceID", OtherKey="DocID", IsForeignKey=true)]
		public CDS_Document ParentDocument
		{
			get
			{
				return this._CDS_Document1.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document1.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document1.Entity = null;
						previousValue.ChildDocument.Remove(this);
					}
					this._CDS_Document1.Entity = value;
					if ((value != null))
					{
						value.ChildDocument.Add(this);
						this._SourceID = value.DocID;
					}
					else
					{
						this._SourceID = default(int);
					}
					this.SendPropertyChanged("ParentDocument");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CDS_Document = default(EntityRef<CDS_Document>);
			this._CDS_Document1 = default(EntityRef<CDS_Document>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceAmountType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceAmountType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private System.Nullable<byte> _TaxType;
		
		private System.Nullable<decimal> _SalesAmount;
		
		private System.Nullable<decimal> _TaxAmount;
		
		private System.Nullable<decimal> _TaxRate;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private string _TotalAmountInChinese;
		
		private System.Nullable<decimal> _DiscountAmount;
		
		private System.Nullable<decimal> _Adjustment;
		
		private System.Nullable<decimal> _OriginalCurrencyAmount;
		
		private System.Nullable<decimal> _ExchangeRate;
		
		private System.Nullable<int> _CurrencyID;
		
		private EntityRef<CurrencyType> _CurrencyType;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnTaxTypeChanging(System.Nullable<byte> value);
    partial void OnTaxTypeChanged();
    partial void OnSalesAmountChanging(System.Nullable<decimal> value);
    partial void OnSalesAmountChanged();
    partial void OnTaxAmountChanging(System.Nullable<decimal> value);
    partial void OnTaxAmountChanged();
    partial void OnTaxRateChanging(System.Nullable<decimal> value);
    partial void OnTaxRateChanged();
    partial void OnTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTotalAmountChanged();
    partial void OnTotalAmountInChineseChanging(string value);
    partial void OnTotalAmountInChineseChanged();
    partial void OnDiscountAmountChanging(System.Nullable<decimal> value);
    partial void OnDiscountAmountChanged();
    partial void OnAdjustmentChanging(System.Nullable<decimal> value);
    partial void OnAdjustmentChanged();
    partial void OnOriginalCurrencyAmountChanging(System.Nullable<decimal> value);
    partial void OnOriginalCurrencyAmountChanged();
    partial void OnExchangeRateChanging(System.Nullable<decimal> value);
    partial void OnExchangeRateChanged();
    partial void OnCurrencyIDChanging(System.Nullable<int> value);
    partial void OnCurrencyIDChanged();
    #endregion
		
		public InvoiceAmountType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxType", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<byte> TaxType
		{
			get
			{
				return this._TaxType;
			}
			set
			{
				if ((this._TaxType != value))
				{
					this.OnTaxTypeChanging(value);
					this.SendPropertyChanging();
					this._TaxType = value;
					this.SendPropertyChanged("TaxType");
					this.OnTaxTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesAmount", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<decimal> SalesAmount
		{
			get
			{
				return this._SalesAmount;
			}
			set
			{
				if ((this._SalesAmount != value))
				{
					this.OnSalesAmountChanging(value);
					this.SendPropertyChanging();
					this._SalesAmount = value;
					this.SendPropertyChanged("SalesAmount");
					this.OnSalesAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmount", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<decimal> TaxAmount
		{
			get
			{
				return this._TaxAmount;
			}
			set
			{
				if ((this._TaxAmount != value))
				{
					this.OnTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxAmount = value;
					this.SendPropertyChanged("TaxAmount");
					this.OnTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRate", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmountInChinese", DbType="NVarChar(32)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string TotalAmountInChinese
		{
			get
			{
				return this._TotalAmountInChinese;
			}
			set
			{
				if ((this._TotalAmountInChinese != value))
				{
					this.OnTotalAmountInChineseChanging(value);
					this.SendPropertyChanging();
					this._TotalAmountInChinese = value;
					this.SendPropertyChanged("TotalAmountInChinese");
					this.OnTotalAmountInChineseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<decimal> DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adjustment", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<decimal> Adjustment
		{
			get
			{
				return this._Adjustment;
			}
			set
			{
				if ((this._Adjustment != value))
				{
					this.OnAdjustmentChanging(value);
					this.SendPropertyChanging();
					this._Adjustment = value;
					this.SendPropertyChanged("Adjustment");
					this.OnAdjustmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalCurrencyAmount", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<decimal> OriginalCurrencyAmount
		{
			get
			{
				return this._OriginalCurrencyAmount;
			}
			set
			{
				if ((this._OriginalCurrencyAmount != value))
				{
					this.OnOriginalCurrencyAmountChanging(value);
					this.SendPropertyChanging();
					this._OriginalCurrencyAmount = value;
					this.SendPropertyChanged("OriginalCurrencyAmount");
					this.OnOriginalCurrencyAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRate", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<int> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					if (this._CurrencyType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyType_InvoiceAmountType", Storage="_CurrencyType", ThisKey="CurrencyID", OtherKey="CurrencyID", IsForeignKey=true)]
		public CurrencyType CurrencyType
		{
			get
			{
				return this._CurrencyType.Entity;
			}
			set
			{
				CurrencyType previousValue = this._CurrencyType.Entity;
				if (((previousValue != value) 
							|| (this._CurrencyType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CurrencyType.Entity = null;
						previousValue.InvoiceAmountType.Remove(this);
					}
					this._CurrencyType.Entity = value;
					if ((value != null))
					{
						value.InvoiceAmountType.Add(this);
						this._CurrencyID = value.CurrencyID;
					}
					else
					{
						this._CurrencyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CurrencyType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceAmountType", Storage="_InvoiceItem", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.InvoiceAmountType = null;
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.InvoiceAmountType = this;
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CurrencyType = default(EntityRef<CurrencyType>);
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceAllowanceBuyer")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceAllowanceBuyer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AllowanceID;
		
		private System.Nullable<int> _BuyerID;
		
		private string _Name;
		
		private string _CustomerName;
		
		private string _ReceiptNo;
		
		private string _PostCode;
		
		private string _Address;
		
		private string _CustomerID;
		
		private string _ContactName;
		
		private string _Phone;
		
		private string _EMail;
		
		private string _Fax;
		
		private string _PersonInCharge;
		
		private string _RoleRemark;
		
		private EntityRef<InvoiceAllowance> _InvoiceAllowance;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAllowanceIDChanging(int value);
    partial void OnAllowanceIDChanged();
    partial void OnBuyerIDChanging(System.Nullable<int> value);
    partial void OnBuyerIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnReceiptNoChanging(string value);
    partial void OnReceiptNoChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnPersonInChargeChanging(string value);
    partial void OnPersonInChargeChanged();
    partial void OnRoleRemarkChanging(string value);
    partial void OnRoleRemarkChanged();
    #endregion
		
		public InvoiceAllowanceBuyer()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowanceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AllowanceID
		{
			get
			{
				return this._AllowanceID;
			}
			set
			{
				if ((this._AllowanceID != value))
				{
					if (this._InvoiceAllowance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAllowanceIDChanging(value);
					this.SendPropertyChanging();
					this._AllowanceID = value;
					this.SendPropertyChanged("AllowanceID");
					this.OnAllowanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> BuyerID
		{
			get
			{
				return this._BuyerID;
			}
			set
			{
				if ((this._BuyerID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuyerIDChanging(value);
					this.SendPropertyChanging();
					this._BuyerID = value;
					this.SendPropertyChanged("BuyerID");
					this.OnBuyerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNo", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string ReceiptNo
		{
			get
			{
				return this._ReceiptNo;
			}
			set
			{
				if ((this._ReceiptNo != value))
				{
					this.OnReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNo = value;
					this.SendPropertyChanged("ReceiptNo");
					this.OnReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(8)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonInCharge", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string PersonInCharge
		{
			get
			{
				return this._PersonInCharge;
			}
			set
			{
				if ((this._PersonInCharge != value))
				{
					this.OnPersonInChargeChanging(value);
					this.SendPropertyChanging();
					this._PersonInCharge = value;
					this.SendPropertyChanged("PersonInCharge");
					this.OnPersonInChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleRemark", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string RoleRemark
		{
			get
			{
				return this._RoleRemark;
			}
			set
			{
				if ((this._RoleRemark != value))
				{
					this.OnRoleRemarkChanging(value);
					this.SendPropertyChanging();
					this._RoleRemark = value;
					this.SendPropertyChanged("RoleRemark");
					this.OnRoleRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceAllowance_InvoiceAllowanceBuyer", Storage="_InvoiceAllowance", ThisKey="AllowanceID", OtherKey="AllowanceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public InvoiceAllowance InvoiceAllowance
		{
			get
			{
				return this._InvoiceAllowance.Entity;
			}
			set
			{
				InvoiceAllowance previousValue = this._InvoiceAllowance.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceAllowance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceAllowance.Entity = null;
						previousValue.InvoiceAllowanceBuyer = null;
					}
					this._InvoiceAllowance.Entity = value;
					if ((value != null))
					{
						value.InvoiceAllowanceBuyer = this;
						this._AllowanceID = value.AllowanceID;
					}
					else
					{
						this._AllowanceID = default(int);
					}
					this.SendPropertyChanged("InvoiceAllowance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_InvoiceAllowanceBuyer", Storage="_Organization", ThisKey="BuyerID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.InvoiceAllowanceBuyer.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.InvoiceAllowanceBuyer.Add(this);
						this._BuyerID = value.CompanyID;
					}
					else
					{
						this._BuyerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceAllowance = default(EntityRef<InvoiceAllowance>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceAllowanceSeller")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceAllowanceSeller : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AllowanceID;
		
		private System.Nullable<int> _SellerID;
		
		private string _Name;
		
		private string _CustomerName;
		
		private string _ReceiptNo;
		
		private string _PostCode;
		
		private string _Address;
		
		private string _CustomerID;
		
		private string _ContactName;
		
		private string _Phone;
		
		private string _EMail;
		
		private string _Fax;
		
		private string _PersonInCharge;
		
		private string _RoleRemark;
		
		private EntityRef<InvoiceAllowance> _InvoiceAllowance;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAllowanceIDChanging(int value);
    partial void OnAllowanceIDChanged();
    partial void OnSellerIDChanging(System.Nullable<int> value);
    partial void OnSellerIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnReceiptNoChanging(string value);
    partial void OnReceiptNoChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnPersonInChargeChanging(string value);
    partial void OnPersonInChargeChanged();
    partial void OnRoleRemarkChanging(string value);
    partial void OnRoleRemarkChanged();
    #endregion
		
		public InvoiceAllowanceSeller()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowanceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AllowanceID
		{
			get
			{
				return this._AllowanceID;
			}
			set
			{
				if ((this._AllowanceID != value))
				{
					if (this._InvoiceAllowance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAllowanceIDChanging(value);
					this.SendPropertyChanging();
					this._AllowanceID = value;
					this.SendPropertyChanged("AllowanceID");
					this.OnAllowanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerIDChanging(value);
					this.SendPropertyChanging();
					this._SellerID = value;
					this.SendPropertyChanged("SellerID");
					this.OnSellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNo", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string ReceiptNo
		{
			get
			{
				return this._ReceiptNo;
			}
			set
			{
				if ((this._ReceiptNo != value))
				{
					this.OnReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNo = value;
					this.SendPropertyChanged("ReceiptNo");
					this.OnReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(8)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonInCharge", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string PersonInCharge
		{
			get
			{
				return this._PersonInCharge;
			}
			set
			{
				if ((this._PersonInCharge != value))
				{
					this.OnPersonInChargeChanging(value);
					this.SendPropertyChanging();
					this._PersonInCharge = value;
					this.SendPropertyChanged("PersonInCharge");
					this.OnPersonInChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleRemark", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string RoleRemark
		{
			get
			{
				return this._RoleRemark;
			}
			set
			{
				if ((this._RoleRemark != value))
				{
					this.OnRoleRemarkChanging(value);
					this.SendPropertyChanging();
					this._RoleRemark = value;
					this.SendPropertyChanged("RoleRemark");
					this.OnRoleRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceAllowance_InvoiceAllowanceSeller", Storage="_InvoiceAllowance", ThisKey="AllowanceID", OtherKey="AllowanceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public InvoiceAllowance InvoiceAllowance
		{
			get
			{
				return this._InvoiceAllowance.Entity;
			}
			set
			{
				InvoiceAllowance previousValue = this._InvoiceAllowance.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceAllowance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceAllowance.Entity = null;
						previousValue.InvoiceAllowanceSeller = null;
					}
					this._InvoiceAllowance.Entity = value;
					if ((value != null))
					{
						value.InvoiceAllowanceSeller = this;
						this._AllowanceID = value.AllowanceID;
					}
					else
					{
						this._AllowanceID = default(int);
					}
					this.SendPropertyChanged("InvoiceAllowance");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_InvoiceAllowanceSeller", Storage="_Organization", ThisKey="SellerID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.InvoiceAllowanceSeller.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.InvoiceAllowanceSeller.Add(this);
						this._SellerID = value.CompanyID;
					}
					else
					{
						this._SellerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceAllowance = default(EntityRef<InvoiceAllowance>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceSeller")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceSeller : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private string _ReceiptNo;
		
		private string _PostCode;
		
		private string _Address;
		
		private string _Name;
		
		private System.Nullable<int> _SellerID;
		
		private string _CustomerID;
		
		private string _ContactName;
		
		private string _Phone;
		
		private string _EMail;
		
		private string _CustomerName;
		
		private string _Fax;
		
		private string _PersonInCharge;
		
		private string _RoleRemark;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnReceiptNoChanging(string value);
    partial void OnReceiptNoChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSellerIDChanging(System.Nullable<int> value);
    partial void OnSellerIDChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnPersonInChargeChanging(string value);
    partial void OnPersonInChargeChanged();
    partial void OnRoleRemarkChanging(string value);
    partial void OnRoleRemarkChanged();
    #endregion
		
		public InvoiceSeller()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNo", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ReceiptNo
		{
			get
			{
				return this._ReceiptNo;
			}
			set
			{
				if ((this._ReceiptNo != value))
				{
					this.OnReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNo = value;
					this.SendPropertyChanged("ReceiptNo");
					this.OnReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(8)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerIDChanging(value);
					this.SendPropertyChanging();
					this._SellerID = value;
					this.SendPropertyChanged("SellerID");
					this.OnSellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonInCharge", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string PersonInCharge
		{
			get
			{
				return this._PersonInCharge;
			}
			set
			{
				if ((this._PersonInCharge != value))
				{
					this.OnPersonInChargeChanging(value);
					this.SendPropertyChanging();
					this._PersonInCharge = value;
					this.SendPropertyChanged("PersonInCharge");
					this.OnPersonInChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleRemark", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string RoleRemark
		{
			get
			{
				return this._RoleRemark;
			}
			set
			{
				if ((this._RoleRemark != value))
				{
					this.OnRoleRemarkChanging(value);
					this.SendPropertyChanging();
					this._RoleRemark = value;
					this.SendPropertyChanged("RoleRemark");
					this.OnRoleRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceSeller", Storage="_InvoiceItem", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true)]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.InvoiceSeller = null;
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.InvoiceSeller = this;
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_InvoiceSeller", Storage="_Organization", ThisKey="SellerID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.InvoiceSeller.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.InvoiceSeller.Add(this);
						this._SellerID = value.CompanyID;
					}
					else
					{
						this._SellerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnterpriseGroup")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class EnterpriseGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EnterpriseID;
		
		private string _EnterpriseName;
		
		private EntitySet<EnterpriseGroupMember> _EnterpriseGroupMember;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEnterpriseIDChanging(int value);
    partial void OnEnterpriseIDChanged();
    partial void OnEnterpriseNameChanging(string value);
    partial void OnEnterpriseNameChanged();
    #endregion
		
		public EnterpriseGroup()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					this.OnEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseID = value;
					this.SendPropertyChanged("EnterpriseID");
					this.OnEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string EnterpriseName
		{
			get
			{
				return this._EnterpriseName;
			}
			set
			{
				if ((this._EnterpriseName != value))
				{
					this.OnEnterpriseNameChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseName = value;
					this.SendPropertyChanged("EnterpriseName");
					this.OnEnterpriseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseGroup_EnterpriseGroupMember", Storage="_EnterpriseGroupMember", ThisKey="EnterpriseID", OtherKey="EnterpriseID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<EnterpriseGroupMember> EnterpriseGroupMember
		{
			get
			{
				if ((this.serializing 
							&& (this._EnterpriseGroupMember.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EnterpriseGroupMember;
			}
			set
			{
				this._EnterpriseGroupMember.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EnterpriseGroupMember(EnterpriseGroupMember entity)
		{
			this.SendPropertyChanging();
			entity.EnterpriseGroup = this;
		}
		
		private void detach_EnterpriseGroupMember(EnterpriseGroupMember entity)
		{
			this.SendPropertyChanging();
			entity.EnterpriseGroup = null;
		}
		
		private void Initialize()
		{
			this._EnterpriseGroupMember = new EntitySet<EnterpriseGroupMember>(new Action<EnterpriseGroupMember>(this.attach_EnterpriseGroupMember), new Action<EnterpriseGroupMember>(this.detach_EnterpriseGroupMember));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnterpriseGroupMember")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class EnterpriseGroupMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EnterpriseID;
		
		private int _CompanyID;
		
		private EntityRef<EnterpriseGroupMemberToken> _EnterpriseGroupMemberToken;
		
		private EntityRef<EnterpriseGroup> _EnterpriseGroup;
		
		private EntityRef<Organization> _Organization;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEnterpriseIDChanging(int value);
    partial void OnEnterpriseIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    #endregion
		
		public EnterpriseGroupMember()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					if (this._EnterpriseGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseID = value;
					this.SendPropertyChanged("EnterpriseID");
					this.OnEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseGroupMember_EnterpriseGroupMemberToken", Storage="_EnterpriseGroupMemberToken", ThisKey="EnterpriseID,CompanyID", OtherKey="EnterpriseID,CompanyID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EnterpriseGroupMemberToken EnterpriseGroupMemberToken
		{
			get
			{
				if ((this.serializing 
							&& (this._EnterpriseGroupMemberToken.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._EnterpriseGroupMemberToken.Entity;
			}
			set
			{
				EnterpriseGroupMemberToken previousValue = this._EnterpriseGroupMemberToken.Entity;
				if (((previousValue != value) 
							|| (this._EnterpriseGroupMemberToken.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EnterpriseGroupMemberToken.Entity = null;
						previousValue.EnterpriseGroupMember = null;
					}
					this._EnterpriseGroupMemberToken.Entity = value;
					if ((value != null))
					{
						value.EnterpriseGroupMember = this;
					}
					this.SendPropertyChanged("EnterpriseGroupMemberToken");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseGroup_EnterpriseGroupMember", Storage="_EnterpriseGroup", ThisKey="EnterpriseID", OtherKey="EnterpriseID", IsForeignKey=true)]
		public EnterpriseGroup EnterpriseGroup
		{
			get
			{
				return this._EnterpriseGroup.Entity;
			}
			set
			{
				EnterpriseGroup previousValue = this._EnterpriseGroup.Entity;
				if (((previousValue != value) 
							|| (this._EnterpriseGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EnterpriseGroup.Entity = null;
						previousValue.EnterpriseGroupMember.Remove(this);
					}
					this._EnterpriseGroup.Entity = value;
					if ((value != null))
					{
						value.EnterpriseGroupMember.Add(this);
						this._EnterpriseID = value.EnterpriseID;
					}
					else
					{
						this._EnterpriseID = default(int);
					}
					this.SendPropertyChanged("EnterpriseGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_EnterpriseGroupMember", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.EnterpriseGroupMember.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.EnterpriseGroupMember.Add(this);
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._EnterpriseGroupMemberToken = default(EntityRef<EnterpriseGroupMemberToken>);
			this._EnterpriseGroup = default(EntityRef<EnterpriseGroup>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="center.BusinessType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BusinessType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessID;
		
		private string _Business;
		
		private EntitySet<DocumentTypeFlow> _DocumentTypeFlow;
		
		private EntitySet<BusinessRelationship> _BusinessRelationship;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessIDChanging(int value);
    partial void OnBusinessIDChanged();
    partial void OnBusinessChanging(string value);
    partial void OnBusinessChanged();
    #endregion
		
		public BusinessType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int BusinessID
		{
			get
			{
				return this._BusinessID;
			}
			set
			{
				if ((this._BusinessID != value))
				{
					this.OnBusinessIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessID = value;
					this.SendPropertyChanged("BusinessID");
					this.OnBusinessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Business", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Business
		{
			get
			{
				return this._Business;
			}
			set
			{
				if ((this._Business != value))
				{
					this.OnBusinessChanging(value);
					this.SendPropertyChanging();
					this._Business = value;
					this.SendPropertyChanged("Business");
					this.OnBusinessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessType_DocumentTypeFlow", Storage="_DocumentTypeFlow", ThisKey="BusinessID", OtherKey="BusinessID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<DocumentTypeFlow> DocumentTypeFlow
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentTypeFlow.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentTypeFlow;
			}
			set
			{
				this._DocumentTypeFlow.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessType_BusinessRelationship", Storage="_BusinessRelationship", ThisKey="BusinessID", OtherKey="BusinessID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<BusinessRelationship> BusinessRelationship
		{
			get
			{
				if ((this.serializing 
							&& (this._BusinessRelationship.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BusinessRelationship;
			}
			set
			{
				this._BusinessRelationship.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DocumentTypeFlow(DocumentTypeFlow entity)
		{
			this.SendPropertyChanging();
			entity.BusinessType = this;
		}
		
		private void detach_DocumentTypeFlow(DocumentTypeFlow entity)
		{
			this.SendPropertyChanging();
			entity.BusinessType = null;
		}
		
		private void attach_BusinessRelationship(BusinessRelationship entity)
		{
			this.SendPropertyChanging();
			entity.BusinessType = this;
		}
		
		private void detach_BusinessRelationship(BusinessRelationship entity)
		{
			this.SendPropertyChanging();
			entity.BusinessType = null;
		}
		
		private void Initialize()
		{
			this._DocumentTypeFlow = new EntitySet<DocumentTypeFlow>(new Action<DocumentTypeFlow>(this.attach_DocumentTypeFlow), new Action<DocumentTypeFlow>(this.detach_DocumentTypeFlow));
			this._BusinessRelationship = new EntitySet<BusinessRelationship>(new Action<BusinessRelationship>(this.attach_BusinessRelationship), new Action<BusinessRelationship>(this.detach_BusinessRelationship));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="center.DocumentFlow")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentFlow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FlowID;
		
		private string _FlowName;
		
		private System.Nullable<int> _InitialStep;
		
		private EntitySet<DocumentTypeFlow> _DocumentTypeFlow;
		
		private EntitySet<CommonDocumentTypeFlow> _CommonDocumentTypeFlow;
		
		private EntityRef<DocumentFlowControl> _DocumentFlowControl;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFlowIDChanging(int value);
    partial void OnFlowIDChanged();
    partial void OnFlowNameChanging(string value);
    partial void OnFlowNameChanged();
    partial void OnInitialStepChanging(System.Nullable<int> value);
    partial void OnInitialStepChanged();
    #endregion
		
		public DocumentFlow()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int FlowID
		{
			get
			{
				return this._FlowID;
			}
			set
			{
				if ((this._FlowID != value))
				{
					this.OnFlowIDChanging(value);
					this.SendPropertyChanging();
					this._FlowID = value;
					this.SendPropertyChanged("FlowID");
					this.OnFlowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string FlowName
		{
			get
			{
				return this._FlowName;
			}
			set
			{
				if ((this._FlowName != value))
				{
					this.OnFlowNameChanging(value);
					this.SendPropertyChanging();
					this._FlowName = value;
					this.SendPropertyChanged("FlowName");
					this.OnFlowNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialStep", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> InitialStep
		{
			get
			{
				return this._InitialStep;
			}
			set
			{
				if ((this._InitialStep != value))
				{
					if (this._DocumentFlowControl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInitialStepChanging(value);
					this.SendPropertyChanging();
					this._InitialStep = value;
					this.SendPropertyChanged("InitialStep");
					this.OnInitialStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentFlow_DocumentTypeFlow", Storage="_DocumentTypeFlow", ThisKey="FlowID", OtherKey="FlowID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<DocumentTypeFlow> DocumentTypeFlow
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentTypeFlow.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentTypeFlow;
			}
			set
			{
				this._DocumentTypeFlow.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentFlow_CommonDocumentTypeFlow", Storage="_CommonDocumentTypeFlow", ThisKey="FlowID", OtherKey="FlowID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<CommonDocumentTypeFlow> CommonDocumentTypeFlow
		{
			get
			{
				if ((this.serializing 
							&& (this._CommonDocumentTypeFlow.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CommonDocumentTypeFlow;
			}
			set
			{
				this._CommonDocumentTypeFlow.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentFlowControl_DocumentFlow", Storage="_DocumentFlowControl", ThisKey="InitialStep", OtherKey="StepID", IsForeignKey=true)]
		public DocumentFlowControl DocumentFlowControl
		{
			get
			{
				return this._DocumentFlowControl.Entity;
			}
			set
			{
				DocumentFlowControl previousValue = this._DocumentFlowControl.Entity;
				if (((previousValue != value) 
							|| (this._DocumentFlowControl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentFlowControl.Entity = null;
						previousValue.DocumentFlow.Remove(this);
					}
					this._DocumentFlowControl.Entity = value;
					if ((value != null))
					{
						value.DocumentFlow.Add(this);
						this._InitialStep = value.StepID;
					}
					else
					{
						this._InitialStep = default(Nullable<int>);
					}
					this.SendPropertyChanged("DocumentFlowControl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DocumentTypeFlow(DocumentTypeFlow entity)
		{
			this.SendPropertyChanging();
			entity.DocumentFlow = this;
		}
		
		private void detach_DocumentTypeFlow(DocumentTypeFlow entity)
		{
			this.SendPropertyChanging();
			entity.DocumentFlow = null;
		}
		
		private void attach_CommonDocumentTypeFlow(CommonDocumentTypeFlow entity)
		{
			this.SendPropertyChanging();
			entity.DocumentFlow = this;
		}
		
		private void detach_CommonDocumentTypeFlow(CommonDocumentTypeFlow entity)
		{
			this.SendPropertyChanging();
			entity.DocumentFlow = null;
		}
		
		private void Initialize()
		{
			this._DocumentTypeFlow = new EntitySet<DocumentTypeFlow>(new Action<DocumentTypeFlow>(this.attach_DocumentTypeFlow), new Action<DocumentTypeFlow>(this.detach_DocumentTypeFlow));
			this._CommonDocumentTypeFlow = new EntitySet<CommonDocumentTypeFlow>(new Action<CommonDocumentTypeFlow>(this.attach_CommonDocumentTypeFlow), new Action<CommonDocumentTypeFlow>(this.detach_CommonDocumentTypeFlow));
			this._DocumentFlowControl = default(EntityRef<DocumentFlowControl>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="center.DocumentFlowControl")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentFlowControl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StepID;
		
		private System.Nullable<int> _NextStep;
		
		private System.Nullable<int> _PrevStep;
		
		private int _LevelID;
		
		private int _FlowID;
		
		private EntitySet<DocumentFlow> _DocumentFlow;
		
		private EntitySet<DocumentFlowControl> _AsNextStepFor;
		
		private EntitySet<DocumentFlowControl> _AsPrevStepFor;
		
		private EntitySet<DocumentFlowStep> _DocumentFlowStep;
		
		private EntitySet<DocumentFlowBranch> _BranchFlow;
		
		private EntitySet<DocumentFlowBranch> _FlowAsBranch;
		
		private EntitySet<DocumentAccessaryFlow> _DocumentAccessaryFlow;
		
		private EntityRef<DocumentFlowControl> _NextStepItem;
		
		private EntityRef<DocumentFlowControl> _PrevStepItem;
		
		private EntityRef<LevelExpression> _LevelExpression;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStepIDChanging(int value);
    partial void OnStepIDChanged();
    partial void OnNextStepChanging(System.Nullable<int> value);
    partial void OnNextStepChanged();
    partial void OnPrevStepChanging(System.Nullable<int> value);
    partial void OnPrevStepChanged();
    partial void OnLevelIDChanging(int value);
    partial void OnLevelIDChanged();
    partial void OnFlowIDChanging(int value);
    partial void OnFlowIDChanged();
    #endregion
		
		public DocumentFlowControl()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int StepID
		{
			get
			{
				return this._StepID;
			}
			set
			{
				if ((this._StepID != value))
				{
					this.OnStepIDChanging(value);
					this.SendPropertyChanging();
					this._StepID = value;
					this.SendPropertyChanged("StepID");
					this.OnStepIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextStep", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> NextStep
		{
			get
			{
				return this._NextStep;
			}
			set
			{
				if ((this._NextStep != value))
				{
					if (this._NextStepItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNextStepChanging(value);
					this.SendPropertyChanging();
					this._NextStep = value;
					this.SendPropertyChanged("NextStep");
					this.OnNextStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrevStep", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> PrevStep
		{
			get
			{
				return this._PrevStep;
			}
			set
			{
				if ((this._PrevStep != value))
				{
					if (this._PrevStepItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrevStepChanging(value);
					this.SendPropertyChanging();
					this._PrevStep = value;
					this.SendPropertyChanged("PrevStep");
					this.OnPrevStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					if (this._LevelExpression.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int FlowID
		{
			get
			{
				return this._FlowID;
			}
			set
			{
				if ((this._FlowID != value))
				{
					this.OnFlowIDChanging(value);
					this.SendPropertyChanging();
					this._FlowID = value;
					this.SendPropertyChanged("FlowID");
					this.OnFlowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentFlowControl_DocumentFlow", Storage="_DocumentFlow", ThisKey="StepID", OtherKey="InitialStep")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<DocumentFlow> DocumentFlow
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentFlow.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentFlow;
			}
			set
			{
				this._DocumentFlow.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentFlowControl_DocumentFlowControl", Storage="_AsNextStepFor", ThisKey="StepID", OtherKey="NextStep")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<DocumentFlowControl> AsNextStepFor
		{
			get
			{
				if ((this.serializing 
							&& (this._AsNextStepFor.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AsNextStepFor;
			}
			set
			{
				this._AsNextStepFor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentFlowControl_DocumentFlowControl1", Storage="_AsPrevStepFor", ThisKey="StepID", OtherKey="PrevStep")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<DocumentFlowControl> AsPrevStepFor
		{
			get
			{
				if ((this.serializing 
							&& (this._AsPrevStepFor.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AsPrevStepFor;
			}
			set
			{
				this._AsPrevStepFor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentFlowControl_DocumentFlowStep", Storage="_DocumentFlowStep", ThisKey="StepID", OtherKey="CurrentFlowStep")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<DocumentFlowStep> DocumentFlowStep
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentFlowStep.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentFlowStep;
			}
			set
			{
				this._DocumentFlowStep.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentFlowControl_DocumentFlowBranch", Storage="_BranchFlow", ThisKey="StepID", OtherKey="StepID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<DocumentFlowBranch> BranchFlow
		{
			get
			{
				if ((this.serializing 
							&& (this._BranchFlow.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BranchFlow;
			}
			set
			{
				this._BranchFlow.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentFlowControl_DocumentFlowBranch1", Storage="_FlowAsBranch", ThisKey="StepID", OtherKey="BranchStep")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<DocumentFlowBranch> FlowAsBranch
		{
			get
			{
				if ((this.serializing 
							&& (this._FlowAsBranch.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._FlowAsBranch;
			}
			set
			{
				this._FlowAsBranch.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentFlowControl_DocumentAccessaryFlow", Storage="_DocumentAccessaryFlow", ThisKey="StepID", OtherKey="CurrentFlowStep")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<DocumentAccessaryFlow> DocumentAccessaryFlow
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentAccessaryFlow.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentAccessaryFlow;
			}
			set
			{
				this._DocumentAccessaryFlow.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentFlowControl_DocumentFlowControl", Storage="_NextStepItem", ThisKey="NextStep", OtherKey="StepID", IsForeignKey=true)]
		public DocumentFlowControl NextStepItem
		{
			get
			{
				return this._NextStepItem.Entity;
			}
			set
			{
				DocumentFlowControl previousValue = this._NextStepItem.Entity;
				if (((previousValue != value) 
							|| (this._NextStepItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NextStepItem.Entity = null;
						previousValue.AsNextStepFor.Remove(this);
					}
					this._NextStepItem.Entity = value;
					if ((value != null))
					{
						value.AsNextStepFor.Add(this);
						this._NextStep = value.StepID;
					}
					else
					{
						this._NextStep = default(Nullable<int>);
					}
					this.SendPropertyChanged("NextStepItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentFlowControl_DocumentFlowControl1", Storage="_PrevStepItem", ThisKey="PrevStep", OtherKey="StepID", IsForeignKey=true)]
		public DocumentFlowControl PrevStepItem
		{
			get
			{
				return this._PrevStepItem.Entity;
			}
			set
			{
				DocumentFlowControl previousValue = this._PrevStepItem.Entity;
				if (((previousValue != value) 
							|| (this._PrevStepItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrevStepItem.Entity = null;
						previousValue.AsPrevStepFor.Remove(this);
					}
					this._PrevStepItem.Entity = value;
					if ((value != null))
					{
						value.AsPrevStepFor.Add(this);
						this._PrevStep = value.StepID;
					}
					else
					{
						this._PrevStep = default(Nullable<int>);
					}
					this.SendPropertyChanged("PrevStepItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_DocumentFlowControl", Storage="_LevelExpression", ThisKey="LevelID", OtherKey="LevelID", IsForeignKey=true)]
		public LevelExpression LevelExpression
		{
			get
			{
				return this._LevelExpression.Entity;
			}
			set
			{
				LevelExpression previousValue = this._LevelExpression.Entity;
				if (((previousValue != value) 
							|| (this._LevelExpression.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LevelExpression.Entity = null;
						previousValue.DocumentFlowControl.Remove(this);
					}
					this._LevelExpression.Entity = value;
					if ((value != null))
					{
						value.DocumentFlowControl.Add(this);
						this._LevelID = value.LevelID;
					}
					else
					{
						this._LevelID = default(int);
					}
					this.SendPropertyChanged("LevelExpression");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DocumentFlow(DocumentFlow entity)
		{
			this.SendPropertyChanging();
			entity.DocumentFlowControl = this;
		}
		
		private void detach_DocumentFlow(DocumentFlow entity)
		{
			this.SendPropertyChanging();
			entity.DocumentFlowControl = null;
		}
		
		private void attach_AsNextStepFor(DocumentFlowControl entity)
		{
			this.SendPropertyChanging();
			entity.NextStepItem = this;
		}
		
		private void detach_AsNextStepFor(DocumentFlowControl entity)
		{
			this.SendPropertyChanging();
			entity.NextStepItem = null;
		}
		
		private void attach_AsPrevStepFor(DocumentFlowControl entity)
		{
			this.SendPropertyChanging();
			entity.PrevStepItem = this;
		}
		
		private void detach_AsPrevStepFor(DocumentFlowControl entity)
		{
			this.SendPropertyChanging();
			entity.PrevStepItem = null;
		}
		
		private void attach_DocumentFlowStep(DocumentFlowStep entity)
		{
			this.SendPropertyChanging();
			entity.DocumentFlowControl = this;
		}
		
		private void detach_DocumentFlowStep(DocumentFlowStep entity)
		{
			this.SendPropertyChanging();
			entity.DocumentFlowControl = null;
		}
		
		private void attach_BranchFlow(DocumentFlowBranch entity)
		{
			this.SendPropertyChanging();
			entity.BranchStepFrom = this;
		}
		
		private void detach_BranchFlow(DocumentFlowBranch entity)
		{
			this.SendPropertyChanging();
			entity.BranchStepFrom = null;
		}
		
		private void attach_FlowAsBranch(DocumentFlowBranch entity)
		{
			this.SendPropertyChanging();
			entity.BranchStepItem = this;
		}
		
		private void detach_FlowAsBranch(DocumentFlowBranch entity)
		{
			this.SendPropertyChanging();
			entity.BranchStepItem = null;
		}
		
		private void attach_DocumentAccessaryFlow(DocumentAccessaryFlow entity)
		{
			this.SendPropertyChanging();
			entity.DocumentFlowControl = this;
		}
		
		private void detach_DocumentAccessaryFlow(DocumentAccessaryFlow entity)
		{
			this.SendPropertyChanging();
			entity.DocumentFlowControl = null;
		}
		
		private void Initialize()
		{
			this._DocumentFlow = new EntitySet<DocumentFlow>(new Action<DocumentFlow>(this.attach_DocumentFlow), new Action<DocumentFlow>(this.detach_DocumentFlow));
			this._AsNextStepFor = new EntitySet<DocumentFlowControl>(new Action<DocumentFlowControl>(this.attach_AsNextStepFor), new Action<DocumentFlowControl>(this.detach_AsNextStepFor));
			this._AsPrevStepFor = new EntitySet<DocumentFlowControl>(new Action<DocumentFlowControl>(this.attach_AsPrevStepFor), new Action<DocumentFlowControl>(this.detach_AsPrevStepFor));
			this._DocumentFlowStep = new EntitySet<DocumentFlowStep>(new Action<DocumentFlowStep>(this.attach_DocumentFlowStep), new Action<DocumentFlowStep>(this.detach_DocumentFlowStep));
			this._BranchFlow = new EntitySet<DocumentFlowBranch>(new Action<DocumentFlowBranch>(this.attach_BranchFlow), new Action<DocumentFlowBranch>(this.detach_BranchFlow));
			this._FlowAsBranch = new EntitySet<DocumentFlowBranch>(new Action<DocumentFlowBranch>(this.attach_FlowAsBranch), new Action<DocumentFlowBranch>(this.detach_FlowAsBranch));
			this._DocumentAccessaryFlow = new EntitySet<DocumentAccessaryFlow>(new Action<DocumentAccessaryFlow>(this.attach_DocumentAccessaryFlow), new Action<DocumentAccessaryFlow>(this.detach_DocumentAccessaryFlow));
			this._NextStepItem = default(EntityRef<DocumentFlowControl>);
			this._PrevStepItem = default(EntityRef<DocumentFlowControl>);
			this._LevelExpression = default(EntityRef<LevelExpression>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="center.DocumentTypeFlow")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentTypeFlow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeID;
		
		private int _FlowID;
		
		private int _CompanyID;
		
		private int _BusinessID;
		
		private EntityRef<BusinessType> _BusinessType;
		
		private EntityRef<DocumentFlow> _DocumentFlow;
		
		private EntityRef<DocumentType> _DocumentType;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnFlowIDChanging(int value);
    partial void OnFlowIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnBusinessIDChanging(int value);
    partial void OnBusinessIDChanged();
    #endregion
		
		public DocumentTypeFlow()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._DocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int FlowID
		{
			get
			{
				return this._FlowID;
			}
			set
			{
				if ((this._FlowID != value))
				{
					if (this._DocumentFlow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFlowIDChanging(value);
					this.SendPropertyChanging();
					this._FlowID = value;
					this.SendPropertyChanged("FlowID");
					this.OnFlowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int BusinessID
		{
			get
			{
				return this._BusinessID;
			}
			set
			{
				if ((this._BusinessID != value))
				{
					if (this._BusinessType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessID = value;
					this.SendPropertyChanged("BusinessID");
					this.OnBusinessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessType_DocumentTypeFlow", Storage="_BusinessType", ThisKey="BusinessID", OtherKey="BusinessID", IsForeignKey=true)]
		public BusinessType BusinessType
		{
			get
			{
				return this._BusinessType.Entity;
			}
			set
			{
				BusinessType previousValue = this._BusinessType.Entity;
				if (((previousValue != value) 
							|| (this._BusinessType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessType.Entity = null;
						previousValue.DocumentTypeFlow.Remove(this);
					}
					this._BusinessType.Entity = value;
					if ((value != null))
					{
						value.DocumentTypeFlow.Add(this);
						this._BusinessID = value.BusinessID;
					}
					else
					{
						this._BusinessID = default(int);
					}
					this.SendPropertyChanged("BusinessType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentFlow_DocumentTypeFlow", Storage="_DocumentFlow", ThisKey="FlowID", OtherKey="FlowID", IsForeignKey=true)]
		public DocumentFlow DocumentFlow
		{
			get
			{
				return this._DocumentFlow.Entity;
			}
			set
			{
				DocumentFlow previousValue = this._DocumentFlow.Entity;
				if (((previousValue != value) 
							|| (this._DocumentFlow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentFlow.Entity = null;
						previousValue.DocumentTypeFlow.Remove(this);
					}
					this._DocumentFlow.Entity = value;
					if ((value != null))
					{
						value.DocumentTypeFlow.Add(this);
						this._FlowID = value.FlowID;
					}
					else
					{
						this._FlowID = default(int);
					}
					this.SendPropertyChanged("DocumentFlow");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_DocumentTypeFlow", Storage="_DocumentType", ThisKey="TypeID", OtherKey="TypeID", IsForeignKey=true)]
		public DocumentType DocumentType
		{
			get
			{
				return this._DocumentType.Entity;
			}
			set
			{
				DocumentType previousValue = this._DocumentType.Entity;
				if (((previousValue != value) 
							|| (this._DocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentType.Entity = null;
						previousValue.DocumentTypeFlow.Remove(this);
					}
					this._DocumentType.Entity = value;
					if ((value != null))
					{
						value.DocumentTypeFlow.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("DocumentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_DocumentTypeFlow", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.DocumentTypeFlow.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.DocumentTypeFlow.Add(this);
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BusinessType = default(EntityRef<BusinessType>);
			this._DocumentFlow = default(EntityRef<DocumentFlow>);
			this._DocumentType = default(EntityRef<DocumentType>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="center.DocumentFlowStep")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentFlowStep : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private int _CurrentFlowStep;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
		private EntityRef<DocumentFlowControl> _DocumentFlowControl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnCurrentFlowStepChanging(int value);
    partial void OnCurrentFlowStepChanged();
    #endregion
		
		public DocumentFlowStep()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentFlowStep", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CurrentFlowStep
		{
			get
			{
				return this._CurrentFlowStep;
			}
			set
			{
				if ((this._CurrentFlowStep != value))
				{
					if (this._DocumentFlowControl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrentFlowStepChanging(value);
					this.SendPropertyChanging();
					this._CurrentFlowStep = value;
					this.SendPropertyChanged("CurrentFlowStep");
					this.OnCurrentFlowStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentFlowStep", Storage="_CDS_Document", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true)]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.DocumentFlowStep = null;
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.DocumentFlowStep = this;
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentFlowControl_DocumentFlowStep", Storage="_DocumentFlowControl", ThisKey="CurrentFlowStep", OtherKey="StepID", IsForeignKey=true)]
		public DocumentFlowControl DocumentFlowControl
		{
			get
			{
				return this._DocumentFlowControl.Entity;
			}
			set
			{
				DocumentFlowControl previousValue = this._DocumentFlowControl.Entity;
				if (((previousValue != value) 
							|| (this._DocumentFlowControl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentFlowControl.Entity = null;
						previousValue.DocumentFlowStep.Remove(this);
					}
					this._DocumentFlowControl.Entity = value;
					if ((value != null))
					{
						value.DocumentFlowStep.Add(this);
						this._CurrentFlowStep = value.StepID;
					}
					else
					{
						this._CurrentFlowStep = default(int);
					}
					this.SendPropertyChanged("DocumentFlowControl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CDS_Document = default(EntityRef<CDS_Document>);
			this._DocumentFlowControl = default(EntityRef<DocumentFlowControl>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentProcessLog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentProcessLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private System.DateTime _StepDate;
		
		private int _FlowStep;
		
		private System.Nullable<int> _UID;
		
		private string _Description;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
		private EntityRef<LevelExpression> _LevelExpression;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnStepDateChanging(System.DateTime value);
    partial void OnStepDateChanged();
    partial void OnFlowStepChanging(int value);
    partial void OnFlowStepChanged();
    partial void OnUIDChanging(System.Nullable<int> value);
    partial void OnUIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public DocumentProcessLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.DateTime StepDate
		{
			get
			{
				return this._StepDate;
			}
			set
			{
				if ((this._StepDate != value))
				{
					this.OnStepDateChanging(value);
					this.SendPropertyChanging();
					this._StepDate = value;
					this.SendPropertyChanged("StepDate");
					this.OnStepDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowStep", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int FlowStep
		{
			get
			{
				return this._FlowStep;
			}
			set
			{
				if ((this._FlowStep != value))
				{
					if (this._LevelExpression.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFlowStepChanging(value);
					this.SendPropertyChanging();
					this._FlowStep = value;
					this.SendPropertyChanged("FlowStep");
					this.OnFlowStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentProcessLog", Storage="_CDS_Document", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true)]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.DocumentProcessLog.Remove(this);
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.DocumentProcessLog.Add(this);
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_DocumentProcessLog", Storage="_LevelExpression", ThisKey="FlowStep", OtherKey="LevelID", IsForeignKey=true)]
		public LevelExpression LevelExpression
		{
			get
			{
				return this._LevelExpression.Entity;
			}
			set
			{
				LevelExpression previousValue = this._LevelExpression.Entity;
				if (((previousValue != value) 
							|| (this._LevelExpression.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LevelExpression.Entity = null;
						previousValue.DocumentProcessLog.Remove(this);
					}
					this._LevelExpression.Entity = value;
					if ((value != null))
					{
						value.DocumentProcessLog.Add(this);
						this._FlowStep = value.LevelID;
					}
					else
					{
						this._FlowStep = default(int);
					}
					this.SendPropertyChanged("LevelExpression");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_DocumentProcessLog", Storage="_UserProfile", ThisKey="UID", OtherKey="UID", IsForeignKey=true)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.DocumentProcessLog.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.DocumentProcessLog.Add(this);
						this._UID = value.UID;
					}
					else
					{
						this._UID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CDS_Document = default(EntityRef<CDS_Document>);
			this._LevelExpression = default(EntityRef<LevelExpression>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LevelExpression")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class LevelExpression : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LevelID;
		
		private string _Expression;
		
		private string _Description;
		
		private EntitySet<CDS_Document> _CDS_Document;
		
		private EntitySet<UserProfileStatus> _UserProfileStatus;
		
		private EntitySet<DocumentFlowControl> _DocumentFlowControl;
		
		private EntitySet<DocumentProcessLog> _DocumentProcessLog;
		
		private EntitySet<BusinessRelationship> _BusinessRelationship;
		
		private EntitySet<UserProfile> _UserProfile;
		
		private EntitySet<OrganizationStatus> _OrganizationStatus;
		
		private EntitySet<InvoiceDeliveryTracking> _InvoiceDeliveryTracking;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLevelIDChanging(int value);
    partial void OnLevelIDChanged();
    partial void OnExpressionChanging(string value);
    partial void OnExpressionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public LevelExpression()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expression", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Expression
		{
			get
			{
				return this._Expression;
			}
			set
			{
				if ((this._Expression != value))
				{
					this.OnExpressionChanging(value);
					this.SendPropertyChanging();
					this._Expression = value;
					this.SendPropertyChanged("Expression");
					this.OnExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_CDS_Document", Storage="_CDS_Document", ThisKey="LevelID", OtherKey="CurrentStep")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<CDS_Document> CDS_Document
		{
			get
			{
				if ((this.serializing 
							&& (this._CDS_Document.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CDS_Document;
			}
			set
			{
				this._CDS_Document.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_UserProfileStatus", Storage="_UserProfileStatus", ThisKey="LevelID", OtherKey="CurrentLevel")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<UserProfileStatus> UserProfileStatus
		{
			get
			{
				if ((this.serializing 
							&& (this._UserProfileStatus.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserProfileStatus;
			}
			set
			{
				this._UserProfileStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_DocumentFlowControl", Storage="_DocumentFlowControl", ThisKey="LevelID", OtherKey="LevelID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<DocumentFlowControl> DocumentFlowControl
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentFlowControl.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentFlowControl;
			}
			set
			{
				this._DocumentFlowControl.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_DocumentProcessLog", Storage="_DocumentProcessLog", ThisKey="LevelID", OtherKey="FlowStep")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<DocumentProcessLog> DocumentProcessLog
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentProcessLog.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentProcessLog;
			}
			set
			{
				this._DocumentProcessLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_BusinessRelationship", Storage="_BusinessRelationship", ThisKey="LevelID", OtherKey="CurrentLevel")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<BusinessRelationship> BusinessRelationship
		{
			get
			{
				if ((this.serializing 
							&& (this._BusinessRelationship.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._BusinessRelationship;
			}
			set
			{
				this._BusinessRelationship.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_UserProfile", Storage="_UserProfile", ThisKey="LevelID", OtherKey="LevelID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<UserProfile> UserProfile
		{
			get
			{
				if ((this.serializing 
							&& (this._UserProfile.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserProfile;
			}
			set
			{
				this._UserProfile.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_OrganizationStatus", Storage="_OrganizationStatus", ThisKey="LevelID", OtherKey="CurrentLevel")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<OrganizationStatus> OrganizationStatus
		{
			get
			{
				if ((this.serializing 
							&& (this._OrganizationStatus.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._OrganizationStatus;
			}
			set
			{
				this._OrganizationStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_InvoiceDeliveryTracking", Storage="_InvoiceDeliveryTracking", ThisKey="LevelID", OtherKey="DeliveryStatus")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<InvoiceDeliveryTracking> InvoiceDeliveryTracking
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceDeliveryTracking.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceDeliveryTracking;
			}
			set
			{
				this._InvoiceDeliveryTracking.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CDS_Document(CDS_Document entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = this;
		}
		
		private void detach_CDS_Document(CDS_Document entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = null;
		}
		
		private void attach_UserProfileStatus(UserProfileStatus entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = this;
		}
		
		private void detach_UserProfileStatus(UserProfileStatus entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = null;
		}
		
		private void attach_DocumentFlowControl(DocumentFlowControl entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = this;
		}
		
		private void detach_DocumentFlowControl(DocumentFlowControl entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = null;
		}
		
		private void attach_DocumentProcessLog(DocumentProcessLog entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = this;
		}
		
		private void detach_DocumentProcessLog(DocumentProcessLog entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = null;
		}
		
		private void attach_BusinessRelationship(BusinessRelationship entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = this;
		}
		
		private void detach_BusinessRelationship(BusinessRelationship entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = null;
		}
		
		private void attach_UserProfile(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = this;
		}
		
		private void detach_UserProfile(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = null;
		}
		
		private void attach_OrganizationStatus(OrganizationStatus entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = this;
		}
		
		private void detach_OrganizationStatus(OrganizationStatus entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = null;
		}
		
		private void attach_InvoiceDeliveryTracking(InvoiceDeliveryTracking entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = this;
		}
		
		private void detach_InvoiceDeliveryTracking(InvoiceDeliveryTracking entity)
		{
			this.SendPropertyChanging();
			entity.LevelExpression = null;
		}
		
		private void Initialize()
		{
			this._CDS_Document = new EntitySet<CDS_Document>(new Action<CDS_Document>(this.attach_CDS_Document), new Action<CDS_Document>(this.detach_CDS_Document));
			this._UserProfileStatus = new EntitySet<UserProfileStatus>(new Action<UserProfileStatus>(this.attach_UserProfileStatus), new Action<UserProfileStatus>(this.detach_UserProfileStatus));
			this._DocumentFlowControl = new EntitySet<DocumentFlowControl>(new Action<DocumentFlowControl>(this.attach_DocumentFlowControl), new Action<DocumentFlowControl>(this.detach_DocumentFlowControl));
			this._DocumentProcessLog = new EntitySet<DocumentProcessLog>(new Action<DocumentProcessLog>(this.attach_DocumentProcessLog), new Action<DocumentProcessLog>(this.detach_DocumentProcessLog));
			this._BusinessRelationship = new EntitySet<BusinessRelationship>(new Action<BusinessRelationship>(this.attach_BusinessRelationship), new Action<BusinessRelationship>(this.detach_BusinessRelationship));
			this._UserProfile = new EntitySet<UserProfile>(new Action<UserProfile>(this.attach_UserProfile), new Action<UserProfile>(this.detach_UserProfile));
			this._OrganizationStatus = new EntitySet<OrganizationStatus>(new Action<OrganizationStatus>(this.attach_OrganizationStatus), new Action<OrganizationStatus>(this.detach_OrganizationStatus));
			this._InvoiceDeliveryTracking = new EntitySet<InvoiceDeliveryTracking>(new Action<InvoiceDeliveryTracking>(this.attach_InvoiceDeliveryTracking), new Action<InvoiceDeliveryTracking>(this.detach_InvoiceDeliveryTracking));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="center.CommonDocumentTypeFlow")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CommonDocumentTypeFlow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeID;
		
		private int _FlowID;
		
		private EntityRef<DocumentFlow> _DocumentFlow;
		
		private EntityRef<DocumentType> _DocumentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnFlowIDChanging(int value);
    partial void OnFlowIDChanged();
    #endregion
		
		public CommonDocumentTypeFlow()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._DocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlowID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int FlowID
		{
			get
			{
				return this._FlowID;
			}
			set
			{
				if ((this._FlowID != value))
				{
					if (this._DocumentFlow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFlowIDChanging(value);
					this.SendPropertyChanging();
					this._FlowID = value;
					this.SendPropertyChanged("FlowID");
					this.OnFlowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentFlow_CommonDocumentTypeFlow", Storage="_DocumentFlow", ThisKey="FlowID", OtherKey="FlowID", IsForeignKey=true)]
		public DocumentFlow DocumentFlow
		{
			get
			{
				return this._DocumentFlow.Entity;
			}
			set
			{
				DocumentFlow previousValue = this._DocumentFlow.Entity;
				if (((previousValue != value) 
							|| (this._DocumentFlow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentFlow.Entity = null;
						previousValue.CommonDocumentTypeFlow.Remove(this);
					}
					this._DocumentFlow.Entity = value;
					if ((value != null))
					{
						value.CommonDocumentTypeFlow.Add(this);
						this._FlowID = value.FlowID;
					}
					else
					{
						this._FlowID = default(int);
					}
					this.SendPropertyChanged("DocumentFlow");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_CommonDocumentTypeFlow", Storage="_DocumentType", ThisKey="TypeID", OtherKey="TypeID", IsForeignKey=true)]
		public DocumentType DocumentType
		{
			get
			{
				return this._DocumentType.Entity;
			}
			set
			{
				DocumentType previousValue = this._DocumentType.Entity;
				if (((previousValue != value) 
							|| (this._DocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentType.Entity = null;
						previousValue.CommonDocumentTypeFlow.Remove(this);
					}
					this._DocumentType.Entity = value;
					if ((value != null))
					{
						value.CommonDocumentTypeFlow.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("DocumentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._DocumentFlow = default(EntityRef<DocumentFlow>);
			this._DocumentType = default(EntityRef<DocumentType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="center.BusinessRelationship")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BusinessRelationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MasterID;
		
		private int _RelativeID;
		
		private int _BusinessID;
		
		private System.Nullable<int> _CurrentLevel;
		
		private EntityRef<BusinessType> _BusinessType;
		
		private EntityRef<LevelExpression> _LevelExpression;
		
		private EntityRef<Organization> _Organization;
		
		private EntityRef<Organization> _Organization1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMasterIDChanging(int value);
    partial void OnMasterIDChanged();
    partial void OnRelativeIDChanging(int value);
    partial void OnRelativeIDChanged();
    partial void OnBusinessIDChanging(int value);
    partial void OnBusinessIDChanged();
    partial void OnCurrentLevelChanging(System.Nullable<int> value);
    partial void OnCurrentLevelChanged();
    #endregion
		
		public BusinessRelationship()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MasterID
		{
			get
			{
				return this._MasterID;
			}
			set
			{
				if ((this._MasterID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasterIDChanging(value);
					this.SendPropertyChanging();
					this._MasterID = value;
					this.SendPropertyChanged("MasterID");
					this.OnMasterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelativeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int RelativeID
		{
			get
			{
				return this._RelativeID;
			}
			set
			{
				if ((this._RelativeID != value))
				{
					if (this._Organization1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRelativeIDChanging(value);
					this.SendPropertyChanging();
					this._RelativeID = value;
					this.SendPropertyChanged("RelativeID");
					this.OnRelativeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int BusinessID
		{
			get
			{
				return this._BusinessID;
			}
			set
			{
				if ((this._BusinessID != value))
				{
					if (this._BusinessType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessID = value;
					this.SendPropertyChanged("BusinessID");
					this.OnBusinessIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentLevel", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> CurrentLevel
		{
			get
			{
				return this._CurrentLevel;
			}
			set
			{
				if ((this._CurrentLevel != value))
				{
					if (this._LevelExpression.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrentLevelChanging(value);
					this.SendPropertyChanging();
					this._CurrentLevel = value;
					this.SendPropertyChanged("CurrentLevel");
					this.OnCurrentLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessType_BusinessRelationship", Storage="_BusinessType", ThisKey="BusinessID", OtherKey="BusinessID", IsForeignKey=true)]
		public BusinessType BusinessType
		{
			get
			{
				return this._BusinessType.Entity;
			}
			set
			{
				BusinessType previousValue = this._BusinessType.Entity;
				if (((previousValue != value) 
							|| (this._BusinessType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessType.Entity = null;
						previousValue.BusinessRelationship.Remove(this);
					}
					this._BusinessType.Entity = value;
					if ((value != null))
					{
						value.BusinessRelationship.Add(this);
						this._BusinessID = value.BusinessID;
					}
					else
					{
						this._BusinessID = default(int);
					}
					this.SendPropertyChanged("BusinessType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_BusinessRelationship", Storage="_LevelExpression", ThisKey="CurrentLevel", OtherKey="LevelID", IsForeignKey=true)]
		public LevelExpression LevelExpression
		{
			get
			{
				return this._LevelExpression.Entity;
			}
			set
			{
				LevelExpression previousValue = this._LevelExpression.Entity;
				if (((previousValue != value) 
							|| (this._LevelExpression.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LevelExpression.Entity = null;
						previousValue.BusinessRelationship.Remove(this);
					}
					this._LevelExpression.Entity = value;
					if ((value != null))
					{
						value.BusinessRelationship.Add(this);
						this._CurrentLevel = value.LevelID;
					}
					else
					{
						this._CurrentLevel = default(Nullable<int>);
					}
					this.SendPropertyChanged("LevelExpression");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_BusinessRelationship", Storage="_Organization", ThisKey="MasterID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization BusinessMaster
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.MasterRelation.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.MasterRelation.Add(this);
						this._MasterID = value.CompanyID;
					}
					else
					{
						this._MasterID = default(int);
					}
					this.SendPropertyChanged("BusinessMaster");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_BusinessRelationship1", Storage="_Organization1", ThisKey="RelativeID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Counterpart
		{
			get
			{
				return this._Organization1.Entity;
			}
			set
			{
				Organization previousValue = this._Organization1.Entity;
				if (((previousValue != value) 
							|| (this._Organization1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization1.Entity = null;
						previousValue.RelativeRelation.Remove(this);
					}
					this._Organization1.Entity = value;
					if ((value != null))
					{
						value.RelativeRelation.Add(this);
						this._RelativeID = value.CompanyID;
					}
					else
					{
						this._RelativeID = default(int);
					}
					this.SendPropertyChanged("Counterpart");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BusinessType = default(EntityRef<BusinessType>);
			this._LevelExpression = default(EntityRef<LevelExpression>);
			this._Organization = default(EntityRef<Organization>);
			this._Organization1 = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReceiptDetail")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ReceiptDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DetailID;
		
		private int _ReceiptID;
		
		private string _Description;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private System.Nullable<decimal> _Amount;
		
		private string _Remark;
		
		private System.Nullable<short> _SequenceNO;
		
		private EntityRef<ReceiptItem> _ReceiptItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDetailIDChanging(int value);
    partial void OnDetailIDChanged();
    partial void OnReceiptIDChanging(int value);
    partial void OnReceiptIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnSequenceNOChanging(System.Nullable<short> value);
    partial void OnSequenceNOChanged();
    #endregion
		
		public ReceiptDetail()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DetailID
		{
			get
			{
				return this._DetailID;
			}
			set
			{
				if ((this._DetailID != value))
				{
					this.OnDetailIDChanging(value);
					this.SendPropertyChanging();
					this._DetailID = value;
					this.SendPropertyChanged("DetailID");
					this.OnDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ReceiptID
		{
			get
			{
				return this._ReceiptID;
			}
			set
			{
				if ((this._ReceiptID != value))
				{
					if (this._ReceiptItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReceiptIDChanging(value);
					this.SendPropertyChanging();
					this._ReceiptID = value;
					this.SendPropertyChanged("ReceiptID");
					this.OnReceiptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,4)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNO", DbType="SmallInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<short> SequenceNO
		{
			get
			{
				return this._SequenceNO;
			}
			set
			{
				if ((this._SequenceNO != value))
				{
					this.OnSequenceNOChanging(value);
					this.SendPropertyChanging();
					this._SequenceNO = value;
					this.SendPropertyChanged("SequenceNO");
					this.OnSequenceNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReceiptItem_ReceiptDetail", Storage="_ReceiptItem", ThisKey="ReceiptID", OtherKey="ReceiptID", IsForeignKey=true)]
		public ReceiptItem ReceiptItem
		{
			get
			{
				return this._ReceiptItem.Entity;
			}
			set
			{
				ReceiptItem previousValue = this._ReceiptItem.Entity;
				if (((previousValue != value) 
							|| (this._ReceiptItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReceiptItem.Entity = null;
						previousValue.ReceiptDetail.Remove(this);
					}
					this._ReceiptItem.Entity = value;
					if ((value != null))
					{
						value.ReceiptDetail.Add(this);
						this._ReceiptID = value.ReceiptID;
					}
					else
					{
						this._ReceiptID = default(int);
					}
					this.SendPropertyChanged("ReceiptItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ReceiptItem = default(EntityRef<ReceiptItem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReceiptItem")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ReceiptItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReceiptID;
		
		private string _No;
		
		private System.DateTime _ReceiptDate;
		
		private int _SellerID;
		
		private int _BuyerID;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private EntitySet<ReceiptDetail> _ReceiptDetail;
		
		private EntityRef<ReceiptCancellation> _ReceiptCancellation;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
		private EntityRef<Organization> _Seller;
		
		private EntityRef<Organization> _Buyer;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReceiptIDChanging(int value);
    partial void OnReceiptIDChanged();
    partial void OnNoChanging(string value);
    partial void OnNoChanged();
    partial void OnReceiptDateChanging(System.DateTime value);
    partial void OnReceiptDateChanged();
    partial void OnSellerIDChanging(int value);
    partial void OnSellerIDChanged();
    partial void OnBuyerIDChanging(int value);
    partial void OnBuyerIDChanged();
    partial void OnTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTotalAmountChanged();
    #endregion
		
		public ReceiptItem()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ReceiptID
		{
			get
			{
				return this._ReceiptID;
			}
			set
			{
				if ((this._ReceiptID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReceiptIDChanging(value);
					this.SendPropertyChanging();
					this._ReceiptID = value;
					this.SendPropertyChanged("ReceiptID");
					this.OnReceiptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime ReceiptDate
		{
			get
			{
				return this._ReceiptDate;
			}
			set
			{
				if ((this._ReceiptDate != value))
				{
					this.OnReceiptDateChanging(value);
					this.SendPropertyChanging();
					this._ReceiptDate = value;
					this.SendPropertyChanged("ReceiptDate");
					this.OnReceiptDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					if (this._Seller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerIDChanging(value);
					this.SendPropertyChanging();
					this._SellerID = value;
					this.SendPropertyChanged("SellerID");
					this.OnSellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int BuyerID
		{
			get
			{
				return this._BuyerID;
			}
			set
			{
				if ((this._BuyerID != value))
				{
					if (this._Buyer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuyerIDChanging(value);
					this.SendPropertyChanging();
					this._BuyerID = value;
					this.SendPropertyChanged("BuyerID");
					this.OnBuyerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,0)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReceiptItem_ReceiptDetail", Storage="_ReceiptDetail", ThisKey="ReceiptID", OtherKey="ReceiptID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<ReceiptDetail> ReceiptDetail
		{
			get
			{
				if ((this.serializing 
							&& (this._ReceiptDetail.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ReceiptDetail;
			}
			set
			{
				this._ReceiptDetail.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReceiptItem_ReceiptCancellation", Storage="_ReceiptCancellation", ThisKey="ReceiptID", OtherKey="ReceiptID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public ReceiptCancellation ReceiptCancellation
		{
			get
			{
				if ((this.serializing 
							&& (this._ReceiptCancellation.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._ReceiptCancellation.Entity;
			}
			set
			{
				ReceiptCancellation previousValue = this._ReceiptCancellation.Entity;
				if (((previousValue != value) 
							|| (this._ReceiptCancellation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReceiptCancellation.Entity = null;
						previousValue.ReceiptItem = null;
					}
					this._ReceiptCancellation.Entity = value;
					if ((value != null))
					{
						value.ReceiptItem = this;
					}
					this.SendPropertyChanged("ReceiptCancellation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_ReceiptItem", Storage="_CDS_Document", ThisKey="ReceiptID", OtherKey="DocID", IsForeignKey=true)]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.ReceiptItem = null;
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.ReceiptItem = this;
						this._ReceiptID = value.DocID;
					}
					else
					{
						this._ReceiptID = default(int);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_ReceiptItem", Storage="_Seller", ThisKey="SellerID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Seller
		{
			get
			{
				return this._Seller.Entity;
			}
			set
			{
				Organization previousValue = this._Seller.Entity;
				if (((previousValue != value) 
							|| (this._Seller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Seller.Entity = null;
						previousValue.ReceiptItemForSeller.Remove(this);
					}
					this._Seller.Entity = value;
					if ((value != null))
					{
						value.ReceiptItemForSeller.Add(this);
						this._SellerID = value.CompanyID;
					}
					else
					{
						this._SellerID = default(int);
					}
					this.SendPropertyChanged("Seller");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_ReceiptItem1", Storage="_Buyer", ThisKey="BuyerID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Buyer
		{
			get
			{
				return this._Buyer.Entity;
			}
			set
			{
				Organization previousValue = this._Buyer.Entity;
				if (((previousValue != value) 
							|| (this._Buyer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buyer.Entity = null;
						previousValue.ReceiptItemForBuyer.Remove(this);
					}
					this._Buyer.Entity = value;
					if ((value != null))
					{
						value.ReceiptItemForBuyer.Add(this);
						this._BuyerID = value.CompanyID;
					}
					else
					{
						this._BuyerID = default(int);
					}
					this.SendPropertyChanged("Buyer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReceiptDetail(ReceiptDetail entity)
		{
			this.SendPropertyChanging();
			entity.ReceiptItem = this;
		}
		
		private void detach_ReceiptDetail(ReceiptDetail entity)
		{
			this.SendPropertyChanging();
			entity.ReceiptItem = null;
		}
		
		private void Initialize()
		{
			this._ReceiptDetail = new EntitySet<ReceiptDetail>(new Action<ReceiptDetail>(this.attach_ReceiptDetail), new Action<ReceiptDetail>(this.detach_ReceiptDetail));
			this._ReceiptCancellation = default(EntityRef<ReceiptCancellation>);
			this._CDS_Document = default(EntityRef<CDS_Document>);
			this._Seller = default(EntityRef<Organization>);
			this._Buyer = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReceiptCancellation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ReceiptCancellation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReceiptID;
		
		private string _CancellationNo;
		
		private System.Nullable<System.DateTime> _CancelDate;
		
		private string _Remark;
		
		private EntityRef<ReceiptItem> _ReceiptItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReceiptIDChanging(int value);
    partial void OnReceiptIDChanged();
    partial void OnCancellationNoChanging(string value);
    partial void OnCancellationNoChanged();
    partial void OnCancelDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCancelDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public ReceiptCancellation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ReceiptID
		{
			get
			{
				return this._ReceiptID;
			}
			set
			{
				if ((this._ReceiptID != value))
				{
					if (this._ReceiptItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReceiptIDChanging(value);
					this.SendPropertyChanging();
					this._ReceiptID = value;
					this.SendPropertyChanged("ReceiptID");
					this.OnReceiptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancellationNo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string CancellationNo
		{
			get
			{
				return this._CancellationNo;
			}
			set
			{
				if ((this._CancellationNo != value))
				{
					this.OnCancellationNoChanging(value);
					this.SendPropertyChanging();
					this._CancellationNo = value;
					this.SendPropertyChanged("CancellationNo");
					this.OnCancellationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> CancelDate
		{
			get
			{
				return this._CancelDate;
			}
			set
			{
				if ((this._CancelDate != value))
				{
					this.OnCancelDateChanging(value);
					this.SendPropertyChanging();
					this._CancelDate = value;
					this.SendPropertyChanged("CancelDate");
					this.OnCancelDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReceiptItem_ReceiptCancellation", Storage="_ReceiptItem", ThisKey="ReceiptID", OtherKey="ReceiptID", IsForeignKey=true)]
		public ReceiptItem ReceiptItem
		{
			get
			{
				return this._ReceiptItem.Entity;
			}
			set
			{
				ReceiptItem previousValue = this._ReceiptItem.Entity;
				if (((previousValue != value) 
							|| (this._ReceiptItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReceiptItem.Entity = null;
						previousValue.ReceiptCancellation = null;
					}
					this._ReceiptItem.Entity = value;
					if ((value != null))
					{
						value.ReceiptCancellation = this;
						this._ReceiptID = value.ReceiptID;
					}
					else
					{
						this._ReceiptID = default(int);
					}
					this.SendPropertyChanged("ReceiptItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ReceiptItem = default(EntityRef<ReceiptItem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExceptionLog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ExceptionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private System.Nullable<int> _CompanyID;
		
		private System.Nullable<int> _DocID;
		
		private System.Nullable<int> _TypeID;
		
		private string _DataContent;
		
		private System.Nullable<System.DateTime> _LogTime;
		
		private string _Message;
		
		private System.Nullable<bool> _IsCSV;
		
		private EntityRef<ExceptionReplication> _ExceptionReplication;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
		private EntityRef<DocumentType> _DocumentType;
		
		private EntityRef<Organization> _Organization;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    partial void OnDocIDChanging(System.Nullable<int> value);
    partial void OnDocIDChanged();
    partial void OnTypeIDChanging(System.Nullable<int> value);
    partial void OnTypeIDChanged();
    partial void OnDataContentChanging(string value);
    partial void OnDataContentChanged();
    partial void OnLogTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLogTimeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnIsCSVChanging(System.Nullable<bool> value);
    partial void OnIsCSVChanged();
    #endregion
		
		public ExceptionLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._DocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataContent", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string DataContent
		{
			get
			{
				return this._DataContent;
			}
			set
			{
				if ((this._DataContent != value))
				{
					this.OnDataContentChanging(value);
					this.SendPropertyChanging();
					this._DataContent = value;
					this.SendPropertyChanged("DataContent");
					this.OnDataContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTime", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> LogTime
		{
			get
			{
				return this._LogTime;
			}
			set
			{
				if ((this._LogTime != value))
				{
					this.OnLogTimeChanging(value);
					this.SendPropertyChanging();
					this._LogTime = value;
					this.SendPropertyChanged("LogTime");
					this.OnLogTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCSV", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> IsCSV
		{
			get
			{
				return this._IsCSV;
			}
			set
			{
				if ((this._IsCSV != value))
				{
					this.OnIsCSVChanging(value);
					this.SendPropertyChanging();
					this._IsCSV = value;
					this.SendPropertyChanged("IsCSV");
					this.OnIsCSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExceptionLog_ExceptionReplication", Storage="_ExceptionReplication", ThisKey="LogID", OtherKey="LogID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public ExceptionReplication ExceptionReplication
		{
			get
			{
				if ((this.serializing 
							&& (this._ExceptionReplication.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._ExceptionReplication.Entity;
			}
			set
			{
				ExceptionReplication previousValue = this._ExceptionReplication.Entity;
				if (((previousValue != value) 
							|| (this._ExceptionReplication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExceptionReplication.Entity = null;
						previousValue.ExceptionLog = null;
					}
					this._ExceptionReplication.Entity = value;
					if ((value != null))
					{
						value.ExceptionLog = this;
					}
					this.SendPropertyChanged("ExceptionReplication");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_ExceptionLog", Storage="_CDS_Document", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true, DeleteRule="CASCADE")]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.ExceptionLog.Remove(this);
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.ExceptionLog.Add(this);
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_ExceptionLog", Storage="_DocumentType", ThisKey="TypeID", OtherKey="TypeID", IsForeignKey=true)]
		public DocumentType DocumentType
		{
			get
			{
				return this._DocumentType.Entity;
			}
			set
			{
				DocumentType previousValue = this._DocumentType.Entity;
				if (((previousValue != value) 
							|| (this._DocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentType.Entity = null;
						previousValue.ExceptionLog.Remove(this);
					}
					this._DocumentType.Entity = value;
					if ((value != null))
					{
						value.ExceptionLog.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DocumentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_ExceptionLog", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.ExceptionLog.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.ExceptionLog.Add(this);
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ExceptionReplication = default(EntityRef<ExceptionReplication>);
			this._CDS_Document = default(EntityRef<CDS_Document>);
			this._DocumentType = default(EntityRef<DocumentType>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProfile")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UID;
		
		private string _UserName;
		
		private string _PID;
		
		private string _Password;
		
		private string _ContactTitle;
		
		private string _Address;
		
		private string _City;
		
		private string _Region;
		
		private string _PostalCode;
		
		private string _Country;
		
		private string _MobilePhone;
		
		private string _Phone;
		
		private string _Phone2;
		
		private string _Fax;
		
		private string _EMail;
		
		private System.Nullable<System.DateTime> _Expiration;
		
		private System.Nullable<int> _Creator;
		
		private System.Nullable<int> _AuthID;
		
		private System.Nullable<int> _LevelID;
		
		private string _ThemeName;
		
		private string _Password2;
		
		private EntitySet<UserRole> _UserRole;
		
		private EntitySet<UserAuth> _UserAuth;
		
		private EntityRef<UserProfileExtension> _UserProfileExtension;
		
		private EntityRef<UserProfileStatus> _UserProfileStatus;
		
		private EntitySet<InvoiceUserCarrier> _InvoiceUserCarrier;
		
		private EntitySet<DocumentPrintLog> _DocumentPrintLog;
		
		private EntitySet<DocumentDownloadLog> _DocumentDownloadLog;
		
		private EntitySet<InvoicePurchaseOrderUpload> _InvoicePurchaseOrderUpload;
		
		private EntitySet<InvoiceCancellationUpload> _InvoiceCancellationUpload;
		
		private EntitySet<InvoicePrintQueue> _InvoicePrintQueue;
		
		private EntitySet<DocumentProcessLog> _DocumentProcessLog;
		
		private EntitySet<UserProfile> _UserProfile2;
		
		private EntitySet<UserProfile> _UserProfile4;
		
		private EntitySet<UserToken> _UserToken;
		
		private EntitySet<DocumentPrintQueue> _DocumentPrintQueues;
		
		private EntitySet<InvoiceNoSegmentDisposition> _InvoiceNoSegmentDisposition;
		
		private EntityRef<LevelExpression> _LevelExpression;
		
		private EntityRef<UserProfile> _UserProfile1;
		
		private EntityRef<UserProfile> _UserProfile3;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPIDChanging(string value);
    partial void OnPIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnContactTitleChanging(string value);
    partial void OnContactTitleChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnExpirationChanging(System.Nullable<System.DateTime> value);
    partial void OnExpirationChanged();
    partial void OnCreatorChanging(System.Nullable<int> value);
    partial void OnCreatorChanged();
    partial void OnAuthIDChanging(System.Nullable<int> value);
    partial void OnAuthIDChanged();
    partial void OnLevelIDChanging(System.Nullable<int> value);
    partial void OnLevelIDChanged();
    partial void OnThemeNameChanging(string value);
    partial void OnThemeNameChanged();
    partial void OnPassword2Changing(string value);
    partial void OnPassword2Changed();
    #endregion
		
		public UserProfile()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(40)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactTitle", DbType="NVarChar(30)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string ContactTitle
		{
			get
			{
				return this._ContactTitle;
			}
			set
			{
				if ((this._ContactTitle != value))
				{
					this.OnContactTitleChanging(value);
					this.SendPropertyChanging();
					this._ContactTitle = value;
					this.SendPropertyChanged("ContactTitle");
					this.OnContactTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(24)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expiration", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<System.DateTime> Expiration
		{
			get
			{
				return this._Expiration;
			}
			set
			{
				if ((this._Expiration != value))
				{
					this.OnExpirationChanging(value);
					this.SendPropertyChanging();
					this._Expiration = value;
					this.SendPropertyChanged("Expiration");
					this.OnExpirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<int> Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					if (this._UserProfile1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<int> AuthID
		{
			get
			{
				return this._AuthID;
			}
			set
			{
				if ((this._AuthID != value))
				{
					if (this._UserProfile3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthIDChanging(value);
					this.SendPropertyChanging();
					this._AuthID = value;
					this.SendPropertyChanged("AuthID");
					this.OnAuthIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<int> LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					if (this._LevelExpression.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThemeName", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string ThemeName
		{
			get
			{
				return this._ThemeName;
			}
			set
			{
				if ((this._ThemeName != value))
				{
					this.OnThemeNameChanging(value);
					this.SendPropertyChanging();
					this._ThemeName = value;
					this.SendPropertyChanged("ThemeName");
					this.OnThemeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password2", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string Password2
		{
			get
			{
				return this._Password2;
			}
			set
			{
				if ((this._Password2 != value))
				{
					this.OnPassword2Changing(value);
					this.SendPropertyChanging();
					this._Password2 = value;
					this.SendPropertyChanged("Password2");
					this.OnPassword2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserRole", Storage="_UserRole", ThisKey="UID", OtherKey="UID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<UserRole> UserRole
		{
			get
			{
				if ((this.serializing 
							&& (this._UserRole.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserRole;
			}
			set
			{
				this._UserRole.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserAuth", Storage="_UserAuth", ThisKey="UID", OtherKey="UID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<UserAuth> UserAuth
		{
			get
			{
				if ((this.serializing 
							&& (this._UserAuth.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserAuth;
			}
			set
			{
				this._UserAuth.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserProfileExtension", Storage="_UserProfileExtension", ThisKey="UID", OtherKey="UID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public UserProfileExtension UserProfileExtension
		{
			get
			{
				if ((this.serializing 
							&& (this._UserProfileExtension.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._UserProfileExtension.Entity;
			}
			set
			{
				UserProfileExtension previousValue = this._UserProfileExtension.Entity;
				if (((previousValue != value) 
							|| (this._UserProfileExtension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfileExtension.Entity = null;
						previousValue.UserProfile = null;
					}
					this._UserProfileExtension.Entity = value;
					if ((value != null))
					{
						value.UserProfile = this;
					}
					this.SendPropertyChanged("UserProfileExtension");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserProfileStatus", Storage="_UserProfileStatus", ThisKey="UID", OtherKey="UID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public UserProfileStatus UserProfileStatus
		{
			get
			{
				if ((this.serializing 
							&& (this._UserProfileStatus.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._UserProfileStatus.Entity;
			}
			set
			{
				UserProfileStatus previousValue = this._UserProfileStatus.Entity;
				if (((previousValue != value) 
							|| (this._UserProfileStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfileStatus.Entity = null;
						previousValue.UserProfile = null;
					}
					this._UserProfileStatus.Entity = value;
					if ((value != null))
					{
						value.UserProfile = this;
					}
					this.SendPropertyChanged("UserProfileStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_InvoiceUserCarrier", Storage="_InvoiceUserCarrier", ThisKey="UID", OtherKey="UID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public EntitySet<InvoiceUserCarrier> InvoiceUserCarrier
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceUserCarrier.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceUserCarrier;
			}
			set
			{
				this._InvoiceUserCarrier.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_DocumentPrintLog", Storage="_DocumentPrintLog", ThisKey="UID", OtherKey="UID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27, EmitDefaultValue=false)]
		public EntitySet<DocumentPrintLog> DocumentPrintLog
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentPrintLog.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentPrintLog;
			}
			set
			{
				this._DocumentPrintLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_DocumentDownloadLog", Storage="_DocumentDownloadLog", ThisKey="UID", OtherKey="UID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28, EmitDefaultValue=false)]
		public EntitySet<DocumentDownloadLog> DocumentDownloadLog
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentDownloadLog.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentDownloadLog;
			}
			set
			{
				this._DocumentDownloadLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_InvoicePurchaseOrderUpload", Storage="_InvoicePurchaseOrderUpload", ThisKey="UID", OtherKey="UID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29, EmitDefaultValue=false)]
		public EntitySet<InvoicePurchaseOrderUpload> InvoicePurchaseOrderUpload
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoicePurchaseOrderUpload.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoicePurchaseOrderUpload;
			}
			set
			{
				this._InvoicePurchaseOrderUpload.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_InvoiceCancellationUpload", Storage="_InvoiceCancellationUpload", ThisKey="UID", OtherKey="UID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30, EmitDefaultValue=false)]
		public EntitySet<InvoiceCancellationUpload> InvoiceCancellationUpload
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceCancellationUpload.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceCancellationUpload;
			}
			set
			{
				this._InvoiceCancellationUpload.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_InvoicePrintQueue", Storage="_InvoicePrintQueue", ThisKey="UID", OtherKey="UID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31, EmitDefaultValue=false)]
		public EntitySet<InvoicePrintQueue> InvoicePrintQueue
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoicePrintQueue.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoicePrintQueue;
			}
			set
			{
				this._InvoicePrintQueue.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_DocumentProcessLog", Storage="_DocumentProcessLog", ThisKey="UID", OtherKey="UID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32, EmitDefaultValue=false)]
		public EntitySet<DocumentProcessLog> DocumentProcessLog
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentProcessLog.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentProcessLog;
			}
			set
			{
				this._DocumentProcessLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserProfile", Storage="_UserProfile2", ThisKey="UID", OtherKey="Creator")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33, EmitDefaultValue=false)]
		public EntitySet<UserProfile> UserProfile2
		{
			get
			{
				if ((this.serializing 
							&& (this._UserProfile2.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserProfile2;
			}
			set
			{
				this._UserProfile2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserProfile1", Storage="_UserProfile4", ThisKey="UID", OtherKey="AuthID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34, EmitDefaultValue=false)]
		public EntitySet<UserProfile> UserProfile4
		{
			get
			{
				if ((this.serializing 
							&& (this._UserProfile4.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserProfile4;
			}
			set
			{
				this._UserProfile4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserToken", Storage="_UserToken", ThisKey="UID", OtherKey="UID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35, EmitDefaultValue=false)]
		public EntitySet<UserToken> UserToken
		{
			get
			{
				if ((this.serializing 
							&& (this._UserToken.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserToken;
			}
			set
			{
				this._UserToken.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_DocumentPrintQueue", Storage="_DocumentPrintQueues", ThisKey="UID", OtherKey="UID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36, EmitDefaultValue=false)]
		public EntitySet<DocumentPrintQueue> DocumentPrintQueues
		{
			get
			{
				if ((this.serializing 
							&& (this._DocumentPrintQueues.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._DocumentPrintQueues;
			}
			set
			{
				this._DocumentPrintQueues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_InvoiceNoSegmentDisposition", Storage="_InvoiceNoSegmentDisposition", ThisKey="UID", OtherKey="UID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37, EmitDefaultValue=false)]
		public EntitySet<InvoiceNoSegmentDisposition> InvoiceNoSegmentDisposition
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceNoSegmentDisposition.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceNoSegmentDisposition;
			}
			set
			{
				this._InvoiceNoSegmentDisposition.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_UserProfile", Storage="_LevelExpression", ThisKey="LevelID", OtherKey="LevelID", IsForeignKey=true)]
		public LevelExpression LevelExpression
		{
			get
			{
				return this._LevelExpression.Entity;
			}
			set
			{
				LevelExpression previousValue = this._LevelExpression.Entity;
				if (((previousValue != value) 
							|| (this._LevelExpression.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LevelExpression.Entity = null;
						previousValue.UserProfile.Remove(this);
					}
					this._LevelExpression.Entity = value;
					if ((value != null))
					{
						value.UserProfile.Add(this);
						this._LevelID = value.LevelID;
					}
					else
					{
						this._LevelID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LevelExpression");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserProfile", Storage="_UserProfile1", ThisKey="Creator", OtherKey="UID", IsForeignKey=true)]
		public UserProfile UserProfile1
		{
			get
			{
				return this._UserProfile1.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile1.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile1.Entity = null;
						previousValue.UserProfile2.Remove(this);
					}
					this._UserProfile1.Entity = value;
					if ((value != null))
					{
						value.UserProfile2.Add(this);
						this._Creator = value.UID;
					}
					else
					{
						this._Creator = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserProfile1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserProfile1", Storage="_UserProfile3", ThisKey="AuthID", OtherKey="UID", IsForeignKey=true)]
		public UserProfile UserProfile3
		{
			get
			{
				return this._UserProfile3.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile3.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile3.Entity = null;
						previousValue.UserProfile4.Remove(this);
					}
					this._UserProfile3.Entity = value;
					if ((value != null))
					{
						value.UserProfile4.Add(this);
						this._AuthID = value.UID;
					}
					else
					{
						this._AuthID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserProfile3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRole(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_UserRole(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_UserAuth(UserAuth entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_UserAuth(UserAuth entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_InvoiceUserCarrier(InvoiceUserCarrier entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_InvoiceUserCarrier(InvoiceUserCarrier entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_DocumentPrintLog(DocumentPrintLog entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_DocumentPrintLog(DocumentPrintLog entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_DocumentDownloadLog(DocumentDownloadLog entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_DocumentDownloadLog(DocumentDownloadLog entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_InvoicePurchaseOrderUpload(InvoicePurchaseOrderUpload entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_InvoicePurchaseOrderUpload(InvoicePurchaseOrderUpload entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_InvoiceCancellationUpload(InvoiceCancellationUpload entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_InvoiceCancellationUpload(InvoiceCancellationUpload entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_InvoicePrintQueue(InvoicePrintQueue entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_InvoicePrintQueue(InvoicePrintQueue entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_DocumentProcessLog(DocumentProcessLog entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_DocumentProcessLog(DocumentProcessLog entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_UserProfile2(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile1 = this;
		}
		
		private void detach_UserProfile2(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile1 = null;
		}
		
		private void attach_UserProfile4(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile3 = this;
		}
		
		private void detach_UserProfile4(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile3 = null;
		}
		
		private void attach_UserToken(UserToken entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_UserToken(UserToken entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_DocumentPrintQueues(DocumentPrintQueue entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_DocumentPrintQueues(DocumentPrintQueue entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_InvoiceNoSegmentDisposition(InvoiceNoSegmentDisposition entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_InvoiceNoSegmentDisposition(InvoiceNoSegmentDisposition entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void Initialize()
		{
			this._UserRole = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRole), new Action<UserRole>(this.detach_UserRole));
			this._UserAuth = new EntitySet<UserAuth>(new Action<UserAuth>(this.attach_UserAuth), new Action<UserAuth>(this.detach_UserAuth));
			this._UserProfileExtension = default(EntityRef<UserProfileExtension>);
			this._UserProfileStatus = default(EntityRef<UserProfileStatus>);
			this._InvoiceUserCarrier = new EntitySet<InvoiceUserCarrier>(new Action<InvoiceUserCarrier>(this.attach_InvoiceUserCarrier), new Action<InvoiceUserCarrier>(this.detach_InvoiceUserCarrier));
			this._DocumentPrintLog = new EntitySet<DocumentPrintLog>(new Action<DocumentPrintLog>(this.attach_DocumentPrintLog), new Action<DocumentPrintLog>(this.detach_DocumentPrintLog));
			this._DocumentDownloadLog = new EntitySet<DocumentDownloadLog>(new Action<DocumentDownloadLog>(this.attach_DocumentDownloadLog), new Action<DocumentDownloadLog>(this.detach_DocumentDownloadLog));
			this._InvoicePurchaseOrderUpload = new EntitySet<InvoicePurchaseOrderUpload>(new Action<InvoicePurchaseOrderUpload>(this.attach_InvoicePurchaseOrderUpload), new Action<InvoicePurchaseOrderUpload>(this.detach_InvoicePurchaseOrderUpload));
			this._InvoiceCancellationUpload = new EntitySet<InvoiceCancellationUpload>(new Action<InvoiceCancellationUpload>(this.attach_InvoiceCancellationUpload), new Action<InvoiceCancellationUpload>(this.detach_InvoiceCancellationUpload));
			this._InvoicePrintQueue = new EntitySet<InvoicePrintQueue>(new Action<InvoicePrintQueue>(this.attach_InvoicePrintQueue), new Action<InvoicePrintQueue>(this.detach_InvoicePrintQueue));
			this._DocumentProcessLog = new EntitySet<DocumentProcessLog>(new Action<DocumentProcessLog>(this.attach_DocumentProcessLog), new Action<DocumentProcessLog>(this.detach_DocumentProcessLog));
			this._UserProfile2 = new EntitySet<UserProfile>(new Action<UserProfile>(this.attach_UserProfile2), new Action<UserProfile>(this.detach_UserProfile2));
			this._UserProfile4 = new EntitySet<UserProfile>(new Action<UserProfile>(this.attach_UserProfile4), new Action<UserProfile>(this.detach_UserProfile4));
			this._UserToken = new EntitySet<UserToken>(new Action<UserToken>(this.attach_UserToken), new Action<UserToken>(this.detach_UserToken));
			this._DocumentPrintQueues = new EntitySet<DocumentPrintQueue>(new Action<DocumentPrintQueue>(this.attach_DocumentPrintQueues), new Action<DocumentPrintQueue>(this.detach_DocumentPrintQueues));
			this._InvoiceNoSegmentDisposition = new EntitySet<InvoiceNoSegmentDisposition>(new Action<InvoiceNoSegmentDisposition>(this.attach_InvoiceNoSegmentDisposition), new Action<InvoiceNoSegmentDisposition>(this.detach_InvoiceNoSegmentDisposition));
			this._LevelExpression = default(EntityRef<LevelExpression>);
			this._UserProfile1 = default(EntityRef<UserProfile>);
			this._UserProfile3 = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganizationToken")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class OrganizationToken : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyID;
		
		private string _X509Certificate;
		
		private string _Thumbprint;
		
		private string _PKCS12;
		
		private System.Nullable<System.Guid> _KeyID;
		
		private System.Nullable<bool> _IsActivated;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnX509CertificateChanging(string value);
    partial void OnX509CertificateChanged();
    partial void OnThumbprintChanging(string value);
    partial void OnThumbprintChanged();
    partial void OnPKCS12Changing(string value);
    partial void OnPKCS12Changed();
    partial void OnKeyIDChanging(System.Nullable<System.Guid> value);
    partial void OnKeyIDChanged();
    partial void OnIsActivatedChanging(System.Nullable<bool> value);
    partial void OnIsActivatedChanged();
    #endregion
		
		public OrganizationToken()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X509Certificate", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string X509Certificate
		{
			get
			{
				return this._X509Certificate;
			}
			set
			{
				if ((this._X509Certificate != value))
				{
					this.OnX509CertificateChanging(value);
					this.SendPropertyChanging();
					this._X509Certificate = value;
					this.SendPropertyChanged("X509Certificate");
					this.OnX509CertificateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thumbprint", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Thumbprint
		{
			get
			{
				return this._Thumbprint;
			}
			set
			{
				if ((this._Thumbprint != value))
				{
					this.OnThumbprintChanging(value);
					this.SendPropertyChanging();
					this._Thumbprint = value;
					this.SendPropertyChanged("Thumbprint");
					this.OnThumbprintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKCS12", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string PKCS12
		{
			get
			{
				return this._PKCS12;
			}
			set
			{
				if ((this._PKCS12 != value))
				{
					this.OnPKCS12Changing(value);
					this.SendPropertyChanging();
					this._PKCS12 = value;
					this.SendPropertyChanged("PKCS12");
					this.OnPKCS12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.Guid> KeyID
		{
			get
			{
				return this._KeyID;
			}
			set
			{
				if ((this._KeyID != value))
				{
					this.OnKeyIDChanging(value);
					this.SendPropertyChanging();
					this._KeyID = value;
					this.SendPropertyChanged("KeyID");
					this.OnKeyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActivated", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> IsActivated
		{
			get
			{
				return this._IsActivated;
			}
			set
			{
				if ((this._IsActivated != value))
				{
					this.OnIsActivatedChanging(value);
					this.SendPropertyChanging();
					this._IsActivated = value;
					this.SendPropertyChanged("IsActivated");
					this.OnIsActivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrganizationToken", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.OrganizationToken = null;
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.OrganizationToken = this;
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserToken")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserToken : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Token;
		
		private int _UID;
		
		private System.DateTime _LogonTime;
		
		private string _X509Certificate;
		
		private string _Thumbprint;
		
		private string _PKCS12;
		
		private EntitySet<OrganizationStatus> _OrganizationStatus;
		
		private EntityRef<UserProfile> _UserProfile;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTokenChanging(System.Guid value);
    partial void OnTokenChanged();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    partial void OnLogonTimeChanging(System.DateTime value);
    partial void OnLogonTimeChanged();
    partial void OnX509CertificateChanging(string value);
    partial void OnX509CertificateChanged();
    partial void OnThumbprintChanging(string value);
    partial void OnThumbprintChanged();
    partial void OnPKCS12Changing(string value);
    partial void OnPKCS12Changed();
    #endregion
		
		public UserToken()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogonTime", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime LogonTime
		{
			get
			{
				return this._LogonTime;
			}
			set
			{
				if ((this._LogonTime != value))
				{
					this.OnLogonTimeChanging(value);
					this.SendPropertyChanging();
					this._LogonTime = value;
					this.SendPropertyChanged("LogonTime");
					this.OnLogonTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X509Certificate", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string X509Certificate
		{
			get
			{
				return this._X509Certificate;
			}
			set
			{
				if ((this._X509Certificate != value))
				{
					this.OnX509CertificateChanging(value);
					this.SendPropertyChanging();
					this._X509Certificate = value;
					this.SendPropertyChanged("X509Certificate");
					this.OnX509CertificateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thumbprint", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Thumbprint
		{
			get
			{
				return this._Thumbprint;
			}
			set
			{
				if ((this._Thumbprint != value))
				{
					this.OnThumbprintChanging(value);
					this.SendPropertyChanging();
					this._Thumbprint = value;
					this.SendPropertyChanged("Thumbprint");
					this.OnThumbprintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKCS12", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string PKCS12
		{
			get
			{
				return this._PKCS12;
			}
			set
			{
				if ((this._PKCS12 != value))
				{
					this.OnPKCS12Changing(value);
					this.SendPropertyChanging();
					this._PKCS12 = value;
					this.SendPropertyChanged("PKCS12");
					this.OnPKCS12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserToken_OrganizationStatus", Storage="_OrganizationStatus", ThisKey="Token", OtherKey="TokenID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<OrganizationStatus> OrganizationStatus
		{
			get
			{
				if ((this.serializing 
							&& (this._OrganizationStatus.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._OrganizationStatus;
			}
			set
			{
				this._OrganizationStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserToken", Storage="_UserProfile", ThisKey="UID", OtherKey="UID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.UserToken.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.UserToken.Add(this);
						this._UID = value.UID;
					}
					else
					{
						this._UID = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrganizationStatus(OrganizationStatus entity)
		{
			this.SendPropertyChanging();
			entity.UserToken = this;
		}
		
		private void detach_OrganizationStatus(OrganizationStatus entity)
		{
			this.SendPropertyChanging();
			entity.UserToken = null;
		}
		
		private void Initialize()
		{
			this._OrganizationStatus = new EntitySet<OrganizationStatus>(new Action<OrganizationStatus>(this.attach_OrganizationStatus), new Action<OrganizationStatus>(this.detach_OrganizationStatus));
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Attachment")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Attachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _KeyName;
		
		private string _StoredPath;
		
		private System.Nullable<int> _DocID;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyNameChanging(string value);
    partial void OnKeyNameChanged();
    partial void OnStoredPathChanging(string value);
    partial void OnStoredPathChanged();
    partial void OnDocIDChanging(System.Nullable<int> value);
    partial void OnDocIDChanged();
    #endregion
		
		public Attachment()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyName", DbType="NVarChar(256) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string KeyName
		{
			get
			{
				return this._KeyName;
			}
			set
			{
				if ((this._KeyName != value))
				{
					this.OnKeyNameChanging(value);
					this.SendPropertyChanging();
					this._KeyName = value;
					this.SendPropertyChanged("KeyName");
					this.OnKeyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string StoredPath
		{
			get
			{
				return this._StoredPath;
			}
			set
			{
				if ((this._StoredPath != value))
				{
					this.OnStoredPathChanging(value);
					this.SendPropertyChanging();
					this._StoredPath = value;
					this.SendPropertyChanged("StoredPath");
					this.OnStoredPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_Attachment", Storage="_CDS_Document", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true)]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.Attachment.Remove(this);
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.Attachment.Add(this);
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CDS_Document = default(EntityRef<CDS_Document>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceAllowanceItem")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceAllowanceItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemID;
		
		private System.Nullable<short> _No;
		
		private string _InvoiceNo;
		
		private System.Nullable<decimal> _Piece;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Tax;
		
		private System.Nullable<int> _ProductItemID;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private string _ItemNo;
		
		private System.Nullable<short> _OriginalSequenceNo;
		
		private string _PieceUnit;
		
		private string _OriginalDescription;
		
		private System.Nullable<byte> _TaxType;
		
		private System.Nullable<decimal> _UnitCost;
		
		private System.Nullable<decimal> _UnitCost2;
		
		private System.Nullable<decimal> _Piece2;
		
		private System.Nullable<decimal> _Amount2;
		
		private string _PieceUnit2;
		
		private string _Remark;
		
		private EntitySet<InvoiceAllowanceDetail> _InvoiceAllowanceDetail;
		
		private EntityRef<InvoiceProductItem> _InvoiceProductItem;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnNoChanging(System.Nullable<short> value);
    partial void OnNoChanged();
    partial void OnInvoiceNoChanging(string value);
    partial void OnInvoiceNoChanged();
    partial void OnPieceChanging(System.Nullable<decimal> value);
    partial void OnPieceChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnTaxChanging(System.Nullable<decimal> value);
    partial void OnTaxChanged();
    partial void OnProductItemIDChanging(System.Nullable<int> value);
    partial void OnProductItemIDChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnItemNoChanging(string value);
    partial void OnItemNoChanged();
    partial void OnOriginalSequenceNoChanging(System.Nullable<short> value);
    partial void OnOriginalSequenceNoChanged();
    partial void OnPieceUnitChanging(string value);
    partial void OnPieceUnitChanged();
    partial void OnOriginalDescriptionChanging(string value);
    partial void OnOriginalDescriptionChanged();
    partial void OnTaxTypeChanging(System.Nullable<byte> value);
    partial void OnTaxTypeChanged();
    partial void OnUnitCostChanging(System.Nullable<decimal> value);
    partial void OnUnitCostChanged();
    partial void OnUnitCost2Changing(System.Nullable<decimal> value);
    partial void OnUnitCost2Changed();
    partial void OnPiece2Changing(System.Nullable<decimal> value);
    partial void OnPiece2Changed();
    partial void OnAmount2Changing(System.Nullable<decimal> value);
    partial void OnAmount2Changed();
    partial void OnPieceUnit2Changing(string value);
    partial void OnPieceUnit2Changed();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public InvoiceAllowanceItem()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="SmallInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<short> No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Piece", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<decimal> Piece
		{
			get
			{
				return this._Piece;
			}
			set
			{
				if ((this._Piece != value))
				{
					this.OnPieceChanging(value);
					this.SendPropertyChanging();
					this._Piece = value;
					this.SendPropertyChanged("Piece");
					this.OnPieceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<decimal> Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductItemID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> ProductItemID
		{
			get
			{
				return this._ProductItemID;
			}
			set
			{
				if ((this._ProductItemID != value))
				{
					if (this._InvoiceProductItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductItemIDChanging(value);
					this.SendPropertyChanging();
					this._ProductItemID = value;
					this.SendPropertyChanged("ProductItemID");
					this.OnProductItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalSequenceNo", DbType="SmallInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<short> OriginalSequenceNo
		{
			get
			{
				return this._OriginalSequenceNo;
			}
			set
			{
				if ((this._OriginalSequenceNo != value))
				{
					this.OnOriginalSequenceNoChanging(value);
					this.SendPropertyChanging();
					this._OriginalSequenceNo = value;
					this.SendPropertyChanged("OriginalSequenceNo");
					this.OnOriginalSequenceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PieceUnit", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string PieceUnit
		{
			get
			{
				return this._PieceUnit;
			}
			set
			{
				if ((this._PieceUnit != value))
				{
					this.OnPieceUnitChanging(value);
					this.SendPropertyChanging();
					this._PieceUnit = value;
					this.SendPropertyChanged("PieceUnit");
					this.OnPieceUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalDescription", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string OriginalDescription
		{
			get
			{
				return this._OriginalDescription;
			}
			set
			{
				if ((this._OriginalDescription != value))
				{
					this.OnOriginalDescriptionChanging(value);
					this.SendPropertyChanging();
					this._OriginalDescription = value;
					this.SendPropertyChanged("OriginalDescription");
					this.OnOriginalDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxType", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<byte> TaxType
		{
			get
			{
				return this._TaxType;
			}
			set
			{
				if ((this._TaxType != value))
				{
					this.OnTaxTypeChanging(value);
					this.SendPropertyChanging();
					this._TaxType = value;
					this.SendPropertyChanged("TaxType");
					this.OnTaxTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCost", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<decimal> UnitCost
		{
			get
			{
				return this._UnitCost;
			}
			set
			{
				if ((this._UnitCost != value))
				{
					this.OnUnitCostChanging(value);
					this.SendPropertyChanging();
					this._UnitCost = value;
					this.SendPropertyChanged("UnitCost");
					this.OnUnitCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCost2", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<decimal> UnitCost2
		{
			get
			{
				return this._UnitCost2;
			}
			set
			{
				if ((this._UnitCost2 != value))
				{
					this.OnUnitCost2Changing(value);
					this.SendPropertyChanging();
					this._UnitCost2 = value;
					this.SendPropertyChanged("UnitCost2");
					this.OnUnitCost2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Piece2", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<decimal> Piece2
		{
			get
			{
				return this._Piece2;
			}
			set
			{
				if ((this._Piece2 != value))
				{
					this.OnPiece2Changing(value);
					this.SendPropertyChanging();
					this._Piece2 = value;
					this.SendPropertyChanged("Piece2");
					this.OnPiece2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount2", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<decimal> Amount2
		{
			get
			{
				return this._Amount2;
			}
			set
			{
				if ((this._Amount2 != value))
				{
					this.OnAmount2Changing(value);
					this.SendPropertyChanging();
					this._Amount2 = value;
					this.SendPropertyChanged("Amount2");
					this.OnAmount2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PieceUnit2", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string PieceUnit2
		{
			get
			{
				return this._PieceUnit2;
			}
			set
			{
				if ((this._PieceUnit2 != value))
				{
					this.OnPieceUnit2Changing(value);
					this.SendPropertyChanging();
					this._PieceUnit2 = value;
					this.SendPropertyChanged("PieceUnit2");
					this.OnPieceUnit2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceAllowanceItem_InvoiceAllowanceDetail", Storage="_InvoiceAllowanceDetail", ThisKey="ItemID", OtherKey="ItemID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<InvoiceAllowanceDetail> InvoiceAllowanceDetail
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceAllowanceDetail.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceAllowanceDetail;
			}
			set
			{
				this._InvoiceAllowanceDetail.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceProductItem_InvoiceAllowanceItem", Storage="_InvoiceProductItem", ThisKey="ProductItemID", OtherKey="ItemID", IsForeignKey=true)]
		public InvoiceProductItem InvoiceProductItem
		{
			get
			{
				return this._InvoiceProductItem.Entity;
			}
			set
			{
				InvoiceProductItem previousValue = this._InvoiceProductItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceProductItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceProductItem.Entity = null;
						previousValue.InvoiceAllowanceItem.Remove(this);
					}
					this._InvoiceProductItem.Entity = value;
					if ((value != null))
					{
						value.InvoiceAllowanceItem.Add(this);
						this._ProductItemID = value.ItemID;
					}
					else
					{
						this._ProductItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("InvoiceProductItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceAllowanceDetail(InvoiceAllowanceDetail entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceAllowanceItem = this;
		}
		
		private void detach_InvoiceAllowanceDetail(InvoiceAllowanceDetail entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceAllowanceItem = null;
		}
		
		private void Initialize()
		{
			this._InvoiceAllowanceDetail = new EntitySet<InvoiceAllowanceDetail>(new Action<InvoiceAllowanceDetail>(this.attach_InvoiceAllowanceDetail), new Action<InvoiceAllowanceDetail>(this.detach_InvoiceAllowanceDetail));
			this._InvoiceProductItem = default(EntityRef<InvoiceProductItem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceProductItem")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceProductItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemID;
		
		private System.Nullable<int> _ProductID;
		
		private System.Nullable<short> _No;
		
		private string _Spec;
		
		private System.Nullable<decimal> _Piece;
		
		private System.Nullable<decimal> _Piece2;
		
		private string _PieceUnit;
		
		private string _PieceUnit2;
		
		private System.Nullable<decimal> _Weight;
		
		private string _WeightUnit;
		
		private System.Nullable<decimal> _UnitFreight;
		
		private System.Nullable<decimal> _UnitCost;
		
		private System.Nullable<decimal> _UnitCost2;
		
		private System.Nullable<decimal> _FreightAmount;
		
		private System.Nullable<decimal> _CostAmount;
		
		private System.Nullable<decimal> _CostAmount2;
		
		private System.Nullable<decimal> _OriginalPrice;
		
		private string _Remark;
		
		private string _RelateNumber;
		
		private System.Nullable<byte> _TaxType;
		
		private string _ItemNo;
		
		private EntitySet<InvoiceAllowanceItem> _InvoiceAllowanceItem;
		
		private EntityRef<InvoiceProduct> _InvoiceProduct;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnProductIDChanging(System.Nullable<int> value);
    partial void OnProductIDChanged();
    partial void OnNoChanging(System.Nullable<short> value);
    partial void OnNoChanged();
    partial void OnSpecChanging(string value);
    partial void OnSpecChanged();
    partial void OnPieceChanging(System.Nullable<decimal> value);
    partial void OnPieceChanged();
    partial void OnPiece2Changing(System.Nullable<decimal> value);
    partial void OnPiece2Changed();
    partial void OnPieceUnitChanging(string value);
    partial void OnPieceUnitChanged();
    partial void OnPieceUnit2Changing(string value);
    partial void OnPieceUnit2Changed();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnWeightUnitChanging(string value);
    partial void OnWeightUnitChanged();
    partial void OnUnitFreightChanging(System.Nullable<decimal> value);
    partial void OnUnitFreightChanged();
    partial void OnUnitCostChanging(System.Nullable<decimal> value);
    partial void OnUnitCostChanged();
    partial void OnUnitCost2Changing(System.Nullable<decimal> value);
    partial void OnUnitCost2Changed();
    partial void OnFreightAmountChanging(System.Nullable<decimal> value);
    partial void OnFreightAmountChanged();
    partial void OnCostAmountChanging(System.Nullable<decimal> value);
    partial void OnCostAmountChanged();
    partial void OnCostAmount2Changing(System.Nullable<decimal> value);
    partial void OnCostAmount2Changed();
    partial void OnOriginalPriceChanging(System.Nullable<decimal> value);
    partial void OnOriginalPriceChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnRelateNumberChanging(string value);
    partial void OnRelateNumberChanged();
    partial void OnTaxTypeChanging(System.Nullable<byte> value);
    partial void OnTaxTypeChanged();
    partial void OnItemNoChanging(string value);
    partial void OnItemNoChanged();
    #endregion
		
		public InvoiceProductItem()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._InvoiceProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="SmallInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<short> No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spec", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Spec
		{
			get
			{
				return this._Spec;
			}
			set
			{
				if ((this._Spec != value))
				{
					this.OnSpecChanging(value);
					this.SendPropertyChanging();
					this._Spec = value;
					this.SendPropertyChanged("Spec");
					this.OnSpecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Piece", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> Piece
		{
			get
			{
				return this._Piece;
			}
			set
			{
				if ((this._Piece != value))
				{
					this.OnPieceChanging(value);
					this.SendPropertyChanging();
					this._Piece = value;
					this.SendPropertyChanged("Piece");
					this.OnPieceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Piece2", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<decimal> Piece2
		{
			get
			{
				return this._Piece2;
			}
			set
			{
				if ((this._Piece2 != value))
				{
					this.OnPiece2Changing(value);
					this.SendPropertyChanging();
					this._Piece2 = value;
					this.SendPropertyChanged("Piece2");
					this.OnPiece2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PieceUnit", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string PieceUnit
		{
			get
			{
				return this._PieceUnit;
			}
			set
			{
				if ((this._PieceUnit != value))
				{
					this.OnPieceUnitChanging(value);
					this.SendPropertyChanging();
					this._PieceUnit = value;
					this.SendPropertyChanged("PieceUnit");
					this.OnPieceUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PieceUnit2", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string PieceUnit2
		{
			get
			{
				return this._PieceUnit2;
			}
			set
			{
				if ((this._PieceUnit2 != value))
				{
					this.OnPieceUnit2Changing(value);
					this.SendPropertyChanging();
					this._PieceUnit2 = value;
					this.SendPropertyChanged("PieceUnit2");
					this.OnPieceUnit2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightUnit", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string WeightUnit
		{
			get
			{
				return this._WeightUnit;
			}
			set
			{
				if ((this._WeightUnit != value))
				{
					this.OnWeightUnitChanging(value);
					this.SendPropertyChanging();
					this._WeightUnit = value;
					this.SendPropertyChanged("WeightUnit");
					this.OnWeightUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitFreight", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<decimal> UnitFreight
		{
			get
			{
				return this._UnitFreight;
			}
			set
			{
				if ((this._UnitFreight != value))
				{
					this.OnUnitFreightChanging(value);
					this.SendPropertyChanging();
					this._UnitFreight = value;
					this.SendPropertyChanged("UnitFreight");
					this.OnUnitFreightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCost", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<decimal> UnitCost
		{
			get
			{
				return this._UnitCost;
			}
			set
			{
				if ((this._UnitCost != value))
				{
					this.OnUnitCostChanging(value);
					this.SendPropertyChanging();
					this._UnitCost = value;
					this.SendPropertyChanged("UnitCost");
					this.OnUnitCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCost2", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<decimal> UnitCost2
		{
			get
			{
				return this._UnitCost2;
			}
			set
			{
				if ((this._UnitCost2 != value))
				{
					this.OnUnitCost2Changing(value);
					this.SendPropertyChanging();
					this._UnitCost2 = value;
					this.SendPropertyChanged("UnitCost2");
					this.OnUnitCost2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreightAmount", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<decimal> FreightAmount
		{
			get
			{
				return this._FreightAmount;
			}
			set
			{
				if ((this._FreightAmount != value))
				{
					this.OnFreightAmountChanging(value);
					this.SendPropertyChanging();
					this._FreightAmount = value;
					this.SendPropertyChanged("FreightAmount");
					this.OnFreightAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostAmount", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<decimal> CostAmount
		{
			get
			{
				return this._CostAmount;
			}
			set
			{
				if ((this._CostAmount != value))
				{
					this.OnCostAmountChanging(value);
					this.SendPropertyChanging();
					this._CostAmount = value;
					this.SendPropertyChanged("CostAmount");
					this.OnCostAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostAmount2", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<decimal> CostAmount2
		{
			get
			{
				return this._CostAmount2;
			}
			set
			{
				if ((this._CostAmount2 != value))
				{
					this.OnCostAmount2Changing(value);
					this.SendPropertyChanging();
					this._CostAmount2 = value;
					this.SendPropertyChanged("CostAmount2");
					this.OnCostAmount2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalPrice", DbType="Decimal(18,5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<decimal> OriginalPrice
		{
			get
			{
				return this._OriginalPrice;
			}
			set
			{
				if ((this._OriginalPrice != value))
				{
					this.OnOriginalPriceChanging(value);
					this.SendPropertyChanging();
					this._OriginalPrice = value;
					this.SendPropertyChanged("OriginalPrice");
					this.OnOriginalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelateNumber", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string RelateNumber
		{
			get
			{
				return this._RelateNumber;
			}
			set
			{
				if ((this._RelateNumber != value))
				{
					this.OnRelateNumberChanging(value);
					this.SendPropertyChanging();
					this._RelateNumber = value;
					this.SendPropertyChanged("RelateNumber");
					this.OnRelateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxType", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<byte> TaxType
		{
			get
			{
				return this._TaxType;
			}
			set
			{
				if ((this._TaxType != value))
				{
					this.OnTaxTypeChanging(value);
					this.SendPropertyChanging();
					this._TaxType = value;
					this.SendPropertyChanged("TaxType");
					this.OnTaxTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceProductItem_InvoiceAllowanceItem", Storage="_InvoiceAllowanceItem", ThisKey="ItemID", OtherKey="ProductItemID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<InvoiceAllowanceItem> InvoiceAllowanceItem
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceAllowanceItem.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._InvoiceAllowanceItem;
			}
			set
			{
				this._InvoiceAllowanceItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceProduct_InvoiceProductItem", Storage="_InvoiceProduct", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true, DeleteRule="CASCADE")]
		public InvoiceProduct InvoiceProduct
		{
			get
			{
				return this._InvoiceProduct.Entity;
			}
			set
			{
				InvoiceProduct previousValue = this._InvoiceProduct.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceProduct.Entity = null;
						previousValue.InvoiceProductItem.Remove(this);
					}
					this._InvoiceProduct.Entity = value;
					if ((value != null))
					{
						value.InvoiceProductItem.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(Nullable<int>);
					}
					this.SendPropertyChanged("InvoiceProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceAllowanceItem(InvoiceAllowanceItem entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceProductItem = this;
		}
		
		private void detach_InvoiceAllowanceItem(InvoiceAllowanceItem entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceProductItem = null;
		}
		
		private void Initialize()
		{
			this._InvoiceAllowanceItem = new EntitySet<InvoiceAllowanceItem>(new Action<InvoiceAllowanceItem>(this.attach_InvoiceAllowanceItem), new Action<InvoiceAllowanceItem>(this.detach_InvoiceAllowanceItem));
			this._InvoiceProduct = default(EntityRef<InvoiceProduct>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EnterpriseGroupMemberToken")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class EnterpriseGroupMemberToken : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EnterpriseID;
		
		private int _CompanyID;
		
		private string _X509Certificate;
		
		private string _Thumbprint;
		
		private string _PKCS12;
		
		private System.Nullable<System.Guid> _KeyID;
		
		private EntityRef<EnterpriseGroupMember> _EnterpriseGroupMember;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEnterpriseIDChanging(int value);
    partial void OnEnterpriseIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnX509CertificateChanging(string value);
    partial void OnX509CertificateChanged();
    partial void OnThumbprintChanging(string value);
    partial void OnThumbprintChanged();
    partial void OnPKCS12Changing(string value);
    partial void OnPKCS12Changed();
    partial void OnKeyIDChanging(System.Nullable<System.Guid> value);
    partial void OnKeyIDChanged();
    #endregion
		
		public EnterpriseGroupMemberToken()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterpriseID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EnterpriseID
		{
			get
			{
				return this._EnterpriseID;
			}
			set
			{
				if ((this._EnterpriseID != value))
				{
					if (this._EnterpriseGroupMember.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnterpriseIDChanging(value);
					this.SendPropertyChanging();
					this._EnterpriseID = value;
					this.SendPropertyChanged("EnterpriseID");
					this.OnEnterpriseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._EnterpriseGroupMember.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X509Certificate", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string X509Certificate
		{
			get
			{
				return this._X509Certificate;
			}
			set
			{
				if ((this._X509Certificate != value))
				{
					this.OnX509CertificateChanging(value);
					this.SendPropertyChanging();
					this._X509Certificate = value;
					this.SendPropertyChanged("X509Certificate");
					this.OnX509CertificateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thumbprint", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Thumbprint
		{
			get
			{
				return this._Thumbprint;
			}
			set
			{
				if ((this._Thumbprint != value))
				{
					this.OnThumbprintChanging(value);
					this.SendPropertyChanging();
					this._Thumbprint = value;
					this.SendPropertyChanged("Thumbprint");
					this.OnThumbprintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKCS12", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string PKCS12
		{
			get
			{
				return this._PKCS12;
			}
			set
			{
				if ((this._PKCS12 != value))
				{
					this.OnPKCS12Changing(value);
					this.SendPropertyChanging();
					this._PKCS12 = value;
					this.SendPropertyChanged("PKCS12");
					this.OnPKCS12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.Guid> KeyID
		{
			get
			{
				return this._KeyID;
			}
			set
			{
				if ((this._KeyID != value))
				{
					this.OnKeyIDChanging(value);
					this.SendPropertyChanging();
					this._KeyID = value;
					this.SendPropertyChanged("KeyID");
					this.OnKeyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnterpriseGroupMember_EnterpriseGroupMemberToken", Storage="_EnterpriseGroupMember", ThisKey="EnterpriseID,CompanyID", OtherKey="EnterpriseID,CompanyID", IsForeignKey=true)]
		public EnterpriseGroupMember EnterpriseGroupMember
		{
			get
			{
				return this._EnterpriseGroupMember.Entity;
			}
			set
			{
				EnterpriseGroupMember previousValue = this._EnterpriseGroupMember.Entity;
				if (((previousValue != value) 
							|| (this._EnterpriseGroupMember.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EnterpriseGroupMember.Entity = null;
						previousValue.EnterpriseGroupMemberToken = null;
					}
					this._EnterpriseGroupMember.Entity = value;
					if ((value != null))
					{
						value.EnterpriseGroupMemberToken = this;
						this._EnterpriseID = value.EnterpriseID;
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._EnterpriseID = default(int);
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("EnterpriseGroupMember");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._EnterpriseGroupMember = default(EntityRef<EnterpriseGroupMember>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="center.DocumentFlowBranch")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentFlowBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StepID;
		
		private int _BranchStep;
		
		private EntityRef<DocumentFlowControl> _BranchStepFrom;
		
		private EntityRef<DocumentFlowControl> _BranchStepItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStepIDChanging(int value);
    partial void OnStepIDChanged();
    partial void OnBranchStepChanging(int value);
    partial void OnBranchStepChanged();
    #endregion
		
		public DocumentFlowBranch()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StepID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int StepID
		{
			get
			{
				return this._StepID;
			}
			set
			{
				if ((this._StepID != value))
				{
					if (this._BranchStepFrom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStepIDChanging(value);
					this.SendPropertyChanging();
					this._StepID = value;
					this.SendPropertyChanged("StepID");
					this.OnStepIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchStep", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int BranchStep
		{
			get
			{
				return this._BranchStep;
			}
			set
			{
				if ((this._BranchStep != value))
				{
					if (this._BranchStepItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchStepChanging(value);
					this.SendPropertyChanging();
					this._BranchStep = value;
					this.SendPropertyChanged("BranchStep");
					this.OnBranchStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentFlowControl_DocumentFlowBranch", Storage="_BranchStepFrom", ThisKey="StepID", OtherKey="StepID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DocumentFlowControl BranchStepFrom
		{
			get
			{
				return this._BranchStepFrom.Entity;
			}
			set
			{
				DocumentFlowControl previousValue = this._BranchStepFrom.Entity;
				if (((previousValue != value) 
							|| (this._BranchStepFrom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BranchStepFrom.Entity = null;
						previousValue.BranchFlow.Remove(this);
					}
					this._BranchStepFrom.Entity = value;
					if ((value != null))
					{
						value.BranchFlow.Add(this);
						this._StepID = value.StepID;
					}
					else
					{
						this._StepID = default(int);
					}
					this.SendPropertyChanged("BranchStepFrom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentFlowControl_DocumentFlowBranch1", Storage="_BranchStepItem", ThisKey="BranchStep", OtherKey="StepID", IsForeignKey=true)]
		public DocumentFlowControl BranchStepItem
		{
			get
			{
				return this._BranchStepItem.Entity;
			}
			set
			{
				DocumentFlowControl previousValue = this._BranchStepItem.Entity;
				if (((previousValue != value) 
							|| (this._BranchStepItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BranchStepItem.Entity = null;
						previousValue.FlowAsBranch.Remove(this);
					}
					this._BranchStepItem.Entity = value;
					if ((value != null))
					{
						value.FlowAsBranch.Add(this);
						this._BranchStep = value.StepID;
					}
					else
					{
						this._BranchStep = default(int);
					}
					this.SendPropertyChanged("BranchStepItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._BranchStepFrom = default(EntityRef<DocumentFlowControl>);
			this._BranchStepItem = default(EntityRef<DocumentFlowControl>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="center.DocumentReady")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentReady : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private int _TypeID;
		
		private int _ActionCode;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
		private EntityRef<DocumentType> _DocumentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnActionCodeChanging(int value);
    partial void OnActionCodeChanged();
    #endregion
		
		public DocumentReady()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._DocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionCode", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int ActionCode
		{
			get
			{
				return this._ActionCode;
			}
			set
			{
				if ((this._ActionCode != value))
				{
					this.OnActionCodeChanging(value);
					this.SendPropertyChanging();
					this._ActionCode = value;
					this.SendPropertyChanged("ActionCode");
					this.OnActionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentReady", Storage="_CDS_Document", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true)]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.DocumentReady.Remove(this);
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.DocumentReady.Add(this);
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_DocumentReady", Storage="_DocumentType", ThisKey="TypeID", OtherKey="TypeID", IsForeignKey=true)]
		public DocumentType DocumentType
		{
			get
			{
				return this._DocumentType.Entity;
			}
			set
			{
				DocumentType previousValue = this._DocumentType.Entity;
				if (((previousValue != value) 
							|| (this._DocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentType.Entity = null;
						previousValue.DocumentReady.Remove(this);
					}
					this._DocumentType.Entity = value;
					if ((value != null))
					{
						value.DocumentReady.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("DocumentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CDS_Document = default(EntityRef<CDS_Document>);
			this._DocumentType = default(EntityRef<DocumentType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="center.DocumentAccessaryFlow")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentAccessaryFlow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private int _CurrentFlowStep;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
		private EntityRef<DocumentFlowControl> _DocumentFlowControl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnCurrentFlowStepChanging(int value);
    partial void OnCurrentFlowStepChanged();
    #endregion
		
		public DocumentAccessaryFlow()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentFlowStep", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CurrentFlowStep
		{
			get
			{
				return this._CurrentFlowStep;
			}
			set
			{
				if ((this._CurrentFlowStep != value))
				{
					if (this._DocumentFlowControl.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrentFlowStepChanging(value);
					this.SendPropertyChanging();
					this._CurrentFlowStep = value;
					this.SendPropertyChanged("CurrentFlowStep");
					this.OnCurrentFlowStepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentAccessaryFlow", Storage="_CDS_Document", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true)]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.DocumentAccessaryFlow.Remove(this);
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.DocumentAccessaryFlow.Add(this);
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentFlowControl_DocumentAccessaryFlow", Storage="_DocumentFlowControl", ThisKey="CurrentFlowStep", OtherKey="StepID", IsForeignKey=true)]
		public DocumentFlowControl DocumentFlowControl
		{
			get
			{
				return this._DocumentFlowControl.Entity;
			}
			set
			{
				DocumentFlowControl previousValue = this._DocumentFlowControl.Entity;
				if (((previousValue != value) 
							|| (this._DocumentFlowControl.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentFlowControl.Entity = null;
						previousValue.DocumentAccessaryFlow.Remove(this);
					}
					this._DocumentFlowControl.Entity = value;
					if ((value != null))
					{
						value.DocumentAccessaryFlow.Add(this);
						this._CurrentFlowStep = value.StepID;
					}
					else
					{
						this._CurrentFlowStep = default(int);
					}
					this.SendPropertyChanged("DocumentFlowControl");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CDS_Document = default(EntityRef<CDS_Document>);
			this._DocumentFlowControl = default(EntityRef<DocumentFlowControl>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceAllowanceItemExtension")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceAllowanceItemExtension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AllowanceID;
		
		private System.Xml.Linq.XElement _ExtraRemark;
		
		private EntityRef<InvoiceAllowance> _InvoiceAllowance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAllowanceIDChanging(int value);
    partial void OnAllowanceIDChanged();
    partial void OnExtraRemarkChanging(System.Xml.Linq.XElement value);
    partial void OnExtraRemarkChanged();
    #endregion
		
		public InvoiceAllowanceItemExtension()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowanceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AllowanceID
		{
			get
			{
				return this._AllowanceID;
			}
			set
			{
				if ((this._AllowanceID != value))
				{
					if (this._InvoiceAllowance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAllowanceIDChanging(value);
					this.SendPropertyChanging();
					this._AllowanceID = value;
					this.SendPropertyChanged("AllowanceID");
					this.OnAllowanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraRemark", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Xml.Linq.XElement ExtraRemark
		{
			get
			{
				return this._ExtraRemark;
			}
			set
			{
				if ((this._ExtraRemark != value))
				{
					this.OnExtraRemarkChanging(value);
					this.SendPropertyChanging();
					this._ExtraRemark = value;
					this.SendPropertyChanged("ExtraRemark");
					this.OnExtraRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceAllowance_InvoiceAllowanceItemExtension", Storage="_InvoiceAllowance", ThisKey="AllowanceID", OtherKey="AllowanceID", IsForeignKey=true)]
		public InvoiceAllowance InvoiceAllowance
		{
			get
			{
				return this._InvoiceAllowance.Entity;
			}
			set
			{
				InvoiceAllowance previousValue = this._InvoiceAllowance.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceAllowance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceAllowance.Entity = null;
						previousValue.InvoiceAllowanceItemExtension = null;
					}
					this._InvoiceAllowance.Entity = value;
					if ((value != null))
					{
						value.InvoiceAllowanceItemExtension = this;
						this._AllowanceID = value.AllowanceID;
					}
					else
					{
						this._AllowanceID = default(int);
					}
					this.SendPropertyChanged("InvoiceAllowance");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceAllowance = default(EntityRef<InvoiceAllowance>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CALog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CALog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _DocID;
		
		private System.Nullable<System.DateTime> _LogDate;
		
		private System.Nullable<int> _TypeID;
		
		private int _LogID;
		
		private System.Nullable<int> _Catalog;
		
		private string _ContentPath;
		
		private System.Nullable<int> _CompanyID;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
		private EntityRef<DocumentType> _DocumentType;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(System.Nullable<int> value);
    partial void OnDocIDChanged();
    partial void OnLogDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLogDateChanged();
    partial void OnTypeIDChanging(System.Nullable<int> value);
    partial void OnTypeIDChanged();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnCatalogChanging(System.Nullable<int> value);
    partial void OnCatalogChanged();
    partial void OnContentPathChanging(string value);
    partial void OnContentPathChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    #endregion
		
		public CALog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Nullable<int> DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.DateTime> LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this.OnLogDateChanging(value);
					this.SendPropertyChanging();
					this._LogDate = value;
					this.SendPropertyChanged("LogDate");
					this.OnLogDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._DocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Catalog", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> Catalog
		{
			get
			{
				return this._Catalog;
			}
			set
			{
				if ((this._Catalog != value))
				{
					this.OnCatalogChanging(value);
					this.SendPropertyChanging();
					this._Catalog = value;
					this.SendPropertyChanged("Catalog");
					this.OnCatalogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentPath", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string ContentPath
		{
			get
			{
				return this._ContentPath;
			}
			set
			{
				if ((this._ContentPath != value))
				{
					this.OnContentPathChanging(value);
					this.SendPropertyChanging();
					this._ContentPath = value;
					this.SendPropertyChanged("ContentPath");
					this.OnContentPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_CALog", Storage="_CDS_Document", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true, DeleteRule="CASCADE")]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.CALog.Remove(this);
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.CALog.Add(this);
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_CALog", Storage="_DocumentType", ThisKey="TypeID", OtherKey="TypeID", IsForeignKey=true)]
		public DocumentType DocumentType
		{
			get
			{
				return this._DocumentType.Entity;
			}
			set
			{
				DocumentType previousValue = this._DocumentType.Entity;
				if (((previousValue != value) 
							|| (this._DocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentType.Entity = null;
						previousValue.CALog.Remove(this);
					}
					this._DocumentType.Entity = value;
					if ((value != null))
					{
						value.CALog.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DocumentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_CALog", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.CALog.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.CALog.Add(this);
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CDS_Document = default(EntityRef<CDS_Document>);
			this._DocumentType = default(EntityRef<DocumentType>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentPrintQueue")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentPrintQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private System.Nullable<int> _UID;
		
		private System.Nullable<System.DateTime> _SubmitDate;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnUIDChanging(System.Nullable<int> value);
    partial void OnUIDChanged();
    partial void OnSubmitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSubmitDateChanged();
    #endregion
		
		public DocumentPrintQueue()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> SubmitDate
		{
			get
			{
				return this._SubmitDate;
			}
			set
			{
				if ((this._SubmitDate != value))
				{
					this.OnSubmitDateChanging(value);
					this.SendPropertyChanging();
					this._SubmitDate = value;
					this.SendPropertyChanged("SubmitDate");
					this.OnSubmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentPrintQueue", Storage="_CDS_Document", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true)]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.DocumentPrintQueue = null;
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.DocumentPrintQueue = this;
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_DocumentPrintQueue", Storage="_UserProfile", ThisKey="UID", OtherKey="UID", IsForeignKey=true)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.DocumentPrintQueues.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.DocumentPrintQueues.Add(this);
						this._UID = value.UID;
					}
					else
					{
						this._UID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CDS_Document = default(EntityRef<CDS_Document>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SMSNotificationQueue")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SMSNotificationQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private int _MessageID;
		
		private System.Nullable<System.DateTime> _SubmitDate;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnSubmitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSubmitDateChanged();
    #endregion
		
		public SMSNotificationQueue()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> SubmitDate
		{
			get
			{
				return this._SubmitDate;
			}
			set
			{
				if ((this._SubmitDate != value))
				{
					this.OnSubmitDateChanging(value);
					this.SendPropertyChanging();
					this._SubmitDate = value;
					this.SendPropertyChanged("SubmitDate");
					this.OnSubmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_SMSNotificationQueue", Storage="_CDS_Document", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true)]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.SMSNotificationQueues.Remove(this);
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.SMSNotificationQueues.Add(this);
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CDS_Document = default(EntityRef<CDS_Document>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SMSNotificationLog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SMSNotificationLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private System.Nullable<int> _DocID;
		
		private int _MessageID;
		
		private System.Nullable<System.DateTime> _SubmitDate;
		
		private System.Nullable<int> _OwnerID;
		
		private string _SendingMobil;
		
		private string _SendingContent;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnDocIDChanging(System.Nullable<int> value);
    partial void OnDocIDChanged();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnSubmitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSubmitDateChanged();
    partial void OnOwnerIDChanging(System.Nullable<int> value);
    partial void OnOwnerIDChanged();
    partial void OnSendingMobilChanging(string value);
    partial void OnSendingMobilChanged();
    partial void OnSendingContentChanging(string value);
    partial void OnSendingContentChanged();
    #endregion
		
		public SMSNotificationLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmitDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> SubmitDate
		{
			get
			{
				return this._SubmitDate;
			}
			set
			{
				if ((this._SubmitDate != value))
				{
					this.OnSubmitDateChanging(value);
					this.SendPropertyChanging();
					this._SubmitDate = value;
					this.SendPropertyChanged("SubmitDate");
					this.OnSubmitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendingMobil", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string SendingMobil
		{
			get
			{
				return this._SendingMobil;
			}
			set
			{
				if ((this._SendingMobil != value))
				{
					this.OnSendingMobilChanging(value);
					this.SendPropertyChanging();
					this._SendingMobil = value;
					this.SendPropertyChanged("SendingMobil");
					this.OnSendingMobilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendingContent", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string SendingContent
		{
			get
			{
				return this._SendingContent;
			}
			set
			{
				if ((this._SendingContent != value))
				{
					this.OnSendingContentChanging(value);
					this.SendPropertyChanging();
					this._SendingContent = value;
					this.SendPropertyChanged("SendingContent");
					this.OnSendingContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_SMSNotificationLog", Storage="_CDS_Document", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true)]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.SMSNotificationLogs.Remove(this);
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.SMSNotificationLogs.Add(this);
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_SMSNotificationLog", Storage="_Organization", ThisKey="OwnerID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.SMSNotificationLogs.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.SMSNotificationLogs.Add(this);
						this._OwnerID = value.CompanyID;
					}
					else
					{
						this._OwnerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CDS_Document = default(EntityRef<CDS_Document>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentMappingQueue")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentMappingQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    #endregion
		
		public DocumentMappingQueue()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentMappingQueue", Storage="_CDS_Document", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.DocumentMappingQueue = null;
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.DocumentMappingQueue = this;
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CDS_Document = default(EntityRef<CDS_Document>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentDownloadQueue")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentDownloadQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    #endregion
		
		public DocumentDownloadQueue()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentDownloadQueue", Storage="_CDS_Document", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.DocumentDownloadQueue = null;
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.DocumentDownloadQueue = this;
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CDS_Document = default(EntityRef<CDS_Document>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceCarrier")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceCarrier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private string _CarrierType;
		
		private string _CarrierNo;
		
		private string _CarrierNo2;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnCarrierTypeChanging(string value);
    partial void OnCarrierTypeChanged();
    partial void OnCarrierNoChanging(string value);
    partial void OnCarrierNoChanged();
    partial void OnCarrierNo2Changing(string value);
    partial void OnCarrierNo2Changed();
    #endregion
		
		public InvoiceCarrier()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierType", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string CarrierType
		{
			get
			{
				return this._CarrierType;
			}
			set
			{
				if ((this._CarrierType != value))
				{
					this.OnCarrierTypeChanging(value);
					this.SendPropertyChanging();
					this._CarrierType = value;
					this.SendPropertyChanged("CarrierType");
					this.OnCarrierTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierNo", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string CarrierNo
		{
			get
			{
				return this._CarrierNo;
			}
			set
			{
				if ((this._CarrierNo != value))
				{
					this.OnCarrierNoChanging(value);
					this.SendPropertyChanging();
					this._CarrierNo = value;
					this.SendPropertyChanged("CarrierNo");
					this.OnCarrierNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierNo2", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CarrierNo2
		{
			get
			{
				return this._CarrierNo2;
			}
			set
			{
				if ((this._CarrierNo2 != value))
				{
					this.OnCarrierNo2Changing(value);
					this.SendPropertyChanging();
					this._CarrierNo2 = value;
					this.SendPropertyChanged("CarrierNo2");
					this.OnCarrierNo2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceCarrier", Storage="_InvoiceItem", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true)]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.InvoiceCarrier = null;
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.InvoiceCarrier = this;
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceDonation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceDonation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private string _AgencyCode;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnAgencyCodeChanging(string value);
    partial void OnAgencyCodeChanged();
    #endregion
		
		public InvoiceDonation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyCode", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string AgencyCode
		{
			get
			{
				return this._AgencyCode;
			}
			set
			{
				if ((this._AgencyCode != value))
				{
					this.OnAgencyCodeChanging(value);
					this.SendPropertyChanging();
					this._AgencyCode = value;
					this.SendPropertyChanged("AgencyCode");
					this.OnAgencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceDonation", Storage="_InvoiceItem", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true)]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.InvoiceDonation = null;
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.InvoiceDonation = this;
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnassignedInvoiceNo")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UnassignedInvoiceNo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UAID;
		
		private int _TrackID;
		
		private int _SellerID;
		
		private int _InvoiceBeginNo;
		
		private int _InvoiceEndNo;
		
		private EntityRef<InvoiceTrackCodeAssignment> _InvoiceTrackCodeAssignment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUAIDChanging(int value);
    partial void OnUAIDChanged();
    partial void OnTrackIDChanging(int value);
    partial void OnTrackIDChanged();
    partial void OnSellerIDChanging(int value);
    partial void OnSellerIDChanged();
    partial void OnInvoiceBeginNoChanging(int value);
    partial void OnInvoiceBeginNoChanged();
    partial void OnInvoiceEndNoChanging(int value);
    partial void OnInvoiceEndNoChanged();
    #endregion
		
		public UnassignedInvoiceNo()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UAID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UAID
		{
			get
			{
				return this._UAID;
			}
			set
			{
				if ((this._UAID != value))
				{
					this.OnUAIDChanging(value);
					this.SendPropertyChanging();
					this._UAID = value;
					this.SendPropertyChanged("UAID");
					this.OnUAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int TrackID
		{
			get
			{
				return this._TrackID;
			}
			set
			{
				if ((this._TrackID != value))
				{
					if (this._InvoiceTrackCodeAssignment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrackIDChanging(value);
					this.SendPropertyChanging();
					this._TrackID = value;
					this.SendPropertyChanged("TrackID");
					this.OnTrackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					if (this._InvoiceTrackCodeAssignment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSellerIDChanging(value);
					this.SendPropertyChanging();
					this._SellerID = value;
					this.SendPropertyChanged("SellerID");
					this.OnSellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceBeginNo", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int InvoiceBeginNo
		{
			get
			{
				return this._InvoiceBeginNo;
			}
			set
			{
				if ((this._InvoiceBeginNo != value))
				{
					this.OnInvoiceBeginNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceBeginNo = value;
					this.SendPropertyChanged("InvoiceBeginNo");
					this.OnInvoiceBeginNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceEndNo", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int InvoiceEndNo
		{
			get
			{
				return this._InvoiceEndNo;
			}
			set
			{
				if ((this._InvoiceEndNo != value))
				{
					this.OnInvoiceEndNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceEndNo = value;
					this.SendPropertyChanged("InvoiceEndNo");
					this.OnInvoiceEndNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceTrackCodeAssignment_UnassignedInvoiceNo", Storage="_InvoiceTrackCodeAssignment", ThisKey="TrackID,SellerID", OtherKey="TrackID,SellerID", IsForeignKey=true)]
		public InvoiceTrackCodeAssignment InvoiceTrackCodeAssignment
		{
			get
			{
				return this._InvoiceTrackCodeAssignment.Entity;
			}
			set
			{
				InvoiceTrackCodeAssignment previousValue = this._InvoiceTrackCodeAssignment.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceTrackCodeAssignment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceTrackCodeAssignment.Entity = null;
						previousValue.UnassignedInvoiceNo.Remove(this);
					}
					this._InvoiceTrackCodeAssignment.Entity = value;
					if ((value != null))
					{
						value.UnassignedInvoiceNo.Add(this);
						this._TrackID = value.TrackID;
						this._SellerID = value.SellerID;
					}
					else
					{
						this._TrackID = default(int);
						this._SellerID = default(int);
					}
					this.SendPropertyChanged("InvoiceTrackCodeAssignment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceTrackCodeAssignment = default(EntityRef<InvoiceTrackCodeAssignment>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceAllowanceCancellation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceAllowanceCancellation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AllowanceID;
		
		private System.Nullable<System.DateTime> _CancelDate;
		
		private string _Remark;
		
		private string _CancelReason;
		
		private EntityRef<InvoiceAllowance> _InvoiceAllowance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAllowanceIDChanging(int value);
    partial void OnAllowanceIDChanged();
    partial void OnCancelDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCancelDateChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCancelReasonChanging(string value);
    partial void OnCancelReasonChanged();
    #endregion
		
		public InvoiceAllowanceCancellation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowanceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AllowanceID
		{
			get
			{
				return this._AllowanceID;
			}
			set
			{
				if ((this._AllowanceID != value))
				{
					if (this._InvoiceAllowance.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAllowanceIDChanging(value);
					this.SendPropertyChanging();
					this._AllowanceID = value;
					this.SendPropertyChanged("AllowanceID");
					this.OnAllowanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.DateTime> CancelDate
		{
			get
			{
				return this._CancelDate;
			}
			set
			{
				if ((this._CancelDate != value))
				{
					this.OnCancelDateChanging(value);
					this.SendPropertyChanging();
					this._CancelDate = value;
					this.SendPropertyChanged("CancelDate");
					this.OnCancelDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelReason", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string CancelReason
		{
			get
			{
				return this._CancelReason;
			}
			set
			{
				if ((this._CancelReason != value))
				{
					this.OnCancelReasonChanging(value);
					this.SendPropertyChanging();
					this._CancelReason = value;
					this.SendPropertyChanged("CancelReason");
					this.OnCancelReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceAllowance_InvoiceAllowanceCancellation", Storage="_InvoiceAllowance", ThisKey="AllowanceID", OtherKey="AllowanceID", IsForeignKey=true)]
		public InvoiceAllowance InvoiceAllowance
		{
			get
			{
				return this._InvoiceAllowance.Entity;
			}
			set
			{
				InvoiceAllowance previousValue = this._InvoiceAllowance.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceAllowance.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceAllowance.Entity = null;
						previousValue.InvoiceAllowanceCancellation = null;
					}
					this._InvoiceAllowance.Entity = value;
					if ((value != null))
					{
						value.InvoiceAllowanceCancellation = this;
						this._AllowanceID = value.AllowanceID;
					}
					else
					{
						this._AllowanceID = default(int);
					}
					this.SendPropertyChanged("InvoiceAllowance");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceAllowance = default(EntityRef<InvoiceAllowance>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganizationStatus")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class OrganizationStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyID;
		
		private System.Nullable<int> _CurrentLevel;
		
		private System.Nullable<System.DateTime> _LastTimeToAcknowledge;
		
		private System.Nullable<int> _RequestPeriodicalInterval;
		
		private System.Nullable<bool> _SetToPrintInvoice;
		
		private string _InvoicePrintView;
		
		private System.Nullable<bool> _IronSteelIndustry;
		
		private System.Nullable<bool> _Entrusting;
		
		private string _AuthorizationNo;
		
		private System.Nullable<System.Guid> _TokenID;
		
		private System.Nullable<bool> _SetToOutsourcingCS;
		
		private string _AllowancePrintView;
		
		private System.Nullable<bool> _SetToNotifyCounterpartBySMS;
		
		private System.Nullable<bool> _DownloadDataNumber;
		
		private System.Nullable<bool> _DownloadDispatch;
		
		private System.Nullable<bool> _UploadBranchTrackBlank;
		
		private System.Nullable<bool> _PrintAll;
		
		private System.Nullable<int> _SettingInvoiceType;
		
		private System.Nullable<bool> _SubscribeB2BInvoicePDF;
		
		private System.Nullable<bool> _UseB2BStandalone;
		
		private System.Nullable<bool> _DisableIssuingNotice;
		
		private System.Nullable<bool> _DisableWinningNotice;
		
		private System.Nullable<bool> _EntrustToPrint;
		
		private EntityRef<LevelExpression> _LevelExpression;
		
		private EntityRef<Organization> _Organization;
		
		private EntityRef<UserToken> _UserToken;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnCurrentLevelChanging(System.Nullable<int> value);
    partial void OnCurrentLevelChanged();
    partial void OnLastTimeToAcknowledgeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastTimeToAcknowledgeChanged();
    partial void OnRequestPeriodicalIntervalChanging(System.Nullable<int> value);
    partial void OnRequestPeriodicalIntervalChanged();
    partial void OnSetToPrintInvoiceChanging(System.Nullable<bool> value);
    partial void OnSetToPrintInvoiceChanged();
    partial void OnInvoicePrintViewChanging(string value);
    partial void OnInvoicePrintViewChanged();
    partial void OnIronSteelIndustryChanging(System.Nullable<bool> value);
    partial void OnIronSteelIndustryChanged();
    partial void OnEntrustingChanging(System.Nullable<bool> value);
    partial void OnEntrustingChanged();
    partial void OnAuthorizationNoChanging(string value);
    partial void OnAuthorizationNoChanged();
    partial void OnTokenIDChanging(System.Nullable<System.Guid> value);
    partial void OnTokenIDChanged();
    partial void OnSetToOutsourcingCSChanging(System.Nullable<bool> value);
    partial void OnSetToOutsourcingCSChanged();
    partial void OnAllowancePrintViewChanging(string value);
    partial void OnAllowancePrintViewChanged();
    partial void OnSetToNotifyCounterpartBySMSChanging(System.Nullable<bool> value);
    partial void OnSetToNotifyCounterpartBySMSChanged();
    partial void OnDownloadDataNumberChanging(System.Nullable<bool> value);
    partial void OnDownloadDataNumberChanged();
    partial void OnDownloadDispatchChanging(System.Nullable<bool> value);
    partial void OnDownloadDispatchChanged();
    partial void OnUploadBranchTrackBlankChanging(System.Nullable<bool> value);
    partial void OnUploadBranchTrackBlankChanged();
    partial void OnPrintAllChanging(System.Nullable<bool> value);
    partial void OnPrintAllChanged();
    partial void OnSettingInvoiceTypeChanging(System.Nullable<int> value);
    partial void OnSettingInvoiceTypeChanged();
    partial void OnSubscribeB2BInvoicePDFChanging(System.Nullable<bool> value);
    partial void OnSubscribeB2BInvoicePDFChanged();
    partial void OnUseB2BStandaloneChanging(System.Nullable<bool> value);
    partial void OnUseB2BStandaloneChanged();
    partial void OnDisableIssuingNoticeChanging(System.Nullable<bool> value);
    partial void OnDisableIssuingNoticeChanged();
    partial void OnDisableWinningNoticeChanging(System.Nullable<bool> value);
    partial void OnDisableWinningNoticeChanged();
    partial void OnEntrustToPrintChanging(System.Nullable<bool> value);
    partial void OnEntrustToPrintChanged();
    #endregion
		
		public OrganizationStatus()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentLevel", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> CurrentLevel
		{
			get
			{
				return this._CurrentLevel;
			}
			set
			{
				if ((this._CurrentLevel != value))
				{
					if (this._LevelExpression.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrentLevelChanging(value);
					this.SendPropertyChanging();
					this._CurrentLevel = value;
					this.SendPropertyChanged("CurrentLevel");
					this.OnCurrentLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTimeToAcknowledge", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> LastTimeToAcknowledge
		{
			get
			{
				return this._LastTimeToAcknowledge;
			}
			set
			{
				if ((this._LastTimeToAcknowledge != value))
				{
					this.OnLastTimeToAcknowledgeChanging(value);
					this.SendPropertyChanging();
					this._LastTimeToAcknowledge = value;
					this.SendPropertyChanged("LastTimeToAcknowledge");
					this.OnLastTimeToAcknowledgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestPeriodicalInterval", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> RequestPeriodicalInterval
		{
			get
			{
				return this._RequestPeriodicalInterval;
			}
			set
			{
				if ((this._RequestPeriodicalInterval != value))
				{
					this.OnRequestPeriodicalIntervalChanging(value);
					this.SendPropertyChanging();
					this._RequestPeriodicalInterval = value;
					this.SendPropertyChanged("RequestPeriodicalInterval");
					this.OnRequestPeriodicalIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetToPrintInvoice", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<bool> SetToPrintInvoice
		{
			get
			{
				return this._SetToPrintInvoice;
			}
			set
			{
				if ((this._SetToPrintInvoice != value))
				{
					this.OnSetToPrintInvoiceChanging(value);
					this.SendPropertyChanging();
					this._SetToPrintInvoice = value;
					this.SendPropertyChanged("SetToPrintInvoice");
					this.OnSetToPrintInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoicePrintView", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string InvoicePrintView
		{
			get
			{
				return this._InvoicePrintView;
			}
			set
			{
				if ((this._InvoicePrintView != value))
				{
					this.OnInvoicePrintViewChanging(value);
					this.SendPropertyChanging();
					this._InvoicePrintView = value;
					this.SendPropertyChanged("InvoicePrintView");
					this.OnInvoicePrintViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IronSteelIndustry", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<bool> IronSteelIndustry
		{
			get
			{
				return this._IronSteelIndustry;
			}
			set
			{
				if ((this._IronSteelIndustry != value))
				{
					this.OnIronSteelIndustryChanging(value);
					this.SendPropertyChanging();
					this._IronSteelIndustry = value;
					this.SendPropertyChanged("IronSteelIndustry");
					this.OnIronSteelIndustryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entrusting", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> Entrusting
		{
			get
			{
				return this._Entrusting;
			}
			set
			{
				if ((this._Entrusting != value))
				{
					this.OnEntrustingChanging(value);
					this.SendPropertyChanging();
					this._Entrusting = value;
					this.SendPropertyChanged("Entrusting");
					this.OnEntrustingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorizationNo", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string AuthorizationNo
		{
			get
			{
				return this._AuthorizationNo;
			}
			set
			{
				if ((this._AuthorizationNo != value))
				{
					this.OnAuthorizationNoChanging(value);
					this.SendPropertyChanging();
					this._AuthorizationNo = value;
					this.SendPropertyChanged("AuthorizationNo");
					this.OnAuthorizationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TokenID", DbType="UniqueIdentifier")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.Guid> TokenID
		{
			get
			{
				return this._TokenID;
			}
			set
			{
				if ((this._TokenID != value))
				{
					if (this._UserToken.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTokenIDChanging(value);
					this.SendPropertyChanging();
					this._TokenID = value;
					this.SendPropertyChanged("TokenID");
					this.OnTokenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetToOutsourcingCS", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<bool> SetToOutsourcingCS
		{
			get
			{
				return this._SetToOutsourcingCS;
			}
			set
			{
				if ((this._SetToOutsourcingCS != value))
				{
					this.OnSetToOutsourcingCSChanging(value);
					this.SendPropertyChanging();
					this._SetToOutsourcingCS = value;
					this.SendPropertyChanged("SetToOutsourcingCS");
					this.OnSetToOutsourcingCSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowancePrintView", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string AllowancePrintView
		{
			get
			{
				return this._AllowancePrintView;
			}
			set
			{
				if ((this._AllowancePrintView != value))
				{
					this.OnAllowancePrintViewChanging(value);
					this.SendPropertyChanging();
					this._AllowancePrintView = value;
					this.SendPropertyChanged("AllowancePrintView");
					this.OnAllowancePrintViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetToNotifyCounterpartBySMS", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<bool> SetToNotifyCounterpartBySMS
		{
			get
			{
				return this._SetToNotifyCounterpartBySMS;
			}
			set
			{
				if ((this._SetToNotifyCounterpartBySMS != value))
				{
					this.OnSetToNotifyCounterpartBySMSChanging(value);
					this.SendPropertyChanging();
					this._SetToNotifyCounterpartBySMS = value;
					this.SendPropertyChanged("SetToNotifyCounterpartBySMS");
					this.OnSetToNotifyCounterpartBySMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadDataNumber", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<bool> DownloadDataNumber
		{
			get
			{
				return this._DownloadDataNumber;
			}
			set
			{
				if ((this._DownloadDataNumber != value))
				{
					this.OnDownloadDataNumberChanging(value);
					this.SendPropertyChanging();
					this._DownloadDataNumber = value;
					this.SendPropertyChanged("DownloadDataNumber");
					this.OnDownloadDataNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadDispatch", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<bool> DownloadDispatch
		{
			get
			{
				return this._DownloadDispatch;
			}
			set
			{
				if ((this._DownloadDispatch != value))
				{
					this.OnDownloadDispatchChanging(value);
					this.SendPropertyChanging();
					this._DownloadDispatch = value;
					this.SendPropertyChanged("DownloadDispatch");
					this.OnDownloadDispatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadBranchTrackBlank", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<bool> UploadBranchTrackBlank
		{
			get
			{
				return this._UploadBranchTrackBlank;
			}
			set
			{
				if ((this._UploadBranchTrackBlank != value))
				{
					this.OnUploadBranchTrackBlankChanging(value);
					this.SendPropertyChanging();
					this._UploadBranchTrackBlank = value;
					this.SendPropertyChanged("UploadBranchTrackBlank");
					this.OnUploadBranchTrackBlankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintAll", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<bool> PrintAll
		{
			get
			{
				return this._PrintAll;
			}
			set
			{
				if ((this._PrintAll != value))
				{
					this.OnPrintAllChanging(value);
					this.SendPropertyChanging();
					this._PrintAll = value;
					this.SendPropertyChanged("PrintAll");
					this.OnPrintAllChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingInvoiceType", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<int> SettingInvoiceType
		{
			get
			{
				return this._SettingInvoiceType;
			}
			set
			{
				if ((this._SettingInvoiceType != value))
				{
					this.OnSettingInvoiceTypeChanging(value);
					this.SendPropertyChanging();
					this._SettingInvoiceType = value;
					this.SendPropertyChanged("SettingInvoiceType");
					this.OnSettingInvoiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubscribeB2BInvoicePDF", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<bool> SubscribeB2BInvoicePDF
		{
			get
			{
				return this._SubscribeB2BInvoicePDF;
			}
			set
			{
				if ((this._SubscribeB2BInvoicePDF != value))
				{
					this.OnSubscribeB2BInvoicePDFChanging(value);
					this.SendPropertyChanging();
					this._SubscribeB2BInvoicePDF = value;
					this.SendPropertyChanged("SubscribeB2BInvoicePDF");
					this.OnSubscribeB2BInvoicePDFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseB2BStandalone", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<bool> UseB2BStandalone
		{
			get
			{
				return this._UseB2BStandalone;
			}
			set
			{
				if ((this._UseB2BStandalone != value))
				{
					this.OnUseB2BStandaloneChanging(value);
					this.SendPropertyChanging();
					this._UseB2BStandalone = value;
					this.SendPropertyChanged("UseB2BStandalone");
					this.OnUseB2BStandaloneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisableIssuingNotice", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<bool> DisableIssuingNotice
		{
			get
			{
				return this._DisableIssuingNotice;
			}
			set
			{
				if ((this._DisableIssuingNotice != value))
				{
					this.OnDisableIssuingNoticeChanging(value);
					this.SendPropertyChanging();
					this._DisableIssuingNotice = value;
					this.SendPropertyChanged("DisableIssuingNotice");
					this.OnDisableIssuingNoticeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisableWinningNotice", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<bool> DisableWinningNotice
		{
			get
			{
				return this._DisableWinningNotice;
			}
			set
			{
				if ((this._DisableWinningNotice != value))
				{
					this.OnDisableWinningNoticeChanging(value);
					this.SendPropertyChanging();
					this._DisableWinningNotice = value;
					this.SendPropertyChanged("DisableWinningNotice");
					this.OnDisableWinningNoticeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrustToPrint", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<bool> EntrustToPrint
		{
			get
			{
				return this._EntrustToPrint;
			}
			set
			{
				if ((this._EntrustToPrint != value))
				{
					this.OnEntrustToPrintChanging(value);
					this.SendPropertyChanging();
					this._EntrustToPrint = value;
					this.SendPropertyChanged("EntrustToPrint");
					this.OnEntrustToPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_OrganizationStatus", Storage="_LevelExpression", ThisKey="CurrentLevel", OtherKey="LevelID", IsForeignKey=true)]
		public LevelExpression LevelExpression
		{
			get
			{
				return this._LevelExpression.Entity;
			}
			set
			{
				LevelExpression previousValue = this._LevelExpression.Entity;
				if (((previousValue != value) 
							|| (this._LevelExpression.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LevelExpression.Entity = null;
						previousValue.OrganizationStatus.Remove(this);
					}
					this._LevelExpression.Entity = value;
					if ((value != null))
					{
						value.OrganizationStatus.Add(this);
						this._CurrentLevel = value.LevelID;
					}
					else
					{
						this._CurrentLevel = default(Nullable<int>);
					}
					this.SendPropertyChanged("LevelExpression");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrganizationStatus", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.OrganizationStatus = null;
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.OrganizationStatus = this;
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserToken_OrganizationStatus", Storage="_UserToken", ThisKey="TokenID", OtherKey="Token", IsForeignKey=true)]
		public UserToken UserToken
		{
			get
			{
				return this._UserToken.Entity;
			}
			set
			{
				UserToken previousValue = this._UserToken.Entity;
				if (((previousValue != value) 
							|| (this._UserToken.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserToken.Entity = null;
						previousValue.OrganizationStatus.Remove(this);
					}
					this._UserToken.Entity = value;
					if ((value != null))
					{
						value.OrganizationStatus.Add(this);
						this._TokenID = value.Token;
					}
					else
					{
						this._TokenID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("UserToken");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._LevelExpression = default(EntityRef<LevelExpression>);
			this._Organization = default(EntityRef<Organization>);
			this._UserToken = default(EntityRef<UserToken>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemMessage")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SystemMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MsgID;
		
		private string _MessageContents;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private bool _AlwaysShow;
		
		private System.Nullable<System.DateTime> _UpdateTime;
		
		private System.DateTime _CreateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMsgIDChanging(int value);
    partial void OnMsgIDChanged();
    partial void OnMessageContentsChanging(string value);
    partial void OnMessageContentsChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnAlwaysShowChanging(bool value);
    partial void OnAlwaysShowChanged();
    partial void OnUpdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateTimeChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public SystemMessage()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsgID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MsgID
		{
			get
			{
				return this._MsgID;
			}
			set
			{
				if ((this._MsgID != value))
				{
					this.OnMsgIDChanging(value);
					this.SendPropertyChanging();
					this._MsgID = value;
					this.SendPropertyChanged("MsgID");
					this.OnMsgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageContents", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string MessageContents
		{
			get
			{
				return this._MessageContents;
			}
			set
			{
				if ((this._MessageContents != value))
				{
					this.OnMessageContentsChanging(value);
					this.SendPropertyChanging();
					this._MessageContents = value;
					this.SendPropertyChanged("MessageContents");
					this.OnMessageContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlwaysShow", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool AlwaysShow
		{
			get
			{
				return this._AlwaysShow;
			}
			set
			{
				if ((this._AlwaysShow != value))
				{
					this.OnAlwaysShowChanging(value);
					this.SendPropertyChanging();
					this._AlwaysShow = value;
					this.SendPropertyChanged("AlwaysShow");
					this.OnAlwaysShowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceDeliveryTracking")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceDeliveryTracking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TrackingID;
		
		private int _InvoiceID;
		
		private string _TrackingNo1;
		
		private string _TrackingNo2;
		
		private System.DateTime _DeliveryDate;
		
		private int _DeliveryStatus;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
		private EntityRef<LevelExpression> _LevelExpression;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrackingIDChanging(int value);
    partial void OnTrackingIDChanged();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnTrackingNo1Changing(string value);
    partial void OnTrackingNo1Changed();
    partial void OnTrackingNo2Changing(string value);
    partial void OnTrackingNo2Changed();
    partial void OnDeliveryDateChanging(System.DateTime value);
    partial void OnDeliveryDateChanged();
    partial void OnDeliveryStatusChanging(int value);
    partial void OnDeliveryStatusChanged();
    #endregion
		
		public InvoiceDeliveryTracking()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int TrackingID
		{
			get
			{
				return this._TrackingID;
			}
			set
			{
				if ((this._TrackingID != value))
				{
					this.OnTrackingIDChanging(value);
					this.SendPropertyChanging();
					this._TrackingID = value;
					this.SendPropertyChanged("TrackingID");
					this.OnTrackingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingNo1", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string TrackingNo1
		{
			get
			{
				return this._TrackingNo1;
			}
			set
			{
				if ((this._TrackingNo1 != value))
				{
					this.OnTrackingNo1Changing(value);
					this.SendPropertyChanging();
					this._TrackingNo1 = value;
					this.SendPropertyChanged("TrackingNo1");
					this.OnTrackingNo1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingNo2", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string TrackingNo2
		{
			get
			{
				return this._TrackingNo2;
			}
			set
			{
				if ((this._TrackingNo2 != value))
				{
					this.OnTrackingNo2Changing(value);
					this.SendPropertyChanging();
					this._TrackingNo2 = value;
					this.SendPropertyChanged("TrackingNo2");
					this.OnTrackingNo2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryStatus", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int DeliveryStatus
		{
			get
			{
				return this._DeliveryStatus;
			}
			set
			{
				if ((this._DeliveryStatus != value))
				{
					if (this._LevelExpression.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryStatusChanging(value);
					this.SendPropertyChanging();
					this._DeliveryStatus = value;
					this.SendPropertyChanged("DeliveryStatus");
					this.OnDeliveryStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceDeliveryTracking", Storage="_InvoiceItem", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true)]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.InvoiceDeliveryTracking.Remove(this);
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.InvoiceDeliveryTracking.Add(this);
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelExpression_InvoiceDeliveryTracking", Storage="_LevelExpression", ThisKey="DeliveryStatus", OtherKey="LevelID", IsForeignKey=true)]
		public LevelExpression LevelExpression
		{
			get
			{
				return this._LevelExpression.Entity;
			}
			set
			{
				LevelExpression previousValue = this._LevelExpression.Entity;
				if (((previousValue != value) 
							|| (this._LevelExpression.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LevelExpression.Entity = null;
						previousValue.InvoiceDeliveryTracking.Remove(this);
					}
					this._LevelExpression.Entity = value;
					if ((value != null))
					{
						value.InvoiceDeliveryTracking.Add(this);
						this._DeliveryStatus = value.LevelID;
					}
					else
					{
						this._DeliveryStatus = default(int);
					}
					this.SendPropertyChanged("LevelExpression");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			this._LevelExpression = default(EntityRef<LevelExpression>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentSubscriptionQueue")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class DocumentSubscriptionQueue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocID;
		
		private EntityRef<CDS_Document> _CDS_Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    #endregion
		
		public DocumentSubscriptionQueue()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._CDS_Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CDS_Document_DocumentSubscriptionQueue", Storage="_CDS_Document", ThisKey="DocID", OtherKey="DocID", IsForeignKey=true)]
		public CDS_Document CDS_Document
		{
			get
			{
				return this._CDS_Document.Entity;
			}
			set
			{
				CDS_Document previousValue = this._CDS_Document.Entity;
				if (((previousValue != value) 
							|| (this._CDS_Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CDS_Document.Entity = null;
						previousValue.DocumentSubscriptionQueue = null;
					}
					this._CDS_Document.Entity = value;
					if ((value != null))
					{
						value.DocumentSubscriptionQueue = this;
						this._DocID = value.DocID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("CDS_Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._CDS_Document = default(EntityRef<CDS_Document>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceBuyer")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceBuyer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private string _ReceiptNo;
		
		private string _PostCode;
		
		private string _Address;
		
		private string _Name;
		
		private System.Nullable<int> _BuyerID;
		
		private string _CustomerID;
		
		private string _ContactName;
		
		private string _Phone;
		
		private string _EMail;
		
		private string _CustomerName;
		
		private string _Fax;
		
		private string _PersonInCharge;
		
		private string _RoleRemark;
		
		private string _CustomerNumber;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnReceiptNoChanging(string value);
    partial void OnReceiptNoChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBuyerIDChanging(System.Nullable<int> value);
    partial void OnBuyerIDChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnPersonInChargeChanging(string value);
    partial void OnPersonInChargeChanged();
    partial void OnRoleRemarkChanging(string value);
    partial void OnRoleRemarkChanged();
    partial void OnCustomerNumberChanging(string value);
    partial void OnCustomerNumberChanged();
    #endregion
		
		public InvoiceBuyer()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNo", DbType="NVarChar(10)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ReceiptNo
		{
			get
			{
				return this._ReceiptNo;
			}
			set
			{
				if ((this._ReceiptNo != value))
				{
					this.OnReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNo = value;
					this.SendPropertyChanged("ReceiptNo");
					this.OnReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(8)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(128)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyerID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> BuyerID
		{
			get
			{
				return this._BuyerID;
			}
			set
			{
				if ((this._BuyerID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuyerIDChanging(value);
					this.SendPropertyChanging();
					this._BuyerID = value;
					this.SendPropertyChanged("BuyerID");
					this.OnBuyerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(512)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonInCharge", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string PersonInCharge
		{
			get
			{
				return this._PersonInCharge;
			}
			set
			{
				if ((this._PersonInCharge != value))
				{
					this.OnPersonInChargeChanging(value);
					this.SendPropertyChanging();
					this._PersonInCharge = value;
					this.SendPropertyChanged("PersonInCharge");
					this.OnPersonInChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleRemark", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string RoleRemark
		{
			get
			{
				return this._RoleRemark;
			}
			set
			{
				if ((this._RoleRemark != value))
				{
					this.OnRoleRemarkChanging(value);
					this.SendPropertyChanging();
					this._RoleRemark = value;
					this.SendPropertyChanged("RoleRemark");
					this.OnRoleRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNumber", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public string CustomerNumber
		{
			get
			{
				return this._CustomerNumber;
			}
			set
			{
				if ((this._CustomerNumber != value))
				{
					this.OnCustomerNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerNumber = value;
					this.SendPropertyChanged("CustomerNumber");
					this.OnCustomerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceBuyer", Storage="_InvoiceItem", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.InvoiceBuyer = null;
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.InvoiceBuyer = this;
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_InvoiceBuyer", Storage="_Organization", ThisKey="BuyerID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.InvoiceBuyer.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.InvoiceBuyer.Add(this);
						this._BuyerID = value.CompanyID;
					}
					else
					{
						this._BuyerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceIssuerAgent")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceIssuerAgent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AgentID;
		
		private int _IssuerID;
		
		private EntityRef<Organization> _InvoiceAgent;
		
		private EntityRef<Organization> _InvoiceInsurer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAgentIDChanging(int value);
    partial void OnAgentIDChanged();
    partial void OnIssuerIDChanging(int value);
    partial void OnIssuerIDChanged();
    #endregion
		
		public InvoiceIssuerAgent()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AgentID
		{
			get
			{
				return this._AgentID;
			}
			set
			{
				if ((this._AgentID != value))
				{
					if (this._InvoiceAgent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgentIDChanging(value);
					this.SendPropertyChanging();
					this._AgentID = value;
					this.SendPropertyChanged("AgentID");
					this.OnAgentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int IssuerID
		{
			get
			{
				return this._IssuerID;
			}
			set
			{
				if ((this._IssuerID != value))
				{
					if (this._InvoiceInsurer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIssuerIDChanging(value);
					this.SendPropertyChanging();
					this._IssuerID = value;
					this.SendPropertyChanged("IssuerID");
					this.OnIssuerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_InvoiceIssuerAgent", Storage="_InvoiceAgent", ThisKey="AgentID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization InvoiceAgent
		{
			get
			{
				return this._InvoiceAgent.Entity;
			}
			set
			{
				Organization previousValue = this._InvoiceAgent.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceAgent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceAgent.Entity = null;
						previousValue.InvoiceInsurerAgent.Remove(this);
					}
					this._InvoiceAgent.Entity = value;
					if ((value != null))
					{
						value.InvoiceInsurerAgent.Add(this);
						this._AgentID = value.CompanyID;
					}
					else
					{
						this._AgentID = default(int);
					}
					this.SendPropertyChanged("InvoiceAgent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_InvoiceIssuerAgent1", Storage="_InvoiceInsurer", ThisKey="IssuerID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization InvoiceInsurer
		{
			get
			{
				return this._InvoiceInsurer.Entity;
			}
			set
			{
				Organization previousValue = this._InvoiceInsurer.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceInsurer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceInsurer.Entity = null;
						previousValue.AsInvoiceInsurer.Remove(this);
					}
					this._InvoiceInsurer.Entity = value;
					if ((value != null))
					{
						value.AsInvoiceInsurer.Add(this);
						this._IssuerID = value.CompanyID;
					}
					else
					{
						this._IssuerID = default(int);
					}
					this.SendPropertyChanged("InvoiceInsurer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceAgent = default(EntityRef<Organization>);
			this._InvoiceInsurer = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoicePurchaseOrder")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoicePurchaseOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private System.Nullable<int> _UploadID;
		
		private string _OrderNo;
		
		private System.Nullable<System.DateTime> _PurchaseDate;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
		private EntityRef<InvoicePurchaseOrderUpload> _InvoicePurchaseOrderUpload;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnUploadIDChanging(System.Nullable<int> value);
    partial void OnUploadIDChanged();
    partial void OnOrderNoChanging(string value);
    partial void OnOrderNoChanged();
    partial void OnPurchaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPurchaseDateChanged();
    #endregion
		
		public InvoicePurchaseOrder()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> UploadID
		{
			get
			{
				return this._UploadID;
			}
			set
			{
				if ((this._UploadID != value))
				{
					if (this._InvoicePurchaseOrderUpload.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUploadIDChanging(value);
					this.SendPropertyChanging();
					this._UploadID = value;
					this.SendPropertyChanged("UploadID");
					this.OnUploadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> PurchaseDate
		{
			get
			{
				return this._PurchaseDate;
			}
			set
			{
				if ((this._PurchaseDate != value))
				{
					this.OnPurchaseDateChanging(value);
					this.SendPropertyChanging();
					this._PurchaseDate = value;
					this.SendPropertyChanged("PurchaseDate");
					this.OnPurchaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoicePurchaseOrder", Storage="_InvoiceItem", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.InvoicePurchaseOrder = null;
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.InvoicePurchaseOrder = this;
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoicePurchaseOrderUpload_InvoicePurchaseOrder", Storage="_InvoicePurchaseOrderUpload", ThisKey="UploadID", OtherKey="UploadID", IsForeignKey=true, DeleteRule="CASCADE")]
		public InvoicePurchaseOrderUpload InvoicePurchaseOrderUpload
		{
			get
			{
				return this._InvoicePurchaseOrderUpload.Entity;
			}
			set
			{
				InvoicePurchaseOrderUpload previousValue = this._InvoicePurchaseOrderUpload.Entity;
				if (((previousValue != value) 
							|| (this._InvoicePurchaseOrderUpload.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoicePurchaseOrderUpload.Entity = null;
						previousValue.InvoicePurchaseOrder.Remove(this);
					}
					this._InvoicePurchaseOrderUpload.Entity = value;
					if ((value != null))
					{
						value.InvoicePurchaseOrder.Add(this);
						this._UploadID = value.UploadID;
					}
					else
					{
						this._UploadID = default(Nullable<int>);
					}
					this.SendPropertyChanged("InvoicePurchaseOrderUpload");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			this._InvoicePurchaseOrderUpload = default(EntityRef<InvoicePurchaseOrderUpload>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceItemExtension")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceItemExtension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private System.Xml.Linq.XElement _ExtraRemark;
		
		private string _ProjectNo;
		
		private string _PurchaseNo;
		
		private System.Nullable<byte> _StampDutyFlag;
		
		private EntityRef<InvoiceItem> _InvoiceItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnExtraRemarkChanging(System.Xml.Linq.XElement value);
    partial void OnExtraRemarkChanged();
    partial void OnProjectNoChanging(string value);
    partial void OnProjectNoChanged();
    partial void OnPurchaseNoChanging(string value);
    partial void OnPurchaseNoChanged();
    partial void OnStampDutyFlagChanging(System.Nullable<byte> value);
    partial void OnStampDutyFlagChanged();
    #endregion
		
		public InvoiceItemExtension()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._InvoiceItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraRemark", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Xml.Linq.XElement ExtraRemark
		{
			get
			{
				return this._ExtraRemark;
			}
			set
			{
				if ((this._ExtraRemark != value))
				{
					this.OnExtraRemarkChanging(value);
					this.SendPropertyChanging();
					this._ExtraRemark = value;
					this.SendPropertyChanged("ExtraRemark");
					this.OnExtraRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectNo", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ProjectNo
		{
			get
			{
				return this._ProjectNo;
			}
			set
			{
				if ((this._ProjectNo != value))
				{
					this.OnProjectNoChanging(value);
					this.SendPropertyChanging();
					this._ProjectNo = value;
					this.SendPropertyChanged("ProjectNo");
					this.OnProjectNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseNo", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string PurchaseNo
		{
			get
			{
				return this._PurchaseNo;
			}
			set
			{
				if ((this._PurchaseNo != value))
				{
					this.OnPurchaseNoChanging(value);
					this.SendPropertyChanging();
					this._PurchaseNo = value;
					this.SendPropertyChanged("PurchaseNo");
					this.OnPurchaseNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StampDutyFlag", DbType="TinyInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<byte> StampDutyFlag
		{
			get
			{
				return this._StampDutyFlag;
			}
			set
			{
				if ((this._StampDutyFlag != value))
				{
					this.OnStampDutyFlagChanging(value);
					this.SendPropertyChanging();
					this._StampDutyFlag = value;
					this.SendPropertyChanged("StampDutyFlag");
					this.OnStampDutyFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceItem_InvoiceItemExtension", Storage="_InvoiceItem", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public InvoiceItem InvoiceItem
		{
			get
			{
				return this._InvoiceItem.Entity;
			}
			set
			{
				InvoiceItem previousValue = this._InvoiceItem.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceItem.Entity = null;
						previousValue.InvoiceItemExtension = null;
					}
					this._InvoiceItem.Entity = value;
					if ((value != null))
					{
						value.InvoiceItemExtension = this;
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("InvoiceItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceItem = default(EntityRef<InvoiceItem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlankInvoiceNoSummary")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BlankInvoiceNoSummary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BlankID;
		
		private int _IntervalID;
		
		private int _BlankNoBegin;
		
		private int _BlankNoEnd;
		
		private EntityRef<InvoiceNoInterval> _InvoiceNoInterval;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlankIDChanging(int value);
    partial void OnBlankIDChanged();
    partial void OnIntervalIDChanging(int value);
    partial void OnIntervalIDChanged();
    partial void OnBlankNoBeginChanging(int value);
    partial void OnBlankNoBeginChanged();
    partial void OnBlankNoEndChanging(int value);
    partial void OnBlankNoEndChanged();
    #endregion
		
		public BlankInvoiceNoSummary()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlankID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int BlankID
		{
			get
			{
				return this._BlankID;
			}
			set
			{
				if ((this._BlankID != value))
				{
					this.OnBlankIDChanging(value);
					this.SendPropertyChanging();
					this._BlankID = value;
					this.SendPropertyChanged("BlankID");
					this.OnBlankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntervalID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int IntervalID
		{
			get
			{
				return this._IntervalID;
			}
			set
			{
				if ((this._IntervalID != value))
				{
					if (this._InvoiceNoInterval.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIntervalIDChanging(value);
					this.SendPropertyChanging();
					this._IntervalID = value;
					this.SendPropertyChanged("IntervalID");
					this.OnIntervalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlankNoBegin", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int BlankNoBegin
		{
			get
			{
				return this._BlankNoBegin;
			}
			set
			{
				if ((this._BlankNoBegin != value))
				{
					this.OnBlankNoBeginChanging(value);
					this.SendPropertyChanging();
					this._BlankNoBegin = value;
					this.SendPropertyChanged("BlankNoBegin");
					this.OnBlankNoBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlankNoEnd", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int BlankNoEnd
		{
			get
			{
				return this._BlankNoEnd;
			}
			set
			{
				if ((this._BlankNoEnd != value))
				{
					this.OnBlankNoEndChanging(value);
					this.SendPropertyChanging();
					this._BlankNoEnd = value;
					this.SendPropertyChanged("BlankNoEnd");
					this.OnBlankNoEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceNoInterval_BlankInvoiceNoSummary", Storage="_InvoiceNoInterval", ThisKey="IntervalID", OtherKey="IntervalID", IsForeignKey=true)]
		public InvoiceNoInterval InvoiceNoInterval
		{
			get
			{
				return this._InvoiceNoInterval.Entity;
			}
			set
			{
				InvoiceNoInterval previousValue = this._InvoiceNoInterval.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceNoInterval.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceNoInterval.Entity = null;
						previousValue.BlankInvoiceNoSummary.Remove(this);
					}
					this._InvoiceNoInterval.Entity = value;
					if ((value != null))
					{
						value.BlankInvoiceNoSummary.Add(this);
						this._IntervalID = value.IntervalID;
					}
					else
					{
						this._IntervalID = default(int);
					}
					this.SendPropertyChanged("InvoiceNoInterval");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceNoInterval = default(EntityRef<InvoiceNoInterval>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductItemCategory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ProductItemCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PICID;
		
		private string _ItemNo;
		
		private string _ItemName;
		
		private string _Unit;
		
		private decimal _UnitePrice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPICIDChanging(int value);
    partial void OnPICIDChanged();
    partial void OnItemNoChanging(string value);
    partial void OnItemNoChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnUnitePriceChanging(decimal value);
    partial void OnUnitePriceChanged();
    #endregion
		
		public ProductItemCategory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PICID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PICID
		{
			get
			{
				return this._PICID;
			}
			set
			{
				if ((this._PICID != value))
				{
					this.OnPICIDChanging(value);
					this.SendPropertyChanging();
					this._PICID = value;
					this.SendPropertyChanged("PICID");
					this.OnPICIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this.OnItemNoChanging(value);
					this.SendPropertyChanging();
					this._ItemNo = value;
					this.SendPropertyChanged("ItemNo");
					this.OnItemNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitePrice", DbType="Decimal(18,5) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public decimal UnitePrice
		{
			get
			{
				return this._UnitePrice;
			}
			set
			{
				if ((this._UnitePrice != value))
				{
					this.OnUnitePriceChanging(value);
					this.SendPropertyChanging();
					this._UnitePrice = value;
					this.SendPropertyChanged("UnitePrice");
					this.OnUnitePriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceNoSegmentDisposition")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceNoSegmentDisposition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SegmentID;
		
		private int _UID;
		
		private int _DepartmentID;
		
		private EntityRef<UserProfile> _UserProfile;
		
		private EntityRef<InvoiceNoSegment> _InvoiceNoSegment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSegmentIDChanging(int value);
    partial void OnSegmentIDChanged();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    partial void OnDepartmentIDChanging(int value);
    partial void OnDepartmentIDChanged();
    #endregion
		
		public InvoiceNoSegmentDisposition()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegmentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int SegmentID
		{
			get
			{
				return this._SegmentID;
			}
			set
			{
				if ((this._SegmentID != value))
				{
					if (this._InvoiceNoSegment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSegmentIDChanging(value);
					this.SendPropertyChanging();
					this._SegmentID = value;
					this.SendPropertyChanged("SegmentID");
					this.OnSegmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_InvoiceNoSegmentDisposition", Storage="_UserProfile", ThisKey="UID", OtherKey="UID", IsForeignKey=true)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.InvoiceNoSegmentDisposition.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.InvoiceNoSegmentDisposition.Add(this);
						this._UID = value.UID;
					}
					else
					{
						this._UID = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceNoSegment_InvoiceNoSegmentDisposition", Storage="_InvoiceNoSegment", ThisKey="SegmentID", OtherKey="SegmentID", IsForeignKey=true)]
		public InvoiceNoSegment InvoiceNoSegment
		{
			get
			{
				return this._InvoiceNoSegment.Entity;
			}
			set
			{
				InvoiceNoSegment previousValue = this._InvoiceNoSegment.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceNoSegment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceNoSegment.Entity = null;
						previousValue.InvoiceNoSegmentDisposition = null;
					}
					this._InvoiceNoSegment.Entity = value;
					if ((value != null))
					{
						value.InvoiceNoSegmentDisposition = this;
						this._SegmentID = value.SegmentID;
					}
					else
					{
						this._SegmentID = default(int);
					}
					this.SendPropertyChanged("InvoiceNoSegment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._UserProfile = default(EntityRef<UserProfile>);
			this._InvoiceNoSegment = default(EntityRef<InvoiceNoSegment>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceNoSegment")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InvoiceNoSegment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SegmentID;
		
		private string _DeviceName;
		
		private EntityRef<InvoiceNoSegmentDisposition> _InvoiceNoSegmentDisposition;
		
		private EntityRef<POSInvoiceNoSegment> _POSInvoiceNoSegment;
		
		private EntityRef<InvoiceNoInterval> _InvoiceNoInterval;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSegmentIDChanging(int value);
    partial void OnSegmentIDChanged();
    partial void OnDeviceNameChanging(string value);
    partial void OnDeviceNameChanged();
    #endregion
		
		public InvoiceNoSegment()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegmentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int SegmentID
		{
			get
			{
				return this._SegmentID;
			}
			set
			{
				if ((this._SegmentID != value))
				{
					if (this._InvoiceNoInterval.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSegmentIDChanging(value);
					this.SendPropertyChanging();
					this._SegmentID = value;
					this.SendPropertyChanged("SegmentID");
					this.OnSegmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceName", DbType="NVarChar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string DeviceName
		{
			get
			{
				return this._DeviceName;
			}
			set
			{
				if ((this._DeviceName != value))
				{
					this.OnDeviceNameChanging(value);
					this.SendPropertyChanging();
					this._DeviceName = value;
					this.SendPropertyChanged("DeviceName");
					this.OnDeviceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceNoSegment_InvoiceNoSegmentDisposition", Storage="_InvoiceNoSegmentDisposition", ThisKey="SegmentID", OtherKey="SegmentID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public InvoiceNoSegmentDisposition InvoiceNoSegmentDisposition
		{
			get
			{
				if ((this.serializing 
							&& (this._InvoiceNoSegmentDisposition.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._InvoiceNoSegmentDisposition.Entity;
			}
			set
			{
				InvoiceNoSegmentDisposition previousValue = this._InvoiceNoSegmentDisposition.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceNoSegmentDisposition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceNoSegmentDisposition.Entity = null;
						previousValue.InvoiceNoSegment = null;
					}
					this._InvoiceNoSegmentDisposition.Entity = value;
					if ((value != null))
					{
						value.InvoiceNoSegment = this;
					}
					this.SendPropertyChanged("InvoiceNoSegmentDisposition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceNoSegment_POSInvoiceNoSegment", Storage="_POSInvoiceNoSegment", ThisKey="SegmentID", OtherKey="SegmentID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public POSInvoiceNoSegment POSInvoiceNoSegment
		{
			get
			{
				if ((this.serializing 
							&& (this._POSInvoiceNoSegment.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._POSInvoiceNoSegment.Entity;
			}
			set
			{
				POSInvoiceNoSegment previousValue = this._POSInvoiceNoSegment.Entity;
				if (((previousValue != value) 
							|| (this._POSInvoiceNoSegment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POSInvoiceNoSegment.Entity = null;
						previousValue.InvoiceNoSegment = null;
					}
					this._POSInvoiceNoSegment.Entity = value;
					if ((value != null))
					{
						value.InvoiceNoSegment = this;
					}
					this.SendPropertyChanged("POSInvoiceNoSegment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceNoInterval_InvoiceNoSegment", Storage="_InvoiceNoInterval", ThisKey="SegmentID", OtherKey="IntervalID", IsForeignKey=true)]
		public InvoiceNoInterval InvoiceNoInterval
		{
			get
			{
				return this._InvoiceNoInterval.Entity;
			}
			set
			{
				InvoiceNoInterval previousValue = this._InvoiceNoInterval.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceNoInterval.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceNoInterval.Entity = null;
						previousValue.InvoiceNoSegment = null;
					}
					this._InvoiceNoInterval.Entity = value;
					if ((value != null))
					{
						value.InvoiceNoSegment = this;
						this._SegmentID = value.IntervalID;
					}
					else
					{
						this._SegmentID = default(int);
					}
					this.SendPropertyChanged("InvoiceNoInterval");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceNoSegmentDisposition = default(EntityRef<InvoiceNoSegmentDisposition>);
			this._POSInvoiceNoSegment = default(EntityRef<POSInvoiceNoSegment>);
			this._InvoiceNoInterval = default(EntityRef<InvoiceNoInterval>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.POSDevice")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class POSDevice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DeviceID;
		
		private string _POSNo;
		
		private int _CompanyID;
		
		private EntitySet<POSInvoiceNoSegment> _POSInvoiceNoSegment;
		
		private EntityRef<Organization> _Organization;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeviceIDChanging(int value);
    partial void OnDeviceIDChanged();
    partial void OnPOSNoChanging(string value);
    partial void OnPOSNoChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    #endregion
		
		public POSDevice()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					this.OnDeviceIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceID = value;
					this.SendPropertyChanged("DeviceID");
					this.OnDeviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSNo", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string POSNo
		{
			get
			{
				return this._POSNo;
			}
			set
			{
				if ((this._POSNo != value))
				{
					this.OnPOSNoChanging(value);
					this.SendPropertyChanging();
					this._POSNo = value;
					this.SendPropertyChanged("POSNo");
					this.OnPOSNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="POSDevice_POSInvoiceNoSegment", Storage="_POSInvoiceNoSegment", ThisKey="DeviceID", OtherKey="DeviceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<POSInvoiceNoSegment> POSInvoiceNoSegment
		{
			get
			{
				if ((this.serializing 
							&& (this._POSInvoiceNoSegment.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._POSInvoiceNoSegment;
			}
			set
			{
				this._POSInvoiceNoSegment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_POSDevice", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.POSDevice.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.POSDevice.Add(this);
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_POSInvoiceNoSegment(POSInvoiceNoSegment entity)
		{
			this.SendPropertyChanging();
			entity.POSDevice = this;
		}
		
		private void detach_POSInvoiceNoSegment(POSInvoiceNoSegment entity)
		{
			this.SendPropertyChanging();
			entity.POSDevice = null;
		}
		
		private void Initialize()
		{
			this._POSInvoiceNoSegment = new EntitySet<POSInvoiceNoSegment>(new Action<POSInvoiceNoSegment>(this.attach_POSInvoiceNoSegment), new Action<POSInvoiceNoSegment>(this.detach_POSInvoiceNoSegment));
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.POSInvoiceNoSegment")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class POSInvoiceNoSegment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SegmentID;
		
		private int _DeviceID;
		
		private System.Nullable<System.DateTime> _RequestDate;
		
		private EntityRef<InvoiceNoSegment> _InvoiceNoSegment;
		
		private EntityRef<POSDevice> _POSDevice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSegmentIDChanging(int value);
    partial void OnSegmentIDChanged();
    partial void OnDeviceIDChanging(int value);
    partial void OnDeviceIDChanged();
    partial void OnRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestDateChanged();
    #endregion
		
		public POSInvoiceNoSegment()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegmentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int SegmentID
		{
			get
			{
				return this._SegmentID;
			}
			set
			{
				if ((this._SegmentID != value))
				{
					if (this._InvoiceNoSegment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSegmentIDChanging(value);
					this.SendPropertyChanging();
					this._SegmentID = value;
					this.SendPropertyChanged("SegmentID");
					this.OnSegmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int DeviceID
		{
			get
			{
				return this._DeviceID;
			}
			set
			{
				if ((this._DeviceID != value))
				{
					if (this._POSDevice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeviceIDChanging(value);
					this.SendPropertyChanging();
					this._DeviceID = value;
					this.SendPropertyChanged("DeviceID");
					this.OnDeviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceNoSegment_POSInvoiceNoSegment", Storage="_InvoiceNoSegment", ThisKey="SegmentID", OtherKey="SegmentID", IsForeignKey=true)]
		public InvoiceNoSegment InvoiceNoSegment
		{
			get
			{
				return this._InvoiceNoSegment.Entity;
			}
			set
			{
				InvoiceNoSegment previousValue = this._InvoiceNoSegment.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceNoSegment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceNoSegment.Entity = null;
						previousValue.POSInvoiceNoSegment = null;
					}
					this._InvoiceNoSegment.Entity = value;
					if ((value != null))
					{
						value.POSInvoiceNoSegment = this;
						this._SegmentID = value.SegmentID;
					}
					else
					{
						this._SegmentID = default(int);
					}
					this.SendPropertyChanged("InvoiceNoSegment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="POSDevice_POSInvoiceNoSegment", Storage="_POSDevice", ThisKey="DeviceID", OtherKey="DeviceID", IsForeignKey=true)]
		public POSDevice POSDevice
		{
			get
			{
				return this._POSDevice.Entity;
			}
			set
			{
				POSDevice previousValue = this._POSDevice.Entity;
				if (((previousValue != value) 
							|| (this._POSDevice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POSDevice.Entity = null;
						previousValue.POSInvoiceNoSegment.Remove(this);
					}
					this._POSDevice.Entity = value;
					if ((value != null))
					{
						value.POSInvoiceNoSegment.Add(this);
						this._DeviceID = value.DeviceID;
					}
					else
					{
						this._DeviceID = default(int);
					}
					this.SendPropertyChanged("POSDevice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._InvoiceNoSegment = default(EntityRef<InvoiceNoSegment>);
			this._POSDevice = default(EntityRef<POSDevice>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganizationExtension")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class OrganizationExtension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyID;
		
		private string _CustomerNo;
		
		private string _TaxNo;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnCustomerNoChanging(string value);
    partial void OnCustomerNoChanged();
    partial void OnTaxNoChanging(string value);
    partial void OnTaxNoChanged();
    #endregion
		
		public OrganizationExtension()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNo", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string CustomerNo
		{
			get
			{
				return this._CustomerNo;
			}
			set
			{
				if ((this._CustomerNo != value))
				{
					this.OnCustomerNoChanging(value);
					this.SendPropertyChanging();
					this._CustomerNo = value;
					this.SendPropertyChanged("CustomerNo");
					this.OnCustomerNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxNo", DbType="NVarChar(16)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string TaxNo
		{
			get
			{
				return this._TaxNo;
			}
			set
			{
				if ((this._TaxNo != value))
				{
					this.OnTaxNoChanging(value);
					this.SendPropertyChanging();
					this._TaxNo = value;
					this.SendPropertyChanged("TaxNo");
					this.OnTaxNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrganizationExtension", Storage="_Organization", ThisKey="CompanyID", OtherKey="CompanyID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.OrganizationExtension = null;
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.OrganizationExtension = this;
						this._CompanyID = value.CompanyID;
					}
					else
					{
						this._CompanyID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class InquireVacantNoResult
	{
		
		private System.Nullable<long> _SeqNo;
		
		private short _Year;
		
		private short _PeriodNo;
		
		private string _TrackCode;
		
		private int _StartNo;
		
		private int _EndNo;
		
		private int _TrackID;
		
		private int _SellerID;
		
		private System.Nullable<int> _InvoiceID;
		
		private System.Nullable<int> _InvoiceNo;
		
		private System.Nullable<int> _CheckNext;
		
		private System.Nullable<int> _CheckPrev;
		
		public InquireVacantNoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="BigInt")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Nullable<long> SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this._SeqNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="SmallInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodNo", DbType="SmallInt NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public short PeriodNo
		{
			get
			{
				return this._PeriodNo;
			}
			set
			{
				if ((this._PeriodNo != value))
				{
					this._PeriodNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string TrackCode
		{
			get
			{
				return this._TrackCode;
			}
			set
			{
				if ((this._TrackCode != value))
				{
					this._TrackCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartNo", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int StartNo
		{
			get
			{
				return this._StartNo;
			}
			set
			{
				if ((this._StartNo != value))
				{
					this._StartNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndNo", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int EndNo
		{
			get
			{
				return this._EndNo;
			}
			set
			{
				if ((this._EndNo != value))
				{
					this._EndNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int TrackID
		{
			get
			{
				return this._TrackID;
			}
			set
			{
				if ((this._TrackID != value))
				{
					this._TrackID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellerID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int SellerID
		{
			get
			{
				return this._SellerID;
			}
			set
			{
				if ((this._SellerID != value))
				{
					this._SellerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					this._InvoiceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNext", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> CheckNext
		{
			get
			{
				return this._CheckNext;
			}
			set
			{
				if ((this._CheckNext != value))
				{
					this._CheckNext = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckPrev", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<int> CheckPrev
		{
			get
			{
				return this._CheckPrev;
			}
			set
			{
				if ((this._CheckPrev != value))
				{
					this._CheckPrev = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
