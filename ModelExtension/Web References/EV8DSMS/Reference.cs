//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace ModelExtension.EV8DSMS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SMSSoap", Namespace="http://tempuri.org/")]
    public partial class SMS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback closeConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendParamSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback eraseBookingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDeliveryStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFreePhoneCallinLogOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SMS() {
            this.Url = global::ModelExtension.Properties.Settings.Default.ModelExtension_EV8DSMS_SMS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getConnectionCompletedEventHandler getConnectionCompleted;
        
        /// <remarks/>
        public event closeConnectionCompletedEventHandler closeConnectionCompleted;
        
        /// <remarks/>
        public event sendSMSCompletedEventHandler sendSMSCompleted;
        
        /// <remarks/>
        public event sendParamSMSCompletedEventHandler sendParamSMSCompleted;
        
        /// <remarks/>
        public event eraseBookingCompletedEventHandler eraseBookingCompleted;
        
        /// <remarks/>
        public event getDeliveryStatusCompletedEventHandler getDeliveryStatusCompleted;
        
        /// <remarks/>
        public event getCreditCompletedEventHandler getCreditCompleted;
        
        /// <remarks/>
        public event getFreePhoneCallinLogCompletedEventHandler getFreePhoneCallinLogCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getConnection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getConnection(string userID, string password) {
            object[] results = this.Invoke("getConnection", new object[] {
                        userID,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getConnectionAsync(string userID, string password) {
            this.getConnectionAsync(userID, password, null);
        }
        
        /// <remarks/>
        public void getConnectionAsync(string userID, string password, object userState) {
            if ((this.getConnectionOperationCompleted == null)) {
                this.getConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetConnectionOperationCompleted);
            }
            this.InvokeAsync("getConnection", new object[] {
                        userID,
                        password}, this.getConnectionOperationCompleted, userState);
        }
        
        private void OngetConnectionOperationCompleted(object arg) {
            if ((this.getConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getConnectionCompleted(this, new getConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/closeConnection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string closeConnection(string sessionKey) {
            object[] results = this.Invoke("closeConnection", new object[] {
                        sessionKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void closeConnectionAsync(string sessionKey) {
            this.closeConnectionAsync(sessionKey, null);
        }
        
        /// <remarks/>
        public void closeConnectionAsync(string sessionKey, object userState) {
            if ((this.closeConnectionOperationCompleted == null)) {
                this.closeConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncloseConnectionOperationCompleted);
            }
            this.InvokeAsync("closeConnection", new object[] {
                        sessionKey}, this.closeConnectionOperationCompleted, userState);
        }
        
        private void OncloseConnectionOperationCompleted(object arg) {
            if ((this.closeConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.closeConnectionCompleted(this, new closeConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendSMS(string sessionKey, string subject, string content, string mobile, string sendTime) {
            object[] results = this.Invoke("sendSMS", new object[] {
                        sessionKey,
                        subject,
                        content,
                        mobile,
                        sendTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendSMSAsync(string sessionKey, string subject, string content, string mobile, string sendTime) {
            this.sendSMSAsync(sessionKey, subject, content, mobile, sendTime, null);
        }
        
        /// <remarks/>
        public void sendSMSAsync(string sessionKey, string subject, string content, string mobile, string sendTime, object userState) {
            if ((this.sendSMSOperationCompleted == null)) {
                this.sendSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendSMSOperationCompleted);
            }
            this.InvokeAsync("sendSMS", new object[] {
                        sessionKey,
                        subject,
                        content,
                        mobile,
                        sendTime}, this.sendSMSOperationCompleted, userState);
        }
        
        private void OnsendSMSOperationCompleted(object arg) {
            if ((this.sendSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendSMSCompleted(this, new sendSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendParamSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string sendParamSMS(string sessionKey, string subject, string contentXML, string sendTime) {
            object[] results = this.Invoke("sendParamSMS", new object[] {
                        sessionKey,
                        subject,
                        contentXML,
                        sendTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendParamSMSAsync(string sessionKey, string subject, string contentXML, string sendTime) {
            this.sendParamSMSAsync(sessionKey, subject, contentXML, sendTime, null);
        }
        
        /// <remarks/>
        public void sendParamSMSAsync(string sessionKey, string subject, string contentXML, string sendTime, object userState) {
            if ((this.sendParamSMSOperationCompleted == null)) {
                this.sendParamSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendParamSMSOperationCompleted);
            }
            this.InvokeAsync("sendParamSMS", new object[] {
                        sessionKey,
                        subject,
                        contentXML,
                        sendTime}, this.sendParamSMSOperationCompleted, userState);
        }
        
        private void OnsendParamSMSOperationCompleted(object arg) {
            if ((this.sendParamSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendParamSMSCompleted(this, new sendParamSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/eraseBooking", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string eraseBooking(string sessionKey, string batchID) {
            object[] results = this.Invoke("eraseBooking", new object[] {
                        sessionKey,
                        batchID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void eraseBookingAsync(string sessionKey, string batchID) {
            this.eraseBookingAsync(sessionKey, batchID, null);
        }
        
        /// <remarks/>
        public void eraseBookingAsync(string sessionKey, string batchID, object userState) {
            if ((this.eraseBookingOperationCompleted == null)) {
                this.eraseBookingOperationCompleted = new System.Threading.SendOrPostCallback(this.OneraseBookingOperationCompleted);
            }
            this.InvokeAsync("eraseBooking", new object[] {
                        sessionKey,
                        batchID}, this.eraseBookingOperationCompleted, userState);
        }
        
        private void OneraseBookingOperationCompleted(object arg) {
            if ((this.eraseBookingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.eraseBookingCompleted(this, new eraseBookingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDeliveryStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getDeliveryStatus(string sessionKey, string batchID, string pageNo) {
            object[] results = this.Invoke("getDeliveryStatus", new object[] {
                        sessionKey,
                        batchID,
                        pageNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDeliveryStatusAsync(string sessionKey, string batchID, string pageNo) {
            this.getDeliveryStatusAsync(sessionKey, batchID, pageNo, null);
        }
        
        /// <remarks/>
        public void getDeliveryStatusAsync(string sessionKey, string batchID, string pageNo, object userState) {
            if ((this.getDeliveryStatusOperationCompleted == null)) {
                this.getDeliveryStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDeliveryStatusOperationCompleted);
            }
            this.InvokeAsync("getDeliveryStatus", new object[] {
                        sessionKey,
                        batchID,
                        pageNo}, this.getDeliveryStatusOperationCompleted, userState);
        }
        
        private void OngetDeliveryStatusOperationCompleted(object arg) {
            if ((this.getDeliveryStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDeliveryStatusCompleted(this, new getDeliveryStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCredit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getCredit(string sessionKey) {
            object[] results = this.Invoke("getCredit", new object[] {
                        sessionKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCreditAsync(string sessionKey) {
            this.getCreditAsync(sessionKey, null);
        }
        
        /// <remarks/>
        public void getCreditAsync(string sessionKey, object userState) {
            if ((this.getCreditOperationCompleted == null)) {
                this.getCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCreditOperationCompleted);
            }
            this.InvokeAsync("getCredit", new object[] {
                        sessionKey}, this.getCreditOperationCompleted, userState);
        }
        
        private void OngetCreditOperationCompleted(object arg) {
            if ((this.getCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCreditCompleted(this, new getCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFreePhoneCallinLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getFreePhoneCallinLog(string sessionKey, string activityID, string beginDate, string endDate, string pageNo) {
            object[] results = this.Invoke("getFreePhoneCallinLog", new object[] {
                        sessionKey,
                        activityID,
                        beginDate,
                        endDate,
                        pageNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFreePhoneCallinLogAsync(string sessionKey, string activityID, string beginDate, string endDate, string pageNo) {
            this.getFreePhoneCallinLogAsync(sessionKey, activityID, beginDate, endDate, pageNo, null);
        }
        
        /// <remarks/>
        public void getFreePhoneCallinLogAsync(string sessionKey, string activityID, string beginDate, string endDate, string pageNo, object userState) {
            if ((this.getFreePhoneCallinLogOperationCompleted == null)) {
                this.getFreePhoneCallinLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFreePhoneCallinLogOperationCompleted);
            }
            this.InvokeAsync("getFreePhoneCallinLog", new object[] {
                        sessionKey,
                        activityID,
                        beginDate,
                        endDate,
                        pageNo}, this.getFreePhoneCallinLogOperationCompleted, userState);
        }
        
        private void OngetFreePhoneCallinLogOperationCompleted(object arg) {
            if ((this.getFreePhoneCallinLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFreePhoneCallinLogCompleted(this, new getFreePhoneCallinLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getConnectionCompletedEventHandler(object sender, getConnectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void closeConnectionCompletedEventHandler(object sender, closeConnectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class closeConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal closeConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void sendSMSCompletedEventHandler(object sender, sendSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void sendParamSMSCompletedEventHandler(object sender, sendParamSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendParamSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendParamSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void eraseBookingCompletedEventHandler(object sender, eraseBookingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class eraseBookingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal eraseBookingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getDeliveryStatusCompletedEventHandler(object sender, getDeliveryStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDeliveryStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDeliveryStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getCreditCompletedEventHandler(object sender, getCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getFreePhoneCallinLogCompletedEventHandler(object sender, getFreePhoneCallinLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFreePhoneCallinLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFreePhoneCallinLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591